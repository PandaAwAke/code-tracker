/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.yarn.api.records;

public abstract class ApplicationId implements Comparable<ApplicationId> {
  public abstract int getId();
  public abstract long getClusterTimestamp();
  
  public abstract void setId(int id);
  public abstract void setClusterTimestamp(long clusterTimestamp);
  
  
  @Override
  public int compareTo(ApplicationId other) {
    if (this.getClusterTimestamp() - other.getClusterTimestamp() == 0) {
      return this.getId() - other.getId();
    } else {
      return this.getClusterTimestamp() > other.getClusterTimestamp() ? 1 : 
        this.getClusterTimestamp() < other.getClusterTimestamp() ? -1 : 0;
    }
  }

  @Override
  public String toString() {
    return "application_" + this.getClusterTimestamp() + "_" + this.getId();
  }
  
  @Override
  public int hashCode() {
    // Generated by eclipse.
    final int prime = 31;
    int result = 1;
    long clusterTimestamp = getClusterTimestamp();
    result = prime * result
        + (int) (clusterTimestamp ^ (clusterTimestamp >>> 32));
    result = prime * result + getId();
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == null) return false;
    if (other.getClass().isAssignableFrom(this.getClass())) {
      ApplicationId otherAppId = (ApplicationId)other;
      if (this.getClusterTimestamp() == otherAppId.getClusterTimestamp() &&
          this.getId() == otherAppId.getId()) {
        return true;
      }
    }
    return false;
  }
}
