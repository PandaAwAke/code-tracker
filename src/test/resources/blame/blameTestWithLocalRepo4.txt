f415fb00b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 1)   package com.github.javaparser.printer.lexicalpreservation;
                                                                                                                                                                          2)
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 3)   import com.github.javaparser.GeneratedJavaParserConstants;
b29a46525 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:35:48 +0000 4)   import com.github.javaparser.TokenTypes;
f415fb00b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 5)   import com.github.javaparser.ast.Node;
3a31705ba javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-11-13 19:21:11 +0000 6)   import com.github.javaparser.ast.comments.Comment;
9e91a1d76 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 7)   import com.github.javaparser.printer.concretesyntaxmodel.*;
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 8)   import com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculator.CsmChild;
                                                                                                                                                                          9)
4b87b2b6b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:20:07 +0000 10)  import java.util.*;
                                                                                                                                                                          11)
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 12)  import static com.github.javaparser.GeneratedJavaParserConstants.*;
                                                                                                                                                                          13)
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 14)  /**
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 15)   * A Difference should give me a sequence of elements I should find (to indicate the context) followed by a list of elements
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 16)   * to remove or to add and follow by another sequence of elements.
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 17)   *
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 18)   * I should later be able to apply such difference to a nodeText.
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 19)   */
f415fb00b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 20)  public class Difference {
                                                                                                                                                                          21)
8cd140da3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2018-07-13 07:36:02 +0000 22)      public static final int STANDARD_INDENTATION_SIZE = 4;
                                                                                                                                                                          23)
b9976c5e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:36:23 +0000 24)      private final NodeText nodeText;
b9976c5e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:36:23 +0000 25)      private final Node node;
                                                                                                                                                                          26)
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 27)      private final List<DifferenceElement> diffElements;
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 28)      private final List<TextElement> originalElements;
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 29)      private int originalIndex = 0;
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 30)      private int diffIndex = 0;
                                                                                                                                                                          31)
c35fbac21 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:23:45 +0000 32)      private final List<TokenTextElement> indentation;
c35fbac21 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:23:45 +0000 33)      private boolean addedIndentation = false;
                                                                                                                                                                          34)
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 35)      Difference(List<DifferenceElement> diffElements, NodeText nodeText, Node node) {
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 36)          if (nodeText == null) {
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 37)              throw new NullPointerException("nodeText can not be null");
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 38)          }
                                                                                                                                                                          39)
b9976c5e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:36:23 +0000 40)          this.nodeText = nodeText;
b9976c5e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:36:23 +0000 41)          this.node = node;
04f28d402 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:42:18 +0000 42)          this.diffElements = diffElements;
29a9b8bcb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:49:25 +0000 43)          this.originalElements = nodeText.getElements();
                                                                                                                                                                          44)
c35fbac21 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:23:45 +0000 45)          this.indentation = LexicalPreservingPrinter.findIndentation(node);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 46)      }
                                                                                                                                                                          47)
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 48)      private List<TextElement> processIndentation(List<TokenTextElement> indentation, List<TextElement> prevElements) {
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 49)          List<TextElement> res = new LinkedList<>();
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 50)          res.addAll(indentation);
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 51)          boolean afterNl = false;
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 52)          for (TextElement e : prevElements) {
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 53)              if (e.isNewline() || e.isToken(SINGLE_LINE_COMMENT)) {
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 54)                  res.clear();
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 55)                  afterNl = true;
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 56)              } else {
b29a46525 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:35:48 +0000 57)                  if (afterNl && e instanceof TokenTextElement && TokenTypes.isWhitespace(((TokenTextElement)e).getTokenKind())) {
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 58)                      res.add(e);
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 59)                  } else {
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 60)                      afterNl = false;
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 61)                  }
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 62)              }
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 63)          }
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 64)          return res;
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 65)      }
                                                                                                                                                                          66)
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 67)      private List<TextElement> indentationBlock() {
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 68)          List<TextElement> res = new LinkedList<>();
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 69)          res.add(new TokenTextElement(SPACE));
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 70)          res.add(new TokenTextElement(SPACE));
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 71)          res.add(new TokenTextElement(SPACE));
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 72)          res.add(new TokenTextElement(SPACE));
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 73)          return res;
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 74)      }
                                                                                                                                                                          75)
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 76)      private boolean isAfterLBrace(NodeText nodeText, int nodeTextIndex) {
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 77)          if (nodeTextIndex > 0 && nodeText.getElements().get(nodeTextIndex - 1).isToken(LBRACE)) {
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 78)              return true;
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 79)          }
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 80)          if (nodeTextIndex > 0 && nodeText.getElements().get(nodeTextIndex - 1).isSpaceOrTab()) {
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 81)              return isAfterLBrace(nodeText, nodeTextIndex - 1);
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 82)          }
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 83)          return false;
548fb9c5a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 84)      }
                                                                                                                                                                          85)
23226e3be javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-08-12 22:08:50 +0000 86)      /**
23226e3be javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-08-12 22:08:50 +0000 87)       * If we are at the beginning of a line, with just spaces or tabs before us we should force the space to be
23226e3be javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-08-12 22:08:50 +0000 88)       * the same as the indentation.
23226e3be javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-08-12 22:08:50 +0000 89)       */
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 90)      private int considerEnforcingIndentation(NodeText nodeText, int nodeTextIndex) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 91)          boolean hasOnlyWsBefore = true;
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 92)          for (int i = nodeTextIndex; i >= 0 && hasOnlyWsBefore && i < nodeText.getElements().size(); i--) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 93)              if (nodeText.getElements().get(i).isNewline()) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 94)                  break;
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 95)              }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 96)              if (!nodeText.getElements().get(i).isSpaceOrTab()) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 97)                  hasOnlyWsBefore = false;
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 98)              }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 99)          }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 100)         if (hasOnlyWsBefore) {
7a48b21bb javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-07-19 15:12:51 +0000 101)             for (int i = nodeTextIndex; i >= 0 && i < nodeText.getElements().size(); i--) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 102)                 if (nodeText.getElements().get(i).isNewline()) {
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 103)                     break;
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 104)                 }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 105)                 nodeText.removeElement(i);
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 106)             }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 107)         }
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 108)         return nodeTextIndex;
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 109)     }
                                                                                                                                                                          110)
15cb49e74 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 17:39:44 +0000 111)     /**
15cb49e74 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 17:39:44 +0000 112)      * Node that we have calculate the Difference we can apply to a concrete NodeText, modifying it according
15cb49e74 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 17:39:44 +0000 113)      * to the difference (adding and removing the elements provided).
15cb49e74 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 17:39:44 +0000 114)      */
b9976c5e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:36:23 +0000 115)     void apply() {
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 116)         extractReshuffledDiffElements(diffElements);
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 117)         Map<Removed, RemovedGroup> removedGroups = combineRemovedElementsToRemovedGroups();
                                                                                                                                                                          118)
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 119)         do {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 120)             boolean isLeftOverDiffElement = applyLeftOverDiffElements();
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 121)             boolean isLeftOverOriginalElement = applyLeftOverOriginalElements();
                                                                                                                                                                          122)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 123)             if (!isLeftOverDiffElement && !isLeftOverOriginalElement){
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 124)                 DifferenceElement diffElement = diffElements.get(diffIndex);
                                                                                                                                                                          125)
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 126)                 if (diffElement instanceof Added) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 127)                     applyAddedDiffElement((Added) diffElement);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 128)                 } else {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 129)                     TextElement originalElement = originalElements.get(originalIndex);
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 130)                     boolean originalElementIsChild = originalElement instanceof ChildTextElement;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 131)                     boolean originalElementIsToken = originalElement instanceof TokenTextElement;
                                                                                                                                                                          132)
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 133)                     if (diffElement instanceof Kept) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 134)                         applyKeptDiffElement((Kept) diffElement, originalElement, originalElementIsChild, originalElementIsToken);
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 135)                     } else if (diffElement instanceof Removed) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 136)                         Removed removed = (Removed) diffElement;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 137)                         applyRemovedDiffElement(removedGroups.get(removed), removed, originalElement, originalElementIsChild, originalElementIsToken);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 138)                     } else {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 139)                         throw new UnsupportedOperationException("" + diffElement + " vs " + originalElement);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 140)                     }
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 141)                 }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 142)             }
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 143)         } while (diffIndex < diffElements.size() || originalIndex < originalElements.size());
                                                                                                                                                                          144)     }
                                                                                                                                                                          145)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 146)     private boolean applyLeftOverOriginalElements() {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 147)         boolean isLeftOverElement = false;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 148)         if (diffIndex >= diffElements.size() && originalIndex < originalElements.size()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 149)             TextElement originalElement = originalElements.get(originalIndex);
                                                                                                                                                                          150)
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 151)             if (originalElement.isWhiteSpaceOrComment()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 152)                 originalIndex++;
f4ce6ce92 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 153)             } else {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 154)                 throw new UnsupportedOperationException("NodeText: " + nodeText + ". Difference: "
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 155)                         + this + " " + originalElement);
f4ce6ce92 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 156)             }
                                                                                                                                                                          157)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 158)             isLeftOverElement = true;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 159)         }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 160)         return isLeftOverElement;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 161)     }
                                                                                                                                                                          162)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 163)     private boolean applyLeftOverDiffElements() {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 164)         boolean isLeftOverElement = false;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 165)         if (diffIndex < diffElements.size() && originalIndex >= originalElements.size()) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 166)             DifferenceElement diffElement = diffElements.get(diffIndex);
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 167)             if (diffElement instanceof Kept) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 168)                 Kept kept = (Kept) diffElement;
                                                                                                                                                                          169)
0a54807d5 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Jooyung Han         2018-05-29 06:28:48 +0000 170)                 if (kept.isWhiteSpaceOrComment() || kept.isIndent() || kept.isUnindent()) {
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 171)                     diffIndex++;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 172)                 } else {
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 173)                     throw new IllegalStateException("Cannot keep element because we reached the end of nodetext: "
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 174)                             + nodeText + ". Difference: " + this);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 175)                 }
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 176)             } else if (diffElement instanceof Added) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 177)                 Added addedElement = (Added) diffElement;
                                                                                                                                                                          178)
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 179)                 nodeText.addElement(originalIndex, addedElement.toTextElement());
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 180)                 originalIndex++;
01e9c9079 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 181)                 diffIndex++;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 182)             } else {
fb8daf167 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 21:24:24 +0000 183)                 throw new UnsupportedOperationException(diffElement.getClass().getSimpleName());
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 184)             }
                                                                                                                                                                          185)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 186)             isLeftOverElement = true;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 187)         }
                                                                                                                                                                          188)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 189)         return isLeftOverElement;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 190)     }
                                                                                                                                                                          191)
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 192)     private void extractReshuffledDiffElements(List<DifferenceElement> diffElements) {
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 193)         for (int index = 0; index < diffElements.size(); index++) {
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 194)             DifferenceElement diffElement = diffElements.get(index);
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 195)             if (diffElement instanceof Reshuffled) {
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 196)                 Reshuffled reshuffled = (Reshuffled) diffElement;
                                                                                                                                                                          197)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 198)                 // First, let's see how many tokens we need to attribute to the previous version of the of the CsmMix
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 199)                 CsmMix elementsFromPreviousOrder = reshuffled.getPreviousOrder();
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 200)                 CsmMix elementsFromNextOrder = reshuffled.getNextOrder();
                                                                                                                                                                          201)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 202)                 // This contains indexes from elementsFromNextOrder to indexes from elementsFromPreviousOrder
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 203)                 Map<Integer, Integer> correspondanceBetweenNextOrderAndPreviousOrder = getCorrespondanceBetweenNextOrderAndPreviousOrder(elementsFromPreviousOrder, elementsFromNextOrder);
                                                                                                                                                                          204)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 205)                 // We now find out which Node Text elements corresponds to the elements in the original CSM
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 206)                 List<Integer> nodeTextIndexOfPreviousElements = findIndexOfCorrespondingNodeTextElement(elementsFromPreviousOrder.getElements(), nodeText, originalIndex, node);
                                                                                                                                                                          207)
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 208)                 Map<Integer, Integer> nodeTextIndexToPreviousCSMIndex = new HashMap<>();
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 209)                 for (int i = 0; i < nodeTextIndexOfPreviousElements.size(); i++) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 210)                     int value = nodeTextIndexOfPreviousElements.get(i);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 211)                     if (value != -1) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 212)                         nodeTextIndexToPreviousCSMIndex.put(value, i);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 213)                     }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 214)                 }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 215)                 int lastNodeTextIndex = nodeTextIndexOfPreviousElements.stream().max(Integer::compareTo).orElse(-1);
                                                                                                                                                                          216)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 217)                 // Elements to be added at the end
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 218)                 List<CsmElement> elementsToBeAddedAtTheEnd = new LinkedList<>();
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 219)                 List<CsmElement> nextOrderElements = elementsFromNextOrder.getElements();
                                                                                                                                                                          220)
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 221)                 Map<Integer, List<CsmElement>> elementsToAddBeforeGivenOriginalCSMElement = new HashMap<>();
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 222)                 for (int ni = 0; ni < nextOrderElements.size(); ni++) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 223)                     // If it has a mapping, then it is kept
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 224)                     if (!correspondanceBetweenNextOrderAndPreviousOrder.containsKey(ni)) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 225)                         // Ok, it is something new. Where to put it? Let's see what is the first following
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 226)                         // element that has a mapping
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 227)                         int originalCsmIndex = -1;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 228)                         for (int nj = ni + 1; nj < nextOrderElements.size() && originalCsmIndex == -1; nj++) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 229)                             if (correspondanceBetweenNextOrderAndPreviousOrder.containsKey(nj)) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 230)                                 originalCsmIndex = correspondanceBetweenNextOrderAndPreviousOrder.get(nj);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 231)                                 if (!elementsToAddBeforeGivenOriginalCSMElement.containsKey(originalCsmIndex)) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 232)                                     elementsToAddBeforeGivenOriginalCSMElement.put(originalCsmIndex, new LinkedList<>());
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 233)                                 }
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 234)                                 elementsToAddBeforeGivenOriginalCSMElement.get(originalCsmIndex).add(nextOrderElements.get(ni));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 235)                             }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 236)                         }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 237)                         // it does not preceed anything, so it goes at the end
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 238)                         if (originalCsmIndex == -1) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 239)                             elementsToBeAddedAtTheEnd.add(nextOrderElements.get(ni));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 240)                         }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 241)                     }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 242)                 }
                                                                                                                                                                          243)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 244)                 // We go over the original node text elements, in the order they appear in the NodeText.
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 245)                 // Considering an original node text element (ONE)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 246)                 // * we verify if it corresponds to a CSM element. If it does not we just move on, otherwise
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 247)                 //   we find the correspond OCE (Original CSM Element)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 248)                 // * we first add new elements that are marked to be added before OCE
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 249)                 // * if OCE is marked to be present also in the "after" CSM we add a kept element,
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 250)                 //   otherwise we add a removed element
                                                                                                                                                                          251)
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 252)                 // Remove the whole Reshuffled element
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 253)                 diffElements.remove(index);
                                                                                                                                                                          254)
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 255)                 int diffElIterator = index;
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 256)                 if (lastNodeTextIndex != -1) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 257)                     for (int ntIndex = originalIndex; ntIndex <= lastNodeTextIndex; ntIndex++) {
                                                                                                                                                                          258)
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 259)                         if (nodeTextIndexToPreviousCSMIndex.containsKey(ntIndex)) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 260)                             int indexOfOriginalCSMElement = nodeTextIndexToPreviousCSMIndex.get(ntIndex);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 261)                             if (elementsToAddBeforeGivenOriginalCSMElement.containsKey(indexOfOriginalCSMElement)) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 262)                                 for (CsmElement elementToAdd : elementsToAddBeforeGivenOriginalCSMElement.get(indexOfOriginalCSMElement)) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 263)                                     diffElements.add(diffElIterator++, new Added(elementToAdd));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 264)                                 }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 265)                             }
                                                                                                                                                                          266)
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 267)                             CsmElement originalCSMElement = elementsFromPreviousOrder.getElements().get(indexOfOriginalCSMElement);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 268)                             boolean toBeKept = correspondanceBetweenNextOrderAndPreviousOrder.containsValue(indexOfOriginalCSMElement);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 269)                             if (toBeKept) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 270)                                 diffElements.add(diffElIterator++, new Kept(originalCSMElement));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 271)                             } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 272)                                 diffElements.add(diffElIterator++, new Removed(originalCSMElement));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 273)                             }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 274)                         }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 275)                         // else we have a simple node text element, without associated csm element, just keep ignore it
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 276)                     }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 277)                 }
                                                                                                                                                                          278)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 279)                 // Finally we look for the remaining new elements that were not yet added and
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 280)                 // add all of them
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 281)                 for (CsmElement elementToAdd : elementsToBeAddedAtTheEnd) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 282)                     diffElements.add(diffElIterator++, new Added(elementToAdd));
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 283)                 }
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 284)             }
996b78486 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 285)         }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 286)     }
                                                                                                                                                                          287)
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 288)     /**
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 289)      * Maps all Removed elements as keys to their corresponding RemovedGroup.
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 290)      * A RemovedGroup contains all consecutive Removed elements.
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 291)      * <br/>
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 292)      * Example:
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 293)      * <pre>
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 294)      * Elements: Kept|Removed1|Removed2|Kept|Removed3|Added|Removed4
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 295)      * Groups:        <----Group1---->       Group2         Group3
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 296)      * Keys:          Removed1+Removed2      Removed3       Removed4
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 297)      * </pre>
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 298)      *
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 299)      * @return Map with all Removed elements as keys to their corresponding RemovedGroup
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 300)      */
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 301)     private Map<Removed, RemovedGroup> combineRemovedElementsToRemovedGroups() {
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 302)         Map<Integer, List<Removed>> removedElementsMap = groupConsecutiveRemovedElements();
                                                                                                                                                                          303)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 304)         List<RemovedGroup> removedGroups = new ArrayList<>();
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 305)         for (Map.Entry<Integer, List<Removed>> entry : removedElementsMap.entrySet()) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 306)             removedGroups.add(RemovedGroup.of(entry.getKey(), entry.getValue()));
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 307)         }
                                                                                                                                                                          308)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 309)         Map<Removed, RemovedGroup> map = new HashMap<>();
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 310)         for (RemovedGroup removedGroup : removedGroups){
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 311)             for (Removed index : removedGroup) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 312)                 map.put(index, removedGroup);
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 313)             }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 314)         }
                                                                                                                                                                          315)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 316)         return map;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 317)     }
                                                                                                                                                                          318)
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 319)     private Map<Integer, List<Removed>> groupConsecutiveRemovedElements() {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 320)         Map<Integer, List<Removed>> removedElementsMap = new HashMap<>();
                                                                                                                                                                          321)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 322)         Integer firstElement = null;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 323)         for (int i = 0; i < diffElements.size(); i++) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 324)             DifferenceElement diffElement = diffElements.get(i);
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 325)             if (diffElement instanceof Removed) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 326)                 if (firstElement == null) {
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 327)                     firstElement = i;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 328)                 }
                                                                                                                                                                          329)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 330)                 removedElementsMap.computeIfAbsent(firstElement, key -> new ArrayList<>())
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 331)                         .add((Removed) diffElement);
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 332)             } else {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 333)                 firstElement = null;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 334)             }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 335)         }
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 336)         return removedElementsMap;
797bf5367 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 337)     }
                                                                                                                                                                          338)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 339)     private void applyRemovedDiffElement(RemovedGroup removedGroup, Removed removed, TextElement originalElement, boolean originalElementIsChild, boolean originalElementIsToken) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 340)         if (removed.isChild() && originalElementIsChild) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 341)             ChildTextElement originalElementChild = (ChildTextElement) originalElement;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 342)             if (originalElementChild.isComment()) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 343)                 // We expected to remove a proper node but we found a comment in between.
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 344)                 // If the comment is associated to the node we want to remove we remove it as well, otherwise we keep it
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 345)                 Comment comment = (Comment) originalElementChild.getChild();
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 346)                 if (!comment.isOrphan() && comment.getCommentedNode().isPresent() && comment.getCommentedNode().get().equals(removed.getChild())) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 347)                     nodeText.removeElement(originalIndex);
3a31705ba javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-11-13 19:21:11 +0000 348)                 } else {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 349)                     originalIndex++;
3a31705ba javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-11-13 19:21:11 +0000 350)                 }
3a31705ba javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-11-13 19:21:11 +0000 351)             } else {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 352)                 nodeText.removeElement(originalIndex);
                                                                                                                                                                          353)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 354)                 if ((diffIndex + 1 >= diffElements.size() || !(diffElements.get(diffIndex + 1) instanceof Added))
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 355)                         && !removedGroup.isACompleteLine()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 356)                     originalIndex = considerEnforcingIndentation(nodeText, originalIndex);
ed7f4a653 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 357)                 }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 358)                 // If in front we have one space and before also we had space let's drop one space
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 359)                 if (originalElements.size() > originalIndex && originalIndex > 0) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 360)                     if (originalElements.get(originalIndex).isWhiteSpace()
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 361)                             && originalElements.get(originalIndex - 1).isWhiteSpace()) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 362)                         // However we do not want to do that when we are about to adding or removing elements
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 363)                         if ((diffIndex + 1) == diffElements.size() || (diffElements.get(diffIndex + 1) instanceof Kept)) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 364)                             originalElements.remove(originalIndex--);
74dc0e58a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 365)                         }
74dc0e58a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 366)                     }
74dc0e58a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 367)                 }
                                                                                                                                                                          368)
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 369)                 diffIndex++;
3a31705ba javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-11-13 19:21:11 +0000 370)             }
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 371)         } else if (removed.isToken() && originalElementIsToken
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 372)                 && (removed.getTokenType() == ((TokenTextElement) originalElement).getTokenKind())) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 373)             nodeText.removeElement(originalIndex);
01e9c9079 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 374)             diffIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 375)         } else if (originalElementIsToken && originalElement.isWhiteSpaceOrComment()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 376)             originalIndex++;
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 377)         } else if (removed.isPrimitiveType()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 378)             if (isPrimitiveType(originalElement)) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 379)                 nodeText.removeElement(originalIndex);
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 380)                 diffIndex++;
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 381)             } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 382)                 throw new UnsupportedOperationException("removed " + removed.getElement() + " vs " + originalElement);
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 383)             }
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 384)         } else if (removed.isWhiteSpace()) {
f0f313058 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 385)             diffIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 386)         } else if (originalElement.isWhiteSpace()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 387)             originalIndex++;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 388)         } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 389)             throw new UnsupportedOperationException("removed " + removed.getElement() + " vs " + originalElement);
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 390)         }
                                                                                                                                                                          391)
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 392)         cleanTheLineOfLeftOverSpace(removedGroup, removed);
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 393)     }
                                                                                                                                                                          394)
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 395)     /**
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 396)      * Cleans the line of left over space if there is unnecessary indentation and the element will not be replaced
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 397)      */
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 398)     private void cleanTheLineOfLeftOverSpace(RemovedGroup removedGroup, Removed removed) {
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 399)         if (originalIndex >= originalElements.size()) {
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 400)             // if all elements were already processed there is nothing to do
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 401)             return;
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 402)         }
                                                                                                                                                                          403)
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 404)         if (!removedGroup.isProcessed()
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 405)                 && removedGroup.getLastElement() == removed
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 406)                 && removedGroup.isACompleteLine()) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 407)             Integer lastElementIndex = removedGroup.getLastElementIndex();
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 408)             Optional<Integer> indentation = removedGroup.getIndentation();
                                                                                                                                                                          409)
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 410)             if (indentation.isPresent() && !isReplaced(lastElementIndex)) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 411)                 for (int i = 0; i < indentation.get(); i++) {
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 412)                     if (originalElements.get(originalIndex).isSpaceOrTab()) {
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 413)                         // If the current element is a space, remove it
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 414)                         nodeText.removeElement(originalIndex);
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 415)                     } else if (originalIndex >= 1 && originalElements.get(originalIndex - 1).isSpaceOrTab()) {
b8035a7ac javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 416)                         // If the current element is not a space itself we remove the space in front of it
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 417)                         nodeText.removeElement(originalIndex - 1);
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 418)                         originalIndex--;
882790065 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 419)                     }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 420)                 }
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 421)             }
                                                                                                                                                                          422)
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 423)             // Mark RemovedGroup as processed
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 424)             removedGroup.processed();
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 425)         }
4f9e0c67e javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 426)     }
                                                                                                                                                                          427)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 428)     private void applyKeptDiffElement(Kept kept, TextElement originalElement, boolean originalElementIsChild, boolean originalElementIsToken) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 429)         if (originalElement.isComment()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 430)             originalIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 431)         } else if (kept.isChild() && originalElementIsChild) {
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 432)             diffIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 433)             originalIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 434)         } else if (kept.isChild() && originalElementIsToken) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 435)             if (originalElement.isWhiteSpaceOrComment()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 436)                 originalIndex++;
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 437)             } else {
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 438)                 if (kept.isPrimitiveType()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 439)                     originalIndex++;
ecefb7772 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 440)                     diffIndex++;
ecefb7772 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 441)                 } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 442)                     throw new UnsupportedOperationException("kept " + kept.getElement() + " vs " + originalElement);
ecefb7772 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 443)                 }
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 444)             }
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 445)         } else if (kept.isToken() && originalElementIsToken) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 446)             TokenTextElement originalTextToken = (TokenTextElement) originalElement;
                                                                                                                                                                          447)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 448)             if (kept.getTokenType() == originalTextToken.getTokenKind()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 449)                 originalIndex++;
f4ce6ce92 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 450)                 diffIndex++;
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 451)             } else if (kept.isWhiteSpaceOrComment()) {
01e9c9079 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 452)                 diffIndex++;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 453)             } else if (originalTextToken.isWhiteSpaceOrComment()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 454)                 originalIndex++;
f4ce6ce92 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 455)             } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 456)                 throw new UnsupportedOperationException("Csm token " + kept.getElement() + " NodeText TOKEN " + originalTextToken);
f4ce6ce92 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 457)             }
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 458)         } else if (kept.isWhiteSpace()) {
b2625a83a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 459)             diffIndex++;
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 460)         } else if (kept.isIndent()) {
a31908d22 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 461)             diffIndex++;
de5c17c37 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-17 22:47:50 +0000 462)         } else if (kept.isUnindent()) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 463)             // Nothing to do, beside considering indentation
a31908d22 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 464)             diffIndex++;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 465)             for (int i = 0; i < STANDARD_INDENTATION_SIZE && originalIndex >= 1 && nodeText.getTextElement(originalIndex - 1).isSpaceOrTab(); i++) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 466)                 nodeText.removeElement(--originalIndex);
5689cad20 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 467)             }
adb78b277 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-03-05 10:02:36 +0000 468)         } else {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 469)             throw new UnsupportedOperationException("kept " + kept.getElement() + " vs " + originalElement);
adb78b277 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-03-05 10:02:36 +0000 470)         }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 471)     }
                                                                                                                                                                          472)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 473)     private void applyAddedDiffElement(Added added) {
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 474)         if (added.isIndent()) {
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 475)             for (int i=0;i<STANDARD_INDENTATION_SIZE;i++){
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 476)                 indentation.add(new TokenTextElement(GeneratedJavaParserConstants.SPACE));
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 477)             }
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 478)             addedIndentation = true;
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 479)             diffIndex++;
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 480)             return;
488ccb119 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 481)         }
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 482)         if (added.isUnindent()) {
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 483)             for (int i = 0; i<STANDARD_INDENTATION_SIZE && !indentation.isEmpty(); i++){
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 484)                 indentation.remove(indentation.size() - 1);
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 485)             }
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 486)             addedIndentation = false;
488ccb119 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 487)             diffIndex++;
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 488)             return;
488ccb119 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 489)         }
                                                                                                                                                                          490)
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 491)         TextElement addedTextElement = added.toTextElement();
572ea8939 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 492)         boolean used = false;
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 493)         if (originalIndex > 0 && originalElements.get(originalIndex - 1).isNewline()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 494)             for (TextElement e : processIndentation(indentation, originalElements.subList(0, originalIndex - 1))) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 495)                 nodeText.addElement(originalIndex++, e);
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 496)             }
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 497)         } else if (isAfterLBrace(nodeText, originalIndex) && !isAReplacement(diffIndex)) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 498)             if (addedTextElement.isNewline()) {
572ea8939 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 499)                 used = true;
572ea8939 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 500)             }
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 501)             nodeText.addElement(originalIndex++, new TokenTextElement(TokenTypes.eolTokenKind()));
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 502)             // This remove the space in "{ }" when adding a new line
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 503)             while (originalElements.get(originalIndex).isSpaceOrTab()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 504)                 originalElements.remove(originalIndex);
152592f7c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 505)             }
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 506)             for (TextElement e : processIndentation(indentation, originalElements.subList(0, originalIndex - 1))) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 507)                 nodeText.addElement(originalIndex++, e);
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 508)             }
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 509)             // Indentation is painful...
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 510)             // Sometimes we want to force indentation: this is the case when indentation was expected but
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 511)             // was actually not there. For example if we have "{ }" we would expect indentation but it is
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 512)             // not there, so when adding new elements we force it. However if the indentation has been
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 513)             // inserted by us in this transformation we do not want to insert it again
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 514)             if (!addedIndentation) {
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 515)                 for (TextElement e : indentationBlock()) {
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 516)                     nodeText.addElement(originalIndex++, e);
48ac9477b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 517)                 }
ad402162f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 518)             }
5d76ede0d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 519)         }
                                                                                                                                                                          520)
572ea8939 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 521)         if (!used) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 522)             nodeText.addElement(originalIndex, addedTextElement);
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 523)             originalIndex++;
572ea8939 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 524)         }
                                                                                                                                                                          525)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 526)         if (addedTextElement.isNewline()) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 527)             boolean followedByUnindent = isFollowedByUnindent(diffElements, diffIndex);
2ae6f779c javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 20:05:42 +0000 528)             originalIndex = adjustIndentation(indentation, nodeText, originalIndex, followedByUnindent/* && !addedIndentation*/);
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 529)         }
                                                                                                                                                                          530)
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 531)         diffIndex++;
b7bd15d12 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:34:00 +0000 532)     }
                                                                                                                                                                          533)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 534)     private Map<Integer, Integer> getCorrespondanceBetweenNextOrderAndPreviousOrder(CsmMix elementsFromPreviousOrder, CsmMix elementsFromNextOrder) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 535)         Map<Integer, Integer> correspondanceBetweenNextOrderAndPreviousOrder = new HashMap<>();
                                                                                                                                                                          536)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 537)         List<CsmElement> nextOrderElements = elementsFromNextOrder.getElements();
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 538)         for (int ni = 0; ni< nextOrderElements.size(); ni++) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 539)             boolean found = false;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 540)             CsmElement ne = nextOrderElements.get(ni);
                                                                                                                                                                          541)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 542)             List<CsmElement> previousOrderElements = elementsFromPreviousOrder.getElements();
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 543)             for (int pi = 0; pi< previousOrderElements.size() && !found; pi++) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 544)                 CsmElement pe = previousOrderElements.get(pi);
40f6fef07 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:51:14 +0000 545)                 if (!correspondanceBetweenNextOrderAndPreviousOrder.values().contains(pi)
40f6fef07 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:51:14 +0000 546)                         && DifferenceElementCalculator.matching(ne, pe)) {
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 547)                     found = true;
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 548)                     correspondanceBetweenNextOrderAndPreviousOrder.put(ni, pi);
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 549)                 }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 550)             }
f8d5e2fda javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 551)         }
                                                                                                                                                                          552)
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 553)         return correspondanceBetweenNextOrderAndPreviousOrder;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 554)     }
                                                                                                                                                                          555)
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 556)     private boolean isFollowedByUnindent(List<DifferenceElement> diffElements, int diffIndex) {
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 557)         return (diffIndex + 1) < diffElements.size()
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 558)                 && diffElements.get(diffIndex + 1).isAdded()
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 559)                 && diffElements.get(diffIndex + 1).getElement() instanceof CsmUnindent;
7f177dcaa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 21:48:21 +0000 560)     }
                                                                                                                                                                          561)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 562)     private List<Integer> findIndexOfCorrespondingNodeTextElement(List<CsmElement> elements, NodeText nodeText, int startIndex, Node node) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 563)         List<Integer> correspondingIndices = new ArrayList<>();
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 564)         for (ListIterator<CsmElement> csmElementListIterator = elements.listIterator(); csmElementListIterator.hasNext(); ) {
                                                                                                                                                                          565)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 566)             int previousCsmElementIndex = csmElementListIterator.previousIndex();
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 567)             CsmElement csmElement = csmElementListIterator.next();
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 568)             int nextCsmElementIndex = csmElementListIterator.nextIndex();
                                                                                                                                                                          569)
c4bbfa706 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:26:24 +0000 570)             Map<MatchClassification, Integer> potentialMatches = new EnumMap<>(MatchClassification.class);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 571)             for (int i = startIndex; i< nodeText.getElements().size(); i++){
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 572)                 if (!correspondingIndices.contains(i)) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 573)                     TextElement textElement = nodeText.getTextElement(i);
                                                                                                                                                                          574)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 575)                     boolean isCorresponding = isCorrespondingElement(textElement, csmElement, node);
                                                                                                                                                                          576)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 577)                     if (isCorresponding) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 578)                         boolean hasSamePreviousElement = false;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 579)                         if (i > 0 && previousCsmElementIndex > -1) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 580)                             TextElement previousTextElement = nodeText.getTextElement(i - 1);
                                                                                                                                                                          581)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 582)                             hasSamePreviousElement = isCorrespondingElement(previousTextElement, elements.get(previousCsmElementIndex), node);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 583)                         }
                                                                                                                                                                          584)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 585)                         boolean hasSameNextElement = false;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 586)                         if (i < nodeText.getElements().size() - 1 && nextCsmElementIndex < elements.size()) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 587)                             TextElement nextTextElement = nodeText.getTextElement(i + 1);
                                                                                                                                                                          588)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 589)                             hasSameNextElement = isCorrespondingElement(nextTextElement, elements.get(nextCsmElementIndex), node);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 590)                         }
                                                                                                                                                                          591)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 592)                         if (hasSamePreviousElement && hasSameNextElement) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 593)                             potentialMatches.putIfAbsent(MatchClassification.ALL, i);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 594)                         } else if (hasSamePreviousElement) {
ae539a6fa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 16:03:15 +0000 595)                             potentialMatches.putIfAbsent(MatchClassification.PREVIOUS_AND_SAME, i);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 596)                         } else if (hasSameNextElement) {
ae539a6fa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 16:03:15 +0000 597)                             potentialMatches.putIfAbsent(MatchClassification.NEXT_AND_SAME, i);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 598)                         } else {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 599)                             potentialMatches.putIfAbsent(MatchClassification.SAME_ONLY, i);
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 600)                         }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 601)                     }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 602)                 }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 603)             }
                                                                                                                                                                          604)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 605)             // Prioritize the matches from best to worst
c4bbfa706 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:26:24 +0000 606)             Optional<MatchClassification> bestMatchKey = potentialMatches.keySet().stream()
c4bbfa706 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:26:24 +0000 607)                     .min(Comparator.comparing(MatchClassification::getPriority));
                                                                                                                                                                          608)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 609)             if (bestMatchKey.isPresent()) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 610)                 correspondingIndices.add(potentialMatches.get(bestMatchKey.get()));
ae539a6fa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 16:03:15 +0000 611)             } else {
ae539a6fa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 16:03:15 +0000 612)                 correspondingIndices.add(-1);
ae539a6fa javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 16:03:15 +0000 613)             }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 614)         }
                                                                                                                                                                          615)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 616)         return correspondingIndices;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 617)     }
                                                                                                                                                                          618)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 619)     private enum MatchClassification {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 620)         ALL(1), PREVIOUS_AND_SAME(2), NEXT_AND_SAME(3), SAME_ONLY(4);
                                                                                                                                                                          621)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 622)         private final int priority;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 623)         MatchClassification(int priority) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 624)             this.priority = priority;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 625)         }
                                                                                                                                                                          626)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 627)         int getPriority() {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 628)             return priority;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 629)         }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 630)     }
                                                                                                                                                                          631)
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 632)     private boolean isCorrespondingElement(TextElement textElement, CsmElement csmElement, Node node) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 633)         if (csmElement instanceof CsmToken) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 634)             CsmToken csmToken = (CsmToken)csmElement;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 635)             if (textElement instanceof TokenTextElement) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 636)                 TokenTextElement tokenTextElement = (TokenTextElement)textElement;
c4bbfa706 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:26:24 +0000 637)                 return tokenTextElement.getTokenKind() == csmToken.getTokenType() && tokenTextElement.getText().equals(csmToken.getContent(node));
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 638)             }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 639)         } else if (csmElement instanceof CsmChild) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 640)             CsmChild csmChild = (CsmChild)csmElement;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 641)             if (textElement instanceof ChildTextElement) {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 642)                 ChildTextElement childTextElement = (ChildTextElement)textElement;
c4bbfa706 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-18 23:26:24 +0000 643)                 return childTextElement.getChild() == csmChild.getChild();
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 644)             }
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 645)         } else {
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 646)             throw new UnsupportedOperationException();
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 647)         }
                                                                                                                                                                          648)
51472755f javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 649)         return false;
5123e075b javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-11 01:47:00 +0000 650)     }
                                                                                                                                                                          651)
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 652)     private int adjustIndentation(List<TokenTextElement> indentation, NodeText nodeText, int nodeTextIndex, boolean followedByUnindent) {
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 653)         List<TextElement> indentationAdj = processIndentation(indentation, nodeText.getElements().subList(0, nodeTextIndex - 1));
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 654)         if (nodeTextIndex < nodeText.getElements().size() && nodeText.getElements().get(nodeTextIndex).isToken(RBRACE)) {
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 655)             indentationAdj = indentationAdj.subList(0, indentationAdj.size() - Math.min(STANDARD_INDENTATION_SIZE, indentationAdj.size()));
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 656)         } else if (followedByUnindent) {
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 657)             indentationAdj = indentationAdj.subList(0, Math.max(0, indentationAdj.size() - STANDARD_INDENTATION_SIZE));
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 658)         }
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 659)         for (TextElement e : indentationAdj) {
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 660)             if ((nodeTextIndex< nodeText.getElements().size()) && nodeText.getElements().get(nodeTextIndex).isSpaceOrTab()) {
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 661)                 nodeTextIndex++;
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 662)             } else {
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 663)                 nodeText.getElements().add(nodeTextIndex++, e);
10508ce2a javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-05-21 11:26:14 +0000 664)             }
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 665)         }
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 666)         return nodeTextIndex;
7121d100d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 667)     }
                                                                                                                                                                          668)
e71e376b9 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 669)     private boolean isAReplacement(int diffIndex) {
a25f53f88 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 01:15:57 +0000 670)         return (diffIndex > 0) && diffElements.get(diffIndex) instanceof Added && diffElements.get(diffIndex - 1) instanceof Removed;
e71e376b9 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 671)     }
                                                                                                                                                                          672)
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 673)     private boolean isReplaced(int diffIndex) {
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 674)         return (diffIndex < diffElements.size() - 1) && diffElements.get(diffIndex + 1) instanceof Added && diffElements.get(diffIndex) instanceof Removed;
2d3f5e219 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-06-07 20:54:17 +0000 675)     }
                                                                                                                                                                          676)
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 677)     private boolean isPrimitiveType(TextElement textElement) {
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 678)         if (textElement instanceof TokenTextElement) {
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 679)             TokenTextElement tokenTextElement = (TokenTextElement)textElement;
a55cd517d javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:20:07 +0000 680)             int tokenKind = tokenTextElement.getTokenKind();
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 681)             return tokenKind == BYTE
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 682)                 || tokenKind == CHAR
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 683)                 || tokenKind == SHORT
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 684)                 || tokenKind == INT
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 685)                 || tokenKind == LONG
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 686)                 || tokenKind == FLOAT
9192b9d17 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Danny van Bruggen   2017-03-06 16:15:04 +0000 687)                 || tokenKind == DOUBLE;
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 688)         } else {
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 689)             return false;
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 690)         }
26bf9b3ff javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Federico Tomassetti 2017-02-23 16:19:33 +0000 691)     }
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 692)     @Override
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 693)     public String toString() {
04f28d402 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java                  (Thomas Leu          2018-05-19 00:42:18 +0000 694)         return "Difference{" + diffElements + '}';
cc13f68e3 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 695)     }
c73ae5d79 javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java (Federico Tomassetti 2017-02-23 16:19:33 +0000 696) }
