0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 1)   ////////////////////////////////////////////////////////////////////////////////
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 2)   // checkstyle: Checks Java source code for adherence to a set of rules.
dabb75d43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2018-01-02 16:24:25 -0500 3)   // Copyright (C) 2001-2018 the original author or authors.
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 4)   //
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 5)   // This library is free software; you can redistribute it and/or
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 6)   // modify it under the terms of the GNU Lesser General Public
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 7)   // License as published by the Free Software Foundation; either
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 8)   // version 2.1 of the License, or (at your option) any later version.
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 9)   //
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 10)  // This library is distributed in the hope that it will be useful,
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 11)  // but WITHOUT ANY WARRANTY; without even the implied warranty of
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 12)  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 13)  // Lesser General Public License for more details.
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 14)  //
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 15)  // You should have received a copy of the GNU Lesser General Public
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 16)  // License along with this library; if not, write to the Free Software
b779f3c1d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-02-04 07:44:04 -0500 17)  // Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 18)  ////////////////////////////////////////////////////////////////////////////////
                                                                                                                     19)
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 20)  package com.puppycrawl.tools.checkstyle;
                                                                                                                     21)
6c304950f src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-05 10:12:57 -0400 22)  import java.io.File;
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 23)  import java.io.IOException;
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 24)  import java.io.PrintWriter;
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 25)  import java.io.StringWriter;
2e4762f17 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 05:19:43 -0500 26)  import java.io.UnsupportedEncodingException;
2e4762f17 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 05:19:43 -0500 27)  import java.nio.charset.Charset;
b16aef991 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Artem Dudkin        2017-10-18 10:19:42 -0400 28)  import java.nio.charset.StandardCharsets;
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 29)  import java.util.ArrayList;
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 30)  import java.util.HashSet;
f1afaf83f src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2007-12-15 03:14:40 -0500 31)  import java.util.List;
20483ae03 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-08-11 06:01:01 -0400 32)  import java.util.Locale;
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 33)  import java.util.Set;
1d614c3a7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Ivan Sopov          2013-12-05 12:12:51 -0500 34)  import java.util.SortedSet;
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 35)  import java.util.TreeSet;
                                                                                                                     36)
ee518dfe8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-04-13 17:43:00 -0400 37)  import org.apache.commons.logging.Log;
ee518dfe8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-04-13 17:43:00 -0400 38)  import org.apache.commons.logging.LogFactory;
                                                                                                                     39)
7dd1ab24d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-05-26 17:52:10 -0400 40)  import com.puppycrawl.tools.checkstyle.api.AuditEvent;
7dd1ab24d src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-05-26 17:52:10 -0400 41)  import com.puppycrawl.tools.checkstyle.api.AuditListener;
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 42)  import com.puppycrawl.tools.checkstyle.api.AutomaticBean;
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 43)  import com.puppycrawl.tools.checkstyle.api.BeforeExecutionFileFilter;
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 44)  import com.puppycrawl.tools.checkstyle.api.BeforeExecutionFileFilterSet;
085befb3a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2002-11-30 11:58:59 -0500 45)  import com.puppycrawl.tools.checkstyle.api.CheckstyleException;
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 46)  import com.puppycrawl.tools.checkstyle.api.Configuration;
08d6efe49 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-10 14:13:35 -0500 47)  import com.puppycrawl.tools.checkstyle.api.Context;
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 48)  import com.puppycrawl.tools.checkstyle.api.ExternalResourceHolder;
abff1a248 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-19 15:21:46 -0500 49)  import com.puppycrawl.tools.checkstyle.api.FileSetCheck;
3cd664694 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2010-06-28 09:02:13 -0400 50)  import com.puppycrawl.tools.checkstyle.api.FileText;
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 51)  import com.puppycrawl.tools.checkstyle.api.Filter;
1e7d8eef0 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-15 16:18:02 -0400 52)  import com.puppycrawl.tools.checkstyle.api.FilterSet;
672b27dd5 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-09-17 08:33:30 -0400 53)  import com.puppycrawl.tools.checkstyle.api.LocalizedMessage;
54a09706e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-19 14:17:25 -0500 54)  import com.puppycrawl.tools.checkstyle.api.MessageDispatcher;
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 55)  import com.puppycrawl.tools.checkstyle.api.RootModule;
085edafb3 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2003-03-23 03:29:12 -0500 56)  import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
c1a79b112 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2004-04-12 06:54:27 -0400 57)  import com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter;
cdf3e56ba src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ilja Dubinin        2015-08-27 08:17:01 -0400 58)  import com.puppycrawl.tools.checkstyle.utils.CommonUtils;
                                                                                                                     59)
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 60)  /**
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 61)   * This class provides the functionality to check a set of files.
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 62)   * @author Oliver Burn
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 63)   * @author <a href="mailto:stephane.bailliez@wanadoo.fr">Stephane Bailliez</a>
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 64)   * @author lkuehne
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 65)   * @author Andrei Selkin
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 66)   */
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 67)  public class Checker extends AutomaticBean implements MessageDispatcher, RootModule {
                                                                                                                     68)
                                                                                                                     69)      /** Message to use when an exception occurs and should be printed as a violation. */
7caba87cc src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Luolc               2017-03-12 23:17:06 -0400 70)      public static final String EXCEPTION_MSG = "general.exception";
                                                                                                                     71)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 72)      /** Logger for Checker. */
127f72994 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (crude               2017-10-20 13:46:57 -0400 73)      private final Log log;
                                                                                                                     74)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 75)      /** Maintains error count. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 76)      private final SeverityLevelCounter counter = new SeverityLevelCounter(
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 77)              SeverityLevel.ERROR);
                                                                                                                     78)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 79)      /** Vector of listeners. */
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 80)      private final List<AuditListener> listeners = new ArrayList<>();
                                                                                                                     81)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 82)      /** Vector of fileset checks. */
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 83)      private final List<FileSetCheck> fileSetChecks = new ArrayList<>();
                                                                                                                     84)
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 85)      /** The audit event before execution file filters. */
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 86)      private final BeforeExecutionFileFilterSet beforeExecutionFileFilters =
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 87)              new BeforeExecutionFileFilterSet();
                                                                                                                     88)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 89)      /** The audit event filters. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 90)      private final FilterSet filters = new FilterSet();
                                                                                                                     91)
54ccca186 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-18 04:25:29 -0400 92)      /** Class loader to resolve classes with. **/
3bd699bd5 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-12 01:19:21 -0400 93)      private ClassLoader classLoader = Thread.currentThread()
3bd699bd5 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-12 01:19:21 -0400 94)              .getContextClassLoader();
                                                                                                                     95)
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 96)      /** The basedir to strip off in file names. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 97)      private String basedir;
                                                                                                                     98)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 99)      /** Locale country to report messages . **/
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 100)     private String localeCountry = Locale.getDefault().getCountry();
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 101)     /** Locale language to report messages . **/
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 102)     private String localeLanguage = Locale.getDefault().getLanguage();
                                                                                                                     103)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 104)     /** The factory for instantiating submodules. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 105)     private ModuleFactory moduleFactory;
                                                                                                                     106)
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 107)     /** The classloader used for loading Checkstyle module classes. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 108)     private ClassLoader moduleClassLoader;
                                                                                                                     109)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 110)     /** The context of all child components. */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 111)     private Context childContext;
                                                                                                                     112)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 113)     /** The file extensions that are accepted. */
167dd96d8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Rasmus Kaj          2016-03-17 09:39:55 -0400 114)     private String[] fileExtensions = CommonUtils.EMPTY_STRING_ARRAY;
                                                                                                                     115)
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 116)     /**
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 117)      * The severity level of any violations found by submodules.
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 118)      * The value of this property is passed to submodules via
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 119)      * contextualize().
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 120)      *
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 121)      * <p>Note: Since the Checker is merely a container for modules
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 122)      * it does not make sense to implement logging functionality
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 123)      * here. Consequently Checker does not extend AbstractViolationReporter,
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 124)      * leading to a bit of duplicated code for severity level setting.
c899af31c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 14:51:27 -0400 125)      */
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 126)     private SeverityLevel severity = SeverityLevel.ERROR;
                                                                                                                     127)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 128)     /** Name of a charset. */
b16aef991 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Artem Dudkin        2017-10-18 10:19:42 -0400 129)     private String charset = System.getProperty("file.encoding", StandardCharsets.UTF_8.name());
                                                                                                                     130)
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 131)     /** Cache file. **/
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 132)     private PropertyCacheFile cacheFile;
                                                                                                                     133)
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 134)     /** Controls whether exceptions should halt execution or not. */
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 135)     private boolean haltOnException = true;
                                                                                                                     136)
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 137)     /**
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 138)      * Creates a new {@code Checker} instance.
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 139)      * The instance needs to be contextualized and configured.
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 140)      */
f7f377f50 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-08-08 22:28:36 -0400 141)     public Checker() {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 142)         addListener(counter);
127f72994 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (crude               2017-10-20 13:46:57 -0400 143)         log = LogFactory.getLog(Checker.class);
3c0608f33 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2002-11-15 13:18:52 -0500 144)     }
                                                                                                                     145)
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 146)     /**
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 147)      * Sets cache file.
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 148)      * @param fileName the cache file.
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 149)      * @throws IOException if there are some problems with file loading.
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 150)      */
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 151)     public void setCacheFile(String fileName) throws IOException {
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 152)         final Configuration configuration = getConfiguration();
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 153)         cacheFile = new PropertyCacheFile(configuration, fileName);
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 154)         cacheFile.load();
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 155)     }
                                                                                                                     156)
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 157)     /**
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 158)      * Removes before execution file filter.
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 159)      * @param filter before execution file filter to remove.
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 160)      */
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 161)     public void removeBeforeExecutionFileFilter(BeforeExecutionFileFilter filter) {
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 162)         beforeExecutionFileFilters.removeBeforeExecutionFileFilter(filter);
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 163)     }
                                                                                                                     164)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 165)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 166)      * Removes filter.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 167)      * @param filter filter to remove.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 168)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 169)     public void removeFilter(Filter filter) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 170)         filters.removeFilter(filter);
778e84408 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oleg Sukhodolsky    2003-11-04 23:26:12 -0500 171)     }
                                                                                                                     172)
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 173)     @Override
edf2c9563 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2002-01-06 02:40:36 -0500 174)     public void destroy() {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 175)         listeners.clear();
8ca6e3a6f src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-11-17 20:46:16 -0500 176)         fileSetChecks.clear();
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 177)         beforeExecutionFileFilters.clear();
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 178)         filters.clear();
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 179)         if (cacheFile != null) {
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 180)             try {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 181)                 cacheFile.persist();
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 182)             }
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 183)             catch (IOException ex) {
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 184)                 throw new IllegalStateException("Unable to persist cache file.", ex);
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 185)             }
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 186)         }
6c304950f src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-05 10:12:57 -0400 187)     }
                                                                                                                     188)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 189)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 190)      * Removes a given listener.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 191)      * @param listener a listener to remove
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 192)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 193)     public void removeListener(AuditListener listener) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 194)         listeners.remove(listener);
778e84408 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oleg Sukhodolsky    2003-11-04 23:26:12 -0500 195)     }
                                                                                                                     196)
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 197)     /**
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 198)      * Sets base directory.
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 199)      * @param basedir the base directory to strip off in file names
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 200)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 201)     public void setBasedir(String basedir) {
3a20dbe8e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-03-31 14:25:03 -0400 202)         this.basedir = basedir;
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 203)     }
                                                                                                                     204)
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 205)     @Override
5922d5a67 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 01:06:24 -0400 206)     public int process(List<File> files) throws CheckstyleException {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 207)         if (cacheFile != null) {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 208)             cacheFile.putExternalResources(getExternalResourceLocations());
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 209)         }
                                                                                                                     210)
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 211)         // Prepare to start
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 212)         fireAuditStarted();
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 213)         for (final FileSetCheck fsc : fileSetChecks) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 214)             fsc.beginProcessing(charset);
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 215)         }
                                                                                                                     216)
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 217)         processFiles(files);
                                                                                                                     218)
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 219)         // Finish up
d347f5575 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (ychulovskyy         2015-03-19 01:30:23 -0400 220)         // It may also log!!!
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 221)         fileSetChecks.forEach(FileSetCheck::finishProcessing);
                                                                                                                     222)
d347f5575 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (ychulovskyy         2015-03-19 01:30:23 -0400 223)         // It may also log!!!
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 224)         fileSetChecks.forEach(FileSetCheck::destroy);
                                                                                                                     225)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 226)         final int errorCount = counter.getCount();
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 227)         fireAuditFinished();
54a09706e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-19 14:17:25 -0500 228)         return errorCount;
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 229)     }
                                                                                                                     230)
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 231)     /**
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 232)      * Returns a set of external configuration resource locations which are used by all file set
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 233)      * checks and filters.
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 234)      * @return a set of external configuration resource locations which are used by all file set
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 235)      *         checks and filters.
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 236)      */
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 237)     private Set<String> getExternalResourceLocations() {
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 238)         final Set<String> externalResources = new HashSet<>();
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 239)         fileSetChecks.stream().filter(check -> check instanceof ExternalResourceHolder)
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 240)             .forEach(check -> {
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 241)                 final Set<String> locations =
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 242)                     ((ExternalResourceHolder) check).getExternalResourceLocations();
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 243)                 externalResources.addAll(locations);
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 244)             });
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 245)         filters.getFilters().stream().filter(filter -> filter instanceof ExternalResourceHolder)
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 246)             .forEach(filter -> {
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 247)                 final Set<String> locations =
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 248)                     ((ExternalResourceHolder) filter).getExternalResourceLocations();
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 249)                 externalResources.addAll(locations);
de022d243 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Mariia Mykhailova   2016-09-08 08:30:40 -0400 250)             });
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 251)         return externalResources;
ecbeaa6e1 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-05-16 16:53:12 -0400 252)     }
                                                                                                                     253)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 254)     /** Notify all listeners about the audit start. */
8ad9441bb src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Vladislav Lisetskiy 2016-02-20 15:25:24 -0500 255)     private void fireAuditStarted() {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 256)         final AuditEvent event = new AuditEvent(this);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 257)         for (final AuditListener listener : listeners) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 258)             listener.auditStarted(event);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 259)         }
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 260)     }
                                                                                                                     261)
5ca966795 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 13:02:55 -0400 262)     /** Notify all listeners about the audit end. */
8ad9441bb src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Vladislav Lisetskiy 2016-02-20 15:25:24 -0500 263)     private void fireAuditFinished() {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 264)         final AuditEvent event = new AuditEvent(this);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 265)         for (final AuditListener listener : listeners) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 266)             listener.auditFinished(event);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 267)         }
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 268)     }
                                                                                                                     269)
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 270)     /**
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 271)      * Processes a list of files with all FileSetChecks.
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 272)      * @param files a list of files to process.
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 273)      * @throws CheckstyleException if error condition within Checkstyle occurs.
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 274)      * @noinspection ProhibitedExceptionThrown
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 275)      */
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 276)     private void processFiles(List<File> files) throws CheckstyleException {
f1e80e4ec src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-08-08 00:38:41 -0400 277)         for (final File file : files) {
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 278)             try {
f1e80e4ec src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-08-08 00:38:41 -0400 279)                 final String fileName = file.getAbsolutePath();
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 280)                 final long timestamp = file.lastModified();
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 281)                 if (cacheFile != null && cacheFile.isInCache(fileName, timestamp)
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 282)                         || !CommonUtils.matchesFileExtension(file, fileExtensions)
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 283)                         || !acceptFileStarted(fileName)) {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 284)                     continue;
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 285)                 }
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 286)                 if (cacheFile != null) {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 287)                     cacheFile.put(fileName, timestamp);
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 288)                 }
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 289)                 fireFileStarted(fileName);
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 290)                 final SortedSet<LocalizedMessage> fileMessages = processFile(file);
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 291)                 fireErrors(fileName, fileMessages);
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 292)                 fireFileFinished(fileName);
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 293)             }
25a37e504 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-14 16:58:34 -0400 294)             // -@cs[IllegalCatch] There is no other way to deliver filename that was under
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 295)             // processing. See https://github.com/checkstyle/checkstyle/issues/2285
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 296)             catch (Exception ex) {
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 297)                 // We need to catch all exceptions to put a reason failure (file name) in exception
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 298)                 throw new CheckstyleException("Exception was thrown while processing "
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 299)                         + file.getPath(), ex);
f020066f8 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-11-01 08:52:32 -0500 300)             }
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 301)             catch (Error error) {
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 302)                 // We need to catch all errors to put a reason failure (file name) in error
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 303)                 throw new Error("Error was thrown while processing " + file.getPath(), error);
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 304)             }
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 305)         }
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 306)     }
                                                                                                                     307)
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 308)     /**
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 309)      * Processes a file with all FileSetChecks.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 310)      * @param file a file to process.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 311)      * @return a sorted set of messages to be logged.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 312)      * @throws CheckstyleException if error condition within Checkstyle occurs.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 313)      * @noinspection ProhibitedExceptionThrown
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 314)      */
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 315)     private SortedSet<LocalizedMessage> processFile(File file) throws CheckstyleException {
fbf3f95c2 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-09-20 22:52:06 -0400 316)         final SortedSet<LocalizedMessage> fileMessages = new TreeSet<>();
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 317)         try {
f1e80e4ec src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-08-08 00:38:41 -0400 318)             final FileText theText = new FileText(file.getAbsoluteFile(), charset);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 319)             for (final FileSetCheck fsc : fileSetChecks) {
f1e80e4ec src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-08-08 00:38:41 -0400 320)                 fileMessages.addAll(fsc.process(file, theText));
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 321)             }
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 322)         }
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 323)         catch (final IOException ioe) {
127f72994 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (crude               2017-10-20 13:46:57 -0400 324)             log.debug("IOException occurred.", ioe);
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 325)             fileMessages.add(new LocalizedMessage(0,
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 326)                     Definitions.CHECKSTYLE_BUNDLE, EXCEPTION_MSG,
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 327)                     new String[] {ioe.getMessage()}, null, getClass(), null));
13b7c6343 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 04:37:27 -0500 328)         }
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 329)         // -@cs[IllegalCatch] There is no other way to obey haltOnException field
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 330)         catch (Exception ex) {
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 331)             if (haltOnException) {
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 332)                 throw ex;
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 333)             }
                                                                                                                     334)
127f72994 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (crude               2017-10-20 13:46:57 -0400 335)             log.debug("Exception occurred.", ex);
                                                                                                                     336)
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 337)             final StringWriter sw = new StringWriter();
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 338)             final PrintWriter pw = new PrintWriter(sw, true);
                                                                                                                     339)
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 340)             ex.printStackTrace(pw);
                                                                                                                     341)
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 342)             fileMessages.add(new LocalizedMessage(0,
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 343)                     Definitions.CHECKSTYLE_BUNDLE, EXCEPTION_MSG,
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 344)                     new String[] {sw.getBuffer().toString()},
a43191d49 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-05-26 10:11:30 -0400 345)                     null, getClass(), null));
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 346)         }
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 347)         return fileMessages;
77acd41cf src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-16 14:22:01 -0500 348)     }
                                                                                                                     349)
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 350)     /**
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 351)      * Check if all before execution file filters accept starting the file.
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 352)      *
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 353)      * @param fileName
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 354)      *            the file to be audited
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 355)      * @return {@code true} if the file is accepted.
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 356)      */
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 357)     private boolean acceptFileStarted(String fileName) {
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 358)         final String stripped = CommonUtils.relativizeAndNormalizePath(basedir, fileName);
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 359)         return beforeExecutionFileFilters.accept(stripped);
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 360)     }
                                                                                                                     361)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 362)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 363)      * Notify all listeners about the beginning of a file audit.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 364)      *
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 365)      * @param fileName
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 366)      *            the file to be audited
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 367)      */
7aa061665 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2014-12-15 01:33:24 -0500 368)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 369)     public void fireFileStarted(String fileName) {
cdf3e56ba src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ilja Dubinin        2015-08-27 08:17:01 -0400 370)         final String stripped = CommonUtils.relativizeAndNormalizePath(basedir, fileName);
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 371)         final AuditEvent event = new AuditEvent(this, stripped);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 372)         for (final AuditListener listener : listeners) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 373)             listener.fileStarted(event);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 374)         }
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 375)     }
                                                                                                                     376)
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 377)     /**
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 378)      * Notify all listeners about the errors in a file.
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 379)      *
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 380)      * @param fileName the audited file
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 381)      * @param errors the audit errors from the file
efa16e17b src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-19 23:21:51 -0400 382)      */
7aa061665 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2014-12-15 01:33:24 -0500 383)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 384)     public void fireErrors(String fileName, SortedSet<LocalizedMessage> errors) {
cdf3e56ba src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ilja Dubinin        2015-08-27 08:17:01 -0400 385)         final String stripped = CommonUtils.relativizeAndNormalizePath(basedir, fileName);
56cc11416 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-10 14:59:54 -0500 386)         boolean hasNonFilteredViolations = false;
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 387)         for (final LocalizedMessage element : errors) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 388)             final AuditEvent event = new AuditEvent(this, stripped, element);
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 389)             if (filters.accept(event)) {
56cc11416 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-10 14:59:54 -0500 390)                 hasNonFilteredViolations = true;
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 391)                 for (final AuditListener listener : listeners) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 392)                     listener.addError(event);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 393)                 }
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 394)             }
3ded7a115 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-28 19:30:38 -0400 395)         }
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 396)         if (hasNonFilteredViolations && cacheFile != null) {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 397)             cacheFile.remove(fileName);
56cc11416 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-10 14:59:54 -0500 398)         }
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 399)     }
                                                                                                                     400)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 401)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 402)      * Notify all listeners about the end of a file audit.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 403)      *
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 404)      * @param fileName
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 405)      *            the audited file
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 406)      */
7aa061665 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2014-12-15 01:33:24 -0500 407)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 408)     public void fireFileFinished(String fileName) {
cdf3e56ba src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ilja Dubinin        2015-08-27 08:17:01 -0400 409)         final String stripped = CommonUtils.relativizeAndNormalizePath(basedir, fileName);
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 410)         final AuditEvent event = new AuditEvent(this, stripped);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 411)         for (final AuditListener listener : listeners) {
ce196814d src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-10-16 19:35:09 -0400 412)             listener.fileFinished(event);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 413)         }
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 414)     }
                                                                                                                     415)
f1afaf83f src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2007-12-15 03:14:40 -0500 416)     @Override
35c607f16 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2017-12-12 21:52:11 -0500 417)     protected void finishLocalSetup() throws CheckstyleException {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 418)         final Locale locale = new Locale(localeLanguage, localeCountry);
08d6efe49 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-10 14:13:35 -0500 419)         LocalizedMessage.setLocale(locale);
                                                                                                                     420)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 421)         if (moduleFactory == null) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 422)             if (moduleClassLoader == null) {
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 423)                 throw new CheckstyleException(
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 424)                         "if no custom moduleFactory is set, "
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 425)                                 + "moduleClassLoader must be specified");
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 426)             }
                                                                                                                     427)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 428)             final Set<String> packageNames = PackageNamesLoader
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 429)                     .getPackageNames(moduleClassLoader);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 430)             moduleFactory = new PackageObjectFactory(packageNames,
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 431)                     moduleClassLoader);
88e89a138 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-16 01:26:46 -0500 432)         }
                                                                                                                     433)
08d6efe49 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-10 14:13:35 -0500 434)         final DefaultContext context = new DefaultContext();
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 435)         context.add("charset", charset);
3bd699bd5 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-12 01:19:21 -0400 436)         context.add("classLoader", classLoader);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 437)         context.add("moduleFactory", moduleFactory);
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 438)         context.add("severity", severity.getName());
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 439)         context.add("basedir", basedir);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 440)         childContext = context;
08d6efe49 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-10 14:13:35 -0500 441)     }
                                                                                                                     442)
370ce0101 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (vasilyeva           2017-07-14 18:13:49 -0400 443)     /**
370ce0101 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (vasilyeva           2017-07-14 18:13:49 -0400 444)      * {@inheritDoc} Creates child module.
370ce0101 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (vasilyeva           2017-07-14 18:13:49 -0400 445)      * @noinspection ChainOfInstanceofChecks
370ce0101 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (vasilyeva           2017-07-14 18:13:49 -0400 446)      */
f1afaf83f src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2007-12-15 03:14:40 -0500 447)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 448)     protected void setupChild(Configuration childConf)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 449)             throws CheckstyleException {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 450)         final String name = childConf.getName();
d740f2e1c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 01:02:37 -0400 451)         final Object child;
                                                                                                                     452)
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 453)         try {
d740f2e1c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 01:02:37 -0400 454)             child = moduleFactory.createModule(name);
                                                                                                                     455)
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 456)             if (child instanceof AutomaticBean) {
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 457)                 final AutomaticBean bean = (AutomaticBean) child;
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 458)                 bean.contextualize(childContext);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 459)                 bean.configure(childConf);
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 460)             }
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 461)         }
d740f2e1c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-31 01:02:37 -0400 462)         catch (final CheckstyleException ex) {
eeba08c10 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2003-02-04 14:32:47 -0500 463)             throw new CheckstyleException("cannot initialize module " + name
eeba08c10 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2003-02-04 14:32:47 -0500 464)                     + " - " + ex.getMessage(), ex);
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 465)         }
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 466)         if (child instanceof FileSetCheck) {
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 467)             final FileSetCheck fsc = (FileSetCheck) child;
864cf936c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-07-22 18:38:55 -0400 468)             fsc.init();
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 469)             addFileSetCheck(fsc);
2a71cac7e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-26 12:21:44 -0500 470)         }
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 471)         else if (child instanceof BeforeExecutionFileFilter) {
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 472)             final BeforeExecutionFileFilter filter = (BeforeExecutionFileFilter) child;
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 473)             addBeforeExecutionFileFilter(filter);
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 474)         }
f55fcd546 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-14 06:58:07 -0400 475)         else if (child instanceof Filter) {
f55fcd546 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-14 06:58:07 -0400 476)             final Filter filter = (Filter) child;
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 477)             addFilter(filter);
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 478)         }
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 479)         else if (child instanceof AuditListener) {
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 480)             final AuditListener listener = (AuditListener) child;
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 481)             addListener(listener);
a4222b86e src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 19:00:39 -0400 482)         }
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 483)         else {
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 484)             throw new CheckstyleException(name
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 485)                     + " is not allowed as a child in Checker");
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 486)         }
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 487)     }
                                                                                                                     488)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 489)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 490)      * Adds a FileSetCheck to the list of FileSetChecks
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 491)      * that is executed in process().
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 492)      * @param fileSetCheck the additional FileSetCheck
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 493)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 494)     public void addFileSetCheck(FileSetCheck fileSetCheck) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 495)         fileSetCheck.setMessageDispatcher(this);
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 496)         fileSetChecks.add(fileSetCheck);
abff1a248 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-19 15:21:46 -0500 497)     }
                                                                                                                     498)
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 499)     /**
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 500)      * Adds a before execution file filter to the end of the event chain.
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 501)      * @param filter the additional filter
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 502)      */
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 503)     public void addBeforeExecutionFileFilter(BeforeExecutionFileFilter filter) {
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 504)         beforeExecutionFileFilters.addBeforeExecutionFileFilter(filter);
fbaabe83c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-10-22 18:53:10 -0400 505)     }
                                                                                                                     506)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 507)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 508)      * Adds a filter to the end of the audit event filter chain.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 509)      * @param filter the additional filter
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 510)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 511)     public void addFilter(Filter filter) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 512)         filters.addFilter(filter);
c3baa3fa7 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Rick Giles          2003-07-11 14:35:17 -0400 513)     }
                                                                                                                     514)
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 515)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 516)     public final void addListener(AuditListener listener) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 517)         listeners.add(listener);
0e3fe5643 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-08-30 12:13:24 -0400 518)     }
                                                                                                                     519)
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 520)     /**
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 521)      * Sets the file extensions that identify the files that pass the
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 522)      * filter of this FileSetCheck.
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 523)      * @param extensions the set of file extensions. A missing
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 524)      *     initial '.' character of an extension is automatically added.
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 525)      */
c0446a825 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-04-29 20:21:14 -0400 526)     public final void setFileExtensions(String... extensions) {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 527)         if (extensions == null) {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 528)             fileExtensions = null;
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 529)         }
39b343a32 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-05-27 09:42:49 -0400 530)         else {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 531)             fileExtensions = new String[extensions.length];
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 532)             for (int i = 0; i < extensions.length; i++) {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 533)                 final String extension = extensions[i];
cdf3e56ba src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ilja Dubinin        2015-08-27 08:17:01 -0400 534)                 if (CommonUtils.startsWithChar(extension, '.')) {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 535)                     fileExtensions[i] = extension;
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 536)                 }
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 537)                 else {
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 538)                     fileExtensions[i] = "." + extension;
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 539)                 }
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 540)             }
39b343a32 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-05-27 09:42:49 -0400 541)         }
204c07329 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-25 04:30:21 -0500 542)     }
                                                                                                                     543)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 544)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 545)      * Sets the factory for creating submodules.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 546)      *
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 547)      * @param moduleFactory the factory for creating FileSetChecks
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 548)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 549)     public void setModuleFactory(ModuleFactory moduleFactory) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 550)         this.moduleFactory = moduleFactory;
88e89a138 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-12-16 01:26:46 -0500 551)     }
                                                                                                                     552)
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 553)     /**
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 554)      * Sets locale country.
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 555)      * @param localeCountry the country to report messages
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 556)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 557)     public void setLocaleCountry(String localeCountry) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 558)         this.localeCountry = localeCountry;
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 559)     }
                                                                                                                     560)
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 561)     /**
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 562)      * Sets locale language.
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 563)      * @param localeLanguage the language to report messages
49a0ee817 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-31 15:58:35 -0400 564)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 565)     public void setLocaleLanguage(String localeLanguage) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 566)         this.localeLanguage = localeLanguage;
6ffc8dd26 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2002-11-30 13:29:44 -0500 567)     }
                                                                                                                     568)
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 569)     /**
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 570)      * Sets the severity level.  The string should be one of the names
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 571)      * defined in the {@code SeverityLevel} class.
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 572)      *
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 573)      * @param severity  The new severity level
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 574)      * @see SeverityLevel
1935bed57 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Baratali Izmailov   2015-08-11 08:18:59 -0400 575)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 576)     public final void setSeverity(String severity) {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 577)         this.severity = SeverityLevel.getInstance(severity);
d216ec752 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Lars Kühne          2003-03-26 14:52:30 -0500 578)     }
                                                                                                                     579)
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 580)     /**
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 581)      * Sets the classloader that is used to contextualize fileset checks.
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 582)      * Some Check implementations will use that classloader to improve the
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 583)      * quality of their reports, e.g. to load a class and then analyze it via
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 584)      * reflection.
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 585)      * @param classLoader the new classloader
2b4a02d2c src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Michal Kordas       2015-09-03 21:06:15 -0400 586)      */
3bd699bd5 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-12 01:19:21 -0400 587)     public final void setClassLoader(ClassLoader classLoader) {
3bd699bd5 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Ruslan Diachenko    2015-08-12 01:19:21 -0400 588)         this.classLoader = classLoader;
e1a27939a src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2015-05-15 13:59:13 -0400 589)     }
                                                                                                                     590)
8c8fee743 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-11-09 00:30:14 -0500 591)     @Override
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 592)     public final void setModuleClassLoader(ClassLoader moduleClassLoader) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 593)         this.moduleClassLoader = moduleClassLoader;
fe9057366 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-04-07 21:35:17 -0400 594)     }
                                                                                                                     595)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 596)     /**
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 597)      * Sets a named charset.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 598)      * @param charset the name of a charset
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 599)      * @throws UnsupportedEncodingException if charset is unsupported.
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 600)      */
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 601)     public void setCharset(String charset)
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 602)             throws UnsupportedEncodingException {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 603)         if (!Charset.isSupported(charset)) {
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 604)             final String message = "unsupported charset: '" + charset + "'";
2e4762f17 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 05:19:43 -0500 605)             throw new UnsupportedEncodingException(message);
2e4762f17 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 05:19:43 -0500 606)         }
b8ca6a585 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (alexkravin          2015-01-19 09:38:32 -0500 607)         this.charset = charset;
2e4762f17 src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2008-11-09 05:19:43 -0500 608)     }
                                                                                                                     609)
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 610)     /**
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 611)      * Sets the field haltOnException.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 612)      * @param haltOnException the new value.
ec2834e43 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Roman Ivanov        2016-12-09 17:01:23 -0500 613)      */
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 614)     public void setHaltOnException(boolean haltOnException) {
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 615)         this.haltOnException = haltOnException;
b61daf7f4 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2016-12-07 18:21:03 -0500 616)     }
                                                                                                                     617)
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 618)     /**
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 619)      * Clears the cache.
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 620)      */
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 621)     public void clearCache() {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 622)         if (cacheFile != null) {
327c0bc84 src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (rnveach             2018-01-03 20:30:24 -0500 623)             cacheFile.reset();
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 624)         }
d46c2cf0e src/main/java/com/puppycrawl/tools/checkstyle/Checker.java  (Andrei Selkin       2016-02-09 12:50:02 -0500 625)     }
                                                                                                                     626)
0fd69594a src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java (Oliver Burn         2001-06-22 09:24:24 -0400 627) }
