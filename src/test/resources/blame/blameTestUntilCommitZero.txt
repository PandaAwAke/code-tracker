1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1)    /*
2156aa894 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-03-13 00:08:14 +0000 2)     * Copyright (C) 2008-2010, Google Inc.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 3)     * Copyright (C) 2008, Marek Zawirski <marek.zawirski@gmail.com>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 4)     * and other copyright owners as documented in the project's IP log.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 5)     *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 6)     * This program and the accompanying materials are made available
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 7)     * under the terms of the Eclipse Distribution License v1.0 which
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 8)     * accompanies this distribution, is reproduced below, and is
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 9)     * available at http://www.eclipse.org/org/documents/edl-v10.php
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 10)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 11)    * All rights reserved.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 12)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 13)    * Redistribution and use in source and binary forms, with or
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 14)    * without modification, are permitted provided that the following
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 15)    * conditions are met:
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 16)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 17)    * - Redistributions of source code must retain the above copyright
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 18)    *   notice, this list of conditions and the following disclaimer.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 19)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 20)    * - Redistributions in binary form must reproduce the above
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 21)    *   copyright notice, this list of conditions and the following
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 22)    *   disclaimer in the documentation and/or other materials provided
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 23)    *   with the distribution.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 24)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 25)    * - Neither the name of the Eclipse Foundation, Inc. nor the
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 26)    *   names of its contributors may be used to endorse or promote
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 27)    *   products derived from this software without specific prior
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 28)    *   written permission.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 29)    *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 30)    * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 31)    * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 32)    * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 33)    * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 34)    * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 35)    * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 36)    * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 37)    * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 38)    * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 39)    * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 40)    * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 41)    * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 42)    * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 43)    */
                                                                                                                                           44)
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 45)   package org.eclipse.jgit.internal.storage.pack;
                                                                                                                                           46)
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 47)   import static org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.PACK_DELTA;
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 48)   import static org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.PACK_WHOLE;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 49)   import static org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 50)   import static org.eclipse.jgit.lib.Constants.OBJ_BLOB;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 51)   import static org.eclipse.jgit.lib.Constants.OBJ_COMMIT;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 52)   import static org.eclipse.jgit.lib.Constants.OBJ_TAG;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 53)   import static org.eclipse.jgit.lib.Constants.OBJ_TREE;
                                                                                                                                           54)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 55)   import java.io.IOException;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 56)   import java.io.OutputStream;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 57)   import java.lang.ref.WeakReference;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 58)   import java.security.MessageDigest;
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 59)   import java.text.MessageFormat;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 60)   import java.util.ArrayList;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 61)   import java.util.Arrays;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 62)   import java.util.Collection;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 63)   import java.util.Collections;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 64)   import java.util.Comparator;
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 65)   import java.util.HashSet;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 66)   import java.util.Iterator;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 67)   import java.util.List;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 68)   import java.util.Map;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 69)   import java.util.NoSuchElementException;
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 70)   import java.util.Set;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 71)   import java.util.concurrent.ConcurrentHashMap;
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 72)   import java.util.concurrent.ExecutionException;
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 73)   import java.util.concurrent.Executor;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 74)   import java.util.concurrent.ExecutorService;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 75)   import java.util.concurrent.Executors;
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 76)   import java.util.concurrent.Future;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 77)   import java.util.concurrent.TimeUnit;
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 78)   import java.util.zip.CRC32;
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 79)   import java.util.zip.CheckedOutputStream;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 80)   import java.util.zip.Deflater;
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 81)   import java.util.zip.DeflaterOutputStream;
                                                                                                                                           82)
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 83)   import org.eclipse.jgit.annotations.NonNull;
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 84)   import org.eclipse.jgit.annotations.Nullable;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 85)   import org.eclipse.jgit.errors.CorruptObjectException;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 86)   import org.eclipse.jgit.errors.IncorrectObjectTypeException;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 87)   import org.eclipse.jgit.errors.LargeObjectException;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 88)   import org.eclipse.jgit.errors.MissingObjectException;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 89)   import org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException;
95d311f88 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Robin Rosenberg           2012-03-12 14:20:03 +0000 90)   import org.eclipse.jgit.internal.JGitText;
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 91)   import org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder;
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 92)   import org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1;
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn Pearce              2013-03-18 16:30:43 +0000 93)   import org.eclipse.jgit.internal.storage.file.PackIndexWriter;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 94)   import org.eclipse.jgit.lib.AnyObjectId;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 95)   import org.eclipse.jgit.lib.AsyncObjectSizeQueue;
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 96)   import org.eclipse.jgit.lib.BatchingProgressMonitor;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 97)   import org.eclipse.jgit.lib.BitmapIndex;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 98)   import org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 99)   import org.eclipse.jgit.lib.BitmapObject;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 100)  import org.eclipse.jgit.lib.Constants;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 101)  import org.eclipse.jgit.lib.NullProgressMonitor;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 102)  import org.eclipse.jgit.lib.ObjectId;
bd970007b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-13 23:39:30 +0000 103)  import org.eclipse.jgit.lib.ObjectIdOwnerMap;
29aa44476 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-12-29 23:32:24 +0000 104)  import org.eclipse.jgit.lib.ObjectIdSet;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 105)  import org.eclipse.jgit.lib.ObjectLoader;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 106)  import org.eclipse.jgit.lib.ObjectReader;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 107)  import org.eclipse.jgit.lib.ProgressMonitor;
ea21c111c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-27 01:51:12 +0000 108)  import org.eclipse.jgit.lib.Repository;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 109)  import org.eclipse.jgit.lib.ThreadSafeProgressMonitor;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 110)  import org.eclipse.jgit.revwalk.AsyncRevObjectQueue;
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 111)  import org.eclipse.jgit.revwalk.BitmapWalker;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 112)  import org.eclipse.jgit.revwalk.DepthWalk;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 113)  import org.eclipse.jgit.revwalk.ObjectWalk;
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 114)  import org.eclipse.jgit.revwalk.RevCommit;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 115)  import org.eclipse.jgit.revwalk.RevFlag;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 116)  import org.eclipse.jgit.revwalk.RevObject;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 117)  import org.eclipse.jgit.revwalk.RevSort;
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 118)  import org.eclipse.jgit.revwalk.RevTag;
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 119)  import org.eclipse.jgit.revwalk.RevTree;
f32b86124 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-03-18 16:30:43 +0000 120)  import org.eclipse.jgit.storage.pack.PackConfig;
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 121)  import org.eclipse.jgit.storage.pack.PackStatistics;
9cbe22283 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-10 00:20:13 +0000 122)  import org.eclipse.jgit.transport.ObjectCountCallback;
9cbe22283 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-10 00:20:13 +0000 123)  import org.eclipse.jgit.transport.WriteAbortedException;
f67e5602a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-08 02:23:39 +0000 124)  import org.eclipse.jgit.util.BlockList;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 125)  import org.eclipse.jgit.util.TemporaryBuffer;
                                                                                                                                           126)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 127)  /**
32ff57a2b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Robin Rosenberg           2014-03-29 17:34:41 +0000 128)   * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 129)   * PackWriter class is responsible for generating pack files from specified set
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 130)   * of objects from repository. This implementation produce pack files in format
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 131)   * version 2.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 132)   * </p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 133)   * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 134)   * Source of objects may be specified in two ways:
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 135)   * <ul>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 136)   * <li>(usually) by providing sets of interesting and uninteresting objects in
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 137)   * repository - all interesting objects and their ancestors except uninteresting
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 138)   * objects and their ancestors will be included in pack, or</li>
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 139)   * <li>by providing iterator of {@link org.eclipse.jgit.revwalk.RevObject}
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 140)   * specifying exact list and order of objects in pack</li>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 141)   * </ul>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 142)   * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 143)   * Typical usage consists of creating an instance, configuring options,
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 144)   * preparing the list of objects by calling {@link #preparePack(Iterator)} or
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 145)   * {@link #preparePack(ProgressMonitor, Set, Set)}, and streaming with
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 146)   * {@link #writePack(ProgressMonitor, ProgressMonitor, OutputStream)}. If the
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 147)   * pack is being stored as a file the matching index can be written out after
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 148)   * writing the pack by {@link #writeIndex(OutputStream)}. An optional bitmap
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 149)   * index can be made by calling {@link #prepareBitmapIndex(ProgressMonitor)}
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 150)   * followed by {@link #writeBitmapIndex(OutputStream)}.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 151)   * </p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 152)   * <p>
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 153)   * Class provide set of configurable options and
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 154)   * {@link org.eclipse.jgit.lib.ProgressMonitor} support, as operations may take
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 155)   * a long time for big repositories. Deltas searching algorithm is <b>NOT
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 156)   * IMPLEMENTED</b> yet - this implementation relies only on deltas and objects
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 157)   * reuse.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 158)   * </p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 159)   * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 160)   * This class is not thread safe. It is intended to be used in one thread as a
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 161)   * single pass to produce one pack. Invoking methods multiple times or out of
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 162)   * order is not supported as internal data structures are destroyed during
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 163)   * certain phases to save memory when packing large repositories.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 164)   * </p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 165)   */
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 166)  public class PackWriter implements AutoCloseable {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 167)  	private static final int PACK_VERSION_GENERATED = 2;
                                                                                                                                           168)
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 169)  	/** Empty set of objects for {@code preparePack()}. */
5dc30db56 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2016-12-30 00:19:58 +0000 170)  	public static final Set<ObjectId> NONE = Collections.emptySet();
                                                                                                                                           171)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 172)  	private static final Map<WeakReference<PackWriter>, Boolean> instances =
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 173)  			new ConcurrentHashMap<>();
                                                                                                                                           174)
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 175)  	private static final Iterable<PackWriter> instancesIterable = new Iterable<PackWriter>() {
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 176)  		@Override
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 177)  		public Iterator<PackWriter> iterator() {
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 178)  			return new Iterator<PackWriter>() {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 179)  				private final Iterator<WeakReference<PackWriter>> it =
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 180)  						instances.keySet().iterator();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 181)  				private PackWriter next;
                                                                                                                                           182)
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 183)  				@Override
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 184)  				public boolean hasNext() {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 185)  					if (next != null)
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 186)  						return true;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 187)  					while (it.hasNext()) {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 188)  						WeakReference<PackWriter> ref = it.next();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 189)  						next = ref.get();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 190)  						if (next != null)
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 191)  							return true;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 192)  						it.remove();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 193)  					}
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 194)  					return false;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 195)  				}
                                                                                                                                           196)
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 197)  				@Override
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 198)  				public PackWriter next() {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 199)  					if (hasNext()) {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 200)  						PackWriter result = next;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 201)  						next = null;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 202)  						return result;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 203)  					}
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 204)  					throw new NoSuchElementException();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 205)  				}
                                                                                                                                           206)
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 207)  				@Override
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 208)  				public void remove() {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 209)  					throw new UnsupportedOperationException();
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 210)  				}
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 211)  			};
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 212)  		}
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 213)  	};
                                                                                                                                           214)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 215)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 216)  	 * Get all allocated, non-released PackWriters instances.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 217)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 218)  	 * @return all allocated, non-released PackWriters instances.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 219)  	 */
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 220)  	public static Iterable<PackWriter> getInstances() {
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 221)  		return instancesIterable;
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 222)  	}
                                                                                                                                           223)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 224)  	@SuppressWarnings("unchecked")
79a7dd026 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Andrey Loskutov           2015-10-27 23:02:41 +0000 225)  	BlockList<ObjectToPack> objectsLists[] = new BlockList[OBJ_TAG + 1];
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 226)  	{
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 227)  		objectsLists[OBJ_COMMIT] = new BlockList<>();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 228)  		objectsLists[OBJ_TREE] = new BlockList<>();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 229)  		objectsLists[OBJ_BLOB] = new BlockList<>();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 230)  		objectsLists[OBJ_TAG] = new BlockList<>();
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 231)  	}
                                                                                                                                           232)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 233)  	private ObjectIdOwnerMap<ObjectToPack> objectsMap = new ObjectIdOwnerMap<>();
                                                                                                                                           234)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 235)  	// edge objects for thin packs
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 236)  	private List<ObjectToPack> edgeObjects = new BlockList<>();
                                                                                                                                           237)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 238)  	// Objects the client is known to have already.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 239)  	private BitmapBuilder haveObjects;
                                                                                                                                           240)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 241)  	private List<CachedPack> cachedPacks = new ArrayList<>(2);
                                                                                                                                           242)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 243)  	private Set<ObjectId> tagTargets = NONE;
                                                                                                                                           244)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 245)  	private Set<? extends ObjectId> excludeFromBitmapSelection = NONE;
                                                                                                                                           246)
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 247)  	private ObjectIdSet[] excludeInPacks;
                                                                                                                                           248)
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 249)  	private ObjectIdSet excludeInPackLast;
                                                                                                                                           250)
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 251)  	private Deflater myDeflater;
                                                                                                                                           252)
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 253)  	private final ObjectReader reader;
                                                                                                                                           254)
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 255)  	/** {@link #reader} recast to the reuse interface, if it supports it. */
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 256)  	private final ObjectReuseAsIs reuseSupport;
                                                                                                                                           257)
79a7dd026 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Andrey Loskutov           2015-10-27 23:02:41 +0000 258)  	final PackConfig config;
                                                                                                                                           259)
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 260)  	private final PackStatistics.Accumulator stats;
                                                                                                                                           261)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 262)  	private final MutableState state;
                                                                                                                                           263)
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 264)  	private final WeakReference<PackWriter> selfRef;
                                                                                                                                           265)
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 266)  	private PackStatistics.ObjectType.Accumulator typeStats;
                                                                                                                                           267)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 268)  	private List<ObjectToPack> sortedByName;
                                                                                                                                           269)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 270)  	private byte packcsum[];
                                                                                                                                           271)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 272)  	private boolean deltaBaseAsOffset;
                                                                                                                                           273)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 274)  	private boolean reuseDeltas;
                                                                                                                                           275)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 276)  	private boolean reuseDeltaCommits;
                                                                                                                                           277)
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 278)  	private boolean reuseValidate;
                                                                                                                                           279)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 280)  	private boolean thin;
                                                                                                                                           281)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 282)  	private boolean useCachedPacks;
                                                                                                                                           283)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 284)  	private boolean useBitmaps;
                                                                                                                                           285)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 286)  	private boolean ignoreMissingUninteresting = true;
                                                                                                                                           287)
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 288)  	private boolean pruneCurrentObjectList;
                                                                                                                                           289)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 290)  	private boolean shallowPack;
                                                                                                                                           291)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 292)  	private boolean canBuildBitmaps;
                                                                                                                                           293)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 294)  	private boolean indexDisabled;
                                                                                                                                           295)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 296)  	private int depth;
                                                                                                                                           297)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 298)  	private Collection<? extends ObjectId> unshallowObjects;
                                                                                                                                           299)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 300)  	private PackBitmapIndexBuilder writeBitmaps;
                                                                                                                                           301)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 302)  	private CRC32 crc32;
                                                                                                                                           303)
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 304)  	private ObjectCountCallback callback;
                                                                                                                                           305)
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 306)  	private long filterBlobLimit = -1;
                                                                                                                                           307)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 308)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 309)  	 * Create writer for specified repository.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 310)  	 * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 311)  	 * Objects for packing are specified in {@link #preparePack(Iterator)} or
10412ddfe org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-04-24 22:51:02 +0000 312)  	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 313)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 314)  	 * @param repo
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 315)  	 *            repository where objects are stored.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 316)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 317)  	public PackWriter(Repository repo) {
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 318)  		this(repo, repo.newObjectReader());
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 319)  	}
                                                                                                                                           320)
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 321)  	/**
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 322)  	 * Create a writer to load objects from the specified reader.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 323)  	 * <p>
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 324)  	 * Objects for packing are specified in {@link #preparePack(Iterator)} or
10412ddfe org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-04-24 22:51:02 +0000 325)  	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 326)  	 *
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 327)  	 * @param reader
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 328)  	 *            reader to read from the repository with.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 329)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 330)  	public PackWriter(ObjectReader reader) {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 331)  		this(new PackConfig(), reader);
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 332)  	}
                                                                                                                                           333)
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 334)  	/**
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 335)  	 * Create writer for specified repository.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 336)  	 * <p>
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 337)  	 * Objects for packing are specified in {@link #preparePack(Iterator)} or
10412ddfe org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-04-24 22:51:02 +0000 338)  	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 339)  	 *
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 340)  	 * @param repo
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 341)  	 *            repository where objects are stored.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 342)  	 * @param reader
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 343)  	 *            reader to read from the repository with.
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 344)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 345)  	public PackWriter(Repository repo, ObjectReader reader) {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 346)  		this(new PackConfig(repo), reader);
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 347)  	}
                                                                                                                                           348)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 349)  	/**
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 350)  	 * Create writer with a specified configuration.
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 351)  	 * <p>
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 352)  	 * Objects for packing are specified in {@link #preparePack(Iterator)} or
10412ddfe org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-04-24 22:51:02 +0000 353)  	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 354)  	 *
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 355)  	 * @param config
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 356)  	 *            configuration for the pack writer.
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 357)  	 * @param reader
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 358)  	 *            reader to read from the repository with.
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 359)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 360)  	public PackWriter(PackConfig config, ObjectReader reader) {
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 361)  		this(config, reader, null);
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 362)  	}
                                                                                                                                           363)
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 364)  	/**
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 365)  	 * Create writer with a specified configuration.
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 366)  	 * <p>
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 367)  	 * Objects for packing are specified in {@link #preparePack(Iterator)} or
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 368)  	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 369)  	 *
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 370)  	 * @param config
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 371)  	 *            configuration for the pack writer.
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 372)  	 * @param reader
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 373)  	 *            reader to read from the repository with.
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 374)  	 * @param statsAccumulator
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 375)  	 *            accumulator for statics
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 376)  	 */
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 377)  	public PackWriter(PackConfig config, final ObjectReader reader,
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 378)  			@Nullable PackStatistics.Accumulator statsAccumulator) {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 379)  		this.config = config;
515deaf7e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-29 22:12:53 +0000 380)  		this.reader = reader;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 381)  		if (reader instanceof ObjectReuseAsIs)
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 382)  			reuseSupport = ((ObjectReuseAsIs) reader);
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 383)  		else
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 384)  			reuseSupport = null;
                                                                                                                                           385)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 386)  		deltaBaseAsOffset = config.isDeltaBaseAsOffset();
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 387)  		reuseDeltas = config.isReuseDeltas();
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 388)  		reuseValidate = true; // be paranoid by default
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 389)  		stats = statsAccumulator != null ? statsAccumulator
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 390)  				: new PackStatistics.Accumulator();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 391)  		state = new MutableState();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 392)  		selfRef = new WeakReference<>(this);
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 393)  		instances.put(selfRef, Boolean.TRUE);
302596cc6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2018-02-12 21:59:42 +0000 394)  	}
                                                                                                                                           395)
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 396)  	/**
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 397)  	 * Set the {@code ObjectCountCallback}.
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 398)  	 * <p>
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 399)  	 * It should be set before calling
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 400)  	 * {@link #writePack(ProgressMonitor, ProgressMonitor, OutputStream)}.
65ceb23c8 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-06-09 23:26:00 +0000 401)  	 *
65ceb23c8 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-06-09 23:26:00 +0000 402)  	 * @param callback
65ceb23c8 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-06-09 23:26:00 +0000 403)  	 *            the callback to set
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 404)  	 * @return this object for chaining.
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 405)  	 */
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 406)  	public PackWriter setObjectCountCallback(ObjectCountCallback callback) {
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 407)  		this.callback = callback;
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 408)  		return this;
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 409)  	}
                                                                                                                                           410)
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 411)  	/**
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 412)  	 * Records the set of shallow commits in the client.
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 413)  	 *
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 414)  	 * @param clientShallowCommits
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 415)  	 *            the shallow commits in the client
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 416)  	 */
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 417)  	public void setClientShallowCommits(Set<ObjectId> clientShallowCommits) {
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 418)  		stats.clientShallowCommits = Collections
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 419)  				.unmodifiableSet(new HashSet<>(clientShallowCommits));
6a415915c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-15 21:49:47 +0000 420)  	}
                                                                                                                                           421)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 422)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 423)  	 * Check whether writer can store delta base as an offset (new style
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 424)  	 * reducing pack size) or should store it as an object id (legacy style,
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 425)  	 * compatible with old readers).
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 426)  	 *
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 427)  	 * Default setting: {@value PackConfig#DEFAULT_DELTA_BASE_AS_OFFSET}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 428)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 429)  	 * @return true if delta base is stored as an offset; false if it is stored
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 430)  	 *         as an object id.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 431)  	 */
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 432)  	public boolean isDeltaBaseAsOffset() {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 433)  		return deltaBaseAsOffset;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 434)  	}
                                                                                                                                           435)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 436)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 437)  	 * Set writer delta base format. Delta base can be written as an offset in a
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 438)  	 * pack file (new approach reducing file size) or as an object id (legacy
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 439)  	 * approach, compatible with old readers).
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 440)  	 *
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 441)  	 * Default setting: {@value PackConfig#DEFAULT_DELTA_BASE_AS_OFFSET}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 442)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 443)  	 * @param deltaBaseAsOffset
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 444)  	 *            boolean indicating whether delta base can be stored as an
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 445)  	 *            offset.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 446)  	 */
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 447)  	public void setDeltaBaseAsOffset(boolean deltaBaseAsOffset) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 448)  		this.deltaBaseAsOffset = deltaBaseAsOffset;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 449)  	}
                                                                                                                                           450)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 451)  	/**
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 452)  	 * Check if the writer will reuse commits that are already stored as deltas.
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 453)  	 *
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 454)  	 * @return true if the writer would reuse commits stored as deltas, assuming
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 455)  	 *         delta reuse is already enabled.
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 456)  	 */
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 457)  	public boolean isReuseDeltaCommits() {
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 458)  		return reuseDeltaCommits;
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 459)  	}
                                                                                                                                           460)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 461)  	/**
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 462)  	 * Set the writer to reuse existing delta versions of commits.
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 463)  	 *
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 464)  	 * @param reuse
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 465)  	 *            if true, the writer will reuse any commits stored as deltas.
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 466)  	 *            By default the writer does not reuse delta commits.
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 467)  	 */
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 468)  	public void setReuseDeltaCommits(boolean reuse) {
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 469)  		reuseDeltaCommits = reuse;
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 470)  	}
                                                                                                                                           471)
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 472)  	/**
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 473)  	 * Check if the writer validates objects before copying them.
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 474)  	 *
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 475)  	 * @return true if validation is enabled; false if the reader will handle
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 476)  	 *         object validation as a side-effect of it consuming the output.
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 477)  	 */
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 478)  	public boolean isReuseValidatingObjects() {
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 479)  		return reuseValidate;
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 480)  	}
                                                                                                                                           481)
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 482)  	/**
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 483)  	 * Enable (or disable) object validation during packing.
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 484)  	 *
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 485)  	 * @param validate
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 486)  	 *            if true the pack writer will validate an object before it is
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 487)  	 *            put into the output. This additional validation work may be
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 488)  	 *            necessary to avoid propagating corruption from one local pack
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 489)  	 *            file to another local pack file.
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 490)  	 */
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 491)  	public void setReuseValidatingObjects(boolean validate) {
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 492)  		reuseValidate = validate;
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 493)  	}
                                                                                                                                           494)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 495)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 496)  	 * Whether this writer is producing a thin pack.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 497)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 498)  	 * @return true if this writer is producing a thin pack.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 499)  	 */
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 500)  	public boolean isThin() {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 501)  		return thin;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 502)  	}
                                                                                                                                           503)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 504)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 505)  	 * Whether writer may pack objects with delta base object not within set of
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 506)  	 * objects to pack
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 507)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 508)  	 * @param packthin
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 509)  	 *            a boolean indicating whether writer may pack objects with
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 510)  	 *            delta base object not within set of objects to pack, but
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 511)  	 *            belonging to party repository (uninteresting/boundary) as
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 512)  	 *            determined by set; this kind of pack is used only for
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 513)  	 *            transport; true - to produce thin pack, false - otherwise.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 514)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 515)  	public void setThin(boolean packthin) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 516)  		thin = packthin;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 517)  	}
                                                                                                                                           518)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 519)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 520)  	 * Whether to reuse cached packs.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 521)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 522)  	 * @return {@code true} to reuse cached packs. If true index creation isn't
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 523)  	 *         available.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 524)  	 */
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 525)  	public boolean isUseCachedPacks() {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 526)  		return useCachedPacks;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 527)  	}
                                                                                                                                           528)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 529)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 530)  	 * Whether to use cached packs
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 531)  	 *
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 532)  	 * @param useCached
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 533)  	 *            if set to {@code true} and a cached pack is present, it will
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 534)  	 *            be appended onto the end of a thin-pack, reducing the amount
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 535)  	 *            of working set space and CPU used by PackWriter. Enabling this
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 536)  	 *            feature prevents PackWriter from creating an index for the
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 537)  	 *            newly created pack, so its only suitable for writing to a
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 538)  	 *            network client, where the client will make the index.
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 539)  	 */
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 540)  	public void setUseCachedPacks(boolean useCached) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 541)  		useCachedPacks = useCached;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 542)  	}
                                                                                                                                           543)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 544)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 545)  	 * Whether to use bitmaps
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 546)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 547)  	 * @return {@code true} to use bitmaps for ObjectWalks, if available.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 548)  	 */
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 549)  	public boolean isUseBitmaps() {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 550)  		return useBitmaps;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 551)  	}
                                                                                                                                           552)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 553)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 554)  	 * Whether to use bitmaps
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 555)  	 *
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 556)  	 * @param useBitmaps
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 557)  	 *            if set to true, bitmaps will be used when preparing a pack.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 558)  	 */
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 559)  	public void setUseBitmaps(boolean useBitmaps) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 560)  		this.useBitmaps = useBitmaps;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 561)  	}
                                                                                                                                           562)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 563)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 564)  	 * Whether the index file cannot be created by this PackWriter.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 565)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 566)  	 * @return {@code true} if the index file cannot be created by this
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 567)  	 *         PackWriter.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 568)  	 */
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 569)  	public boolean isIndexDisabled() {
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 570)  		return indexDisabled || !cachedPacks.isEmpty();
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 571)  	}
                                                                                                                                           572)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 573)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 574)  	 * Whether to disable creation of the index file.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 575)  	 *
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 576)  	 * @param noIndex
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 577)  	 *            {@code true} to disable creation of the index file.
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 578)  	 */
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 579)  	public void setIndexDisabled(boolean noIndex) {
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 580)  		this.indexDisabled = noIndex;
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 581)  	}
                                                                                                                                           582)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 583)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 584)  	 * Whether to ignore missing uninteresting objects
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 585)  	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 586)  	 * @return {@code true} to ignore objects that are uninteresting and also
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 587)  	 *         not found on local disk; false to throw a
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 588)  	 *         {@link org.eclipse.jgit.errors.MissingObjectException} out of
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 589)  	 *         {@link #preparePack(ProgressMonitor, Set, Set)} if an
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 590)  	 *         uninteresting object is not in the source repository. By default,
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 591)  	 *         true, permitting gracefully ignoring of uninteresting objects.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 592)  	 */
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 593)  	public boolean isIgnoreMissingUninteresting() {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 594)  		return ignoreMissingUninteresting;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 595)  	}
                                                                                                                                           596)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 597)  	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 598)  	 * Whether writer should ignore non existing uninteresting objects
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 599)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 600)  	 * @param ignore
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 601)  	 *            {@code true} if writer should ignore non existing
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 602)  	 *            uninteresting objects during construction set of objects to
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 603)  	 *            pack; false otherwise - non existing uninteresting objects may
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 604)  	 *            cause {@link org.eclipse.jgit.errors.MissingObjectException}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 605)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 606)  	public void setIgnoreMissingUninteresting(boolean ignore) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 607)  		ignoreMissingUninteresting = ignore;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 608)  	}
                                                                                                                                           609)
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 610)  	/**
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 611)  	 * Set the tag targets that should be hoisted earlier during packing.
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 612)  	 * <p>
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 613)  	 * Callers may put objects into this set before invoking any of the
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 614)  	 * preparePack methods to influence where an annotated tag's target is
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 615)  	 * stored within the resulting pack. Typically these will be clustered
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 616)  	 * together, and hoisted earlier in the file even if they are ancient
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 617)  	 * revisions, allowing readers to find tag targets with better locality.
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 618)  	 *
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 619)  	 * @param objects
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 620)  	 *            objects that annotated tags point at.
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 621)  	 */
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 622)  	public void setTagTargets(Set<ObjectId> objects) {
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 623)  		tagTargets = objects;
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 624)  	}
                                                                                                                                           625)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 626)  	/**
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 627)  	 * Configure this pack for a shallow clone.
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 628)  	 *
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 629)  	 * @param depth
e426aa8b9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-06 00:27:30 +0000 630)  	 *            maximum depth of history to return. 1 means return only the
e426aa8b9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-06 00:27:30 +0000 631)  	 *            "wants".
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 632)  	 * @param unshallow
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 633)  	 *            objects which used to be shallow on the client, but are being
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 634)  	 *            extended as part of this fetch
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 635)  	 */
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 636)  	public void setShallowPack(int depth,
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 637)  			Collection<? extends ObjectId> unshallow) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 638)  		this.shallowPack = true;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 639)  		this.depth = depth;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 640)  		this.unshallowObjects = unshallow;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 641)  	}
                                                                                                                                           642)
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 643)  	/**
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 644)  	 * @param bytes exclude blobs of size greater than this
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 645)  	 * @since 5.0
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 646)  	 */
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 647)  	public void setFilterBlobLimit(long bytes) {
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 648)  		filterBlobLimit = bytes;
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 649)  	}
                                                                                                                                           650)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 651)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 652)  	 * Returns objects number in a pack file that was created by this writer.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 653)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 654)  	 * @return number of objects in pack.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 655)  	 * @throws java.io.IOException
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 656)  	 *             a cached pack cannot supply its object count.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 657)  	 */
7a9bf1e2e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:52 +0000 658)  	public long getObjectCount() throws IOException {
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 659)  		if (stats.totalObjects == 0) {
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 660)  			long objCnt = 0;
                                                                                                                                           661)
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 662)  			objCnt += objectsLists[OBJ_COMMIT].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 663)  			objCnt += objectsLists[OBJ_TREE].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 664)  			objCnt += objectsLists[OBJ_BLOB].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 665)  			objCnt += objectsLists[OBJ_TAG].size();
                                                                                                                                           666)
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 667)  			for (CachedPack pack : cachedPacks)
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 668)  				objCnt += pack.getObjectCount();
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 669)  			return objCnt;
65f9a6e58 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:51 +0000 670)  		}
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 671)  		return stats.totalObjects;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 672)  	}
                                                                                                                                           673)
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 674)  	/**
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 675)  	 * Returns the object ids in the pack file that was created by this writer.
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 676)  	 * <p>
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 677)  	 * This method can only be invoked after
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 678)  	 * {@link #writePack(ProgressMonitor, ProgressMonitor, OutputStream)} has
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 679)  	 * been invoked and completed successfully.
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 680)  	 *
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 681)  	 * @return set of objects in pack.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 682)  	 * @throws java.io.IOException
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 683)  	 *             a cached pack cannot supply its object ids.
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 684)  	 */
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 685)  	public ObjectIdOwnerMap<ObjectIdOwnerMap.Entry> getObjectSet()
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 686)  			throws IOException {
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 687)  		if (!cachedPacks.isEmpty())
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 688)  			throw new IOException(
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 689)  					JGitText.get().cachedPacksPreventsListingObjects);
                                                                                                                                           690)
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 691)  		if (writeBitmaps != null) {
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 692)  			return writeBitmaps.getObjectSet();
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 693)  		}
                                                                                                                                           694)
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 695)  		ObjectIdOwnerMap<ObjectIdOwnerMap.Entry> r = new ObjectIdOwnerMap<>();
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 696)  		for (BlockList<ObjectToPack> objList : objectsLists) {
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 697)  			if (objList != null) {
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 698)  				for (ObjectToPack otp : objList)
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 699)  					r.add(new ObjectIdOwnerMap.Entry(otp) {
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 700)  						// A new entry that copies the ObjectId
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 701)  					});
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 702)  			}
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 703)  		}
f9bd6c123 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-14 18:13:34 +0000 704)  		return r;
7fbd6588b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-22 23:25:15 +0000 705)  	}
                                                                                                                                           706)
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 707)  	/**
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 708)  	 * Add a pack index whose contents should be excluded from the result.
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 709)  	 *
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 710)  	 * @param idx
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 711)  	 *            objects in this index will not be in the output pack.
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 712)  	 */
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 713)  	public void excludeObjects(ObjectIdSet idx) {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 714)  		if (excludeInPacks == null) {
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 715)  			excludeInPacks = new ObjectIdSet[] { idx };
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 716)  			excludeInPackLast = idx;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 717)  		} else {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 718)  			int cnt = excludeInPacks.length;
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 719)  			ObjectIdSet[] newList = new ObjectIdSet[cnt + 1];
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 720)  			System.arraycopy(excludeInPacks, 0, newList, 0, cnt);
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 721)  			newList[cnt] = idx;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 722)  			excludeInPacks = newList;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 723)  		}
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 724)  	}
                                                                                                                                           725)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 726)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 727)  	 * Prepare the list of objects to be written to the pack stream.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 728)  	 * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 729)  	 * Iterator <b>exactly</b> determines which objects are included in a pack
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 730)  	 * and order they appear in pack (except that objects order by type is not
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 731)  	 * needed at input). This order should conform general rules of ordering
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 732)  	 * objects in git - by recency and path (type and delta-base first is
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 733)  	 * internally secured) and responsibility for guaranteeing this order is on
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 734)  	 * a caller side. Iterator must return each id of object to write exactly
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 735)  	 * once.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 736)  	 * </p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 737)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 738)  	 * @param objectsSource
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 739)  	 *            iterator of object to store in a pack; order of objects within
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 740)  	 *            each type is important, ordering by type is not needed;
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 741)  	 *            allowed types for objects are
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 742)  	 *            {@link org.eclipse.jgit.lib.Constants#OBJ_COMMIT},
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 743)  	 *            {@link org.eclipse.jgit.lib.Constants#OBJ_TREE},
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 744)  	 *            {@link org.eclipse.jgit.lib.Constants#OBJ_BLOB} and
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 745)  	 *            {@link org.eclipse.jgit.lib.Constants#OBJ_TAG}; objects
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 746)  	 *            returned by iterator may be later reused by caller as object
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 747)  	 *            id and type are internally copied in each iteration.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 748)  	 * @throws java.io.IOException
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 749)  	 *             when some I/O problem occur during reading objects.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 750)  	 */
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 751)  	public void preparePack(@NonNull Iterator<RevObject> objectsSource)
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 752)  			throws IOException {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 753)  		while (objectsSource.hasNext()) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 754)  			addObject(objectsSource.next());
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 755)  		}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 756)  	}
                                                                                                                                           757)
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 758)  	/**
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 759)  	 * Prepare the list of objects to be written to the pack stream.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 760)  	 * <p>
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 761)  	 * Basing on these 2 sets, another set of objects to put in a pack file is
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 762)  	 * created: this set consists of all objects reachable (ancestors) from
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 763)  	 * interesting objects, except uninteresting objects and their ancestors.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 764)  	 * This method uses class {@link org.eclipse.jgit.revwalk.ObjectWalk}
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 765)  	 * extensively to find out that appropriate set of output objects and their
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 766)  	 * optimal order in output pack. Order is consistent with general git
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 767)  	 * in-pack rules: sort by object type, recency, path and delta-base first.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 768)  	 * </p>
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 769)  	 *
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 770)  	 * @param countingMonitor
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 771)  	 *            progress during object enumeration.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 772)  	 * @param want
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 773)  	 *            collection of objects to be marked as interesting (start
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 774)  	 *            points of graph traversal). Must not be {@code null}.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 775)  	 * @param have
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 776)  	 *            collection of objects to be marked as uninteresting (end
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 777)  	 *            points of graph traversal). Pass {@link #NONE} if all objects
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 778)  	 *            reachable from {@code want} are desired, such as when serving
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 779)  	 *            a clone.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 780)  	 * @throws java.io.IOException
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 781)  	 *             when some I/O problem occur during reading objects.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 782)  	 */
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 783)  	public void preparePack(ProgressMonitor countingMonitor,
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 784)  			@NonNull Set<? extends ObjectId> want,
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 785)  			@NonNull Set<? extends ObjectId> have) throws IOException {
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 786)  		preparePack(countingMonitor, want, have, NONE, NONE);
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 787)  	}
                                                                                                                                           788)
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 789)  	/**
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 790)  	 * Prepare the list of objects to be written to the pack stream.
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 791)  	 * <p>
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 792)  	 * Like {@link #preparePack(ProgressMonitor, Set, Set)} but also allows
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 793)  	 * specifying commits that should not be walked past ("shallow" commits).
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 794)  	 * The caller is responsible for filtering out commits that should not be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 795)  	 * shallow any more ("unshallow" commits as in {@link #setShallowPack}) from
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 796)  	 * the shallow set.
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 797)  	 *
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 798)  	 * @param countingMonitor
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 799)  	 *            progress during object enumeration.
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 800)  	 * @param want
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 801)  	 *            objects of interest, ancestors of which will be included in
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 802)  	 *            the pack. Must not be {@code null}.
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 803)  	 * @param have
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 804)  	 *            objects whose ancestors (up to and including {@code shallow}
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 805)  	 *            commits) do not need to be included in the pack because they
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 806)  	 *            are already available from elsewhere. Must not be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 807)  	 *            {@code null}.
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 808)  	 * @param shallow
f28de24fa org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 23:38:21 +0000 809)  	 *            commits indicating the boundary of the history marked with
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 810)  	 *            {@code have}. Shallow commits have parents but those parents
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 811)  	 *            are considered not to be already available. Parents of
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 812)  	 *            {@code shallow} commits and earlier generations will be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 813)  	 *            included in the pack if requested by {@code want}. Must not be
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 814)  	 *            {@code null}.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 815)  	 * @throws java.io.IOException
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 816)  	 *             an I/O problem occurred while reading objects.
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 817)  	 */
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 818)  	public void preparePack(ProgressMonitor countingMonitor,
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 819)  			@NonNull Set<? extends ObjectId> want,
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 820)  			@NonNull Set<? extends ObjectId> have,
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 821)  			@NonNull Set<? extends ObjectId> shallow) throws IOException {
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 822)  		preparePack(countingMonitor, want, have, shallow, NONE);
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 823)  	}
                                                                                                                                           824)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 825)  	/**
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 826)  	 * Prepare the list of objects to be written to the pack stream.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 827)  	 * <p>
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 828)  	 * Like {@link #preparePack(ProgressMonitor, Set, Set)} but also allows
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 829)  	 * specifying commits that should not be walked past ("shallow" commits).
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 830)  	 * The caller is responsible for filtering out commits that should not be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 831)  	 * shallow any more ("unshallow" commits as in {@link #setShallowPack}) from
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 832)  	 * the shallow set.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 833)  	 *
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 834)  	 * @param countingMonitor
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 835)  	 *            progress during object enumeration.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 836)  	 * @param want
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 837)  	 *            objects of interest, ancestors of which will be included in
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 838)  	 *            the pack. Must not be {@code null}.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 839)  	 * @param have
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 840)  	 *            objects whose ancestors (up to and including {@code shallow}
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 841)  	 *            commits) do not need to be included in the pack because they
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 842)  	 *            are already available from elsewhere. Must not be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 843)  	 *            {@code null}.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 844)  	 * @param shallow
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 845)  	 *            commits indicating the boundary of the history marked with
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 846)  	 *            {@code have}. Shallow commits have parents but those parents
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 847)  	 *            are considered not to be already available. Parents of
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 848)  	 *            {@code shallow} commits and earlier generations will be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 849)  	 *            included in the pack if requested by {@code want}. Must not be
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 850)  	 *            {@code null}.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 851)  	 * @param noBitmaps
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 852)  	 *            collection of objects to be excluded from bitmap commit
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 853)  	 *            selection.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 854)  	 * @throws java.io.IOException
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 855)  	 *             an I/O problem occurred while reading objects.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 856)  	 */
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 857)  	public void preparePack(ProgressMonitor countingMonitor,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 858)  			@NonNull Set<? extends ObjectId> want,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 859)  			@NonNull Set<? extends ObjectId> have,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 860)  			@NonNull Set<? extends ObjectId> shallow,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 861)  			@NonNull Set<? extends ObjectId> noBitmaps) throws IOException {
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 862)  		try (ObjectWalk ow = getObjectWalk()) {
3b0b7677f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Nieder           2016-08-08 20:50:57 +0000 863)  			ow.assumeShallow(shallow);
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 864)  			preparePack(countingMonitor, ow, want, have, noBitmaps);
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 865)  		}
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 866)  	}
                                                                                                                                           867)
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 868)  	private ObjectWalk getObjectWalk() {
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 869)  		return shallowPack ? new DepthWalk.ObjectWalk(reader, depth - 1)
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 870)  				: new ObjectWalk(reader);
08480c948 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-02-06 23:50:09 +0000 871)  	}
                                                                                                                                           872)
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 873)  	/**
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 874)  	 * Prepare the list of objects to be written to the pack stream.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 875)  	 * <p>
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 876)  	 * Basing on these 2 sets, another set of objects to put in a pack file is
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 877)  	 * created: this set consists of all objects reachable (ancestors) from
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 878)  	 * interesting objects, except uninteresting objects and their ancestors.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 879)  	 * This method uses class {@link org.eclipse.jgit.revwalk.ObjectWalk}
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 880)  	 * extensively to find out that appropriate set of output objects and their
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 881)  	 * optimal order in output pack. Order is consistent with general git
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 882)  	 * in-pack rules: sort by object type, recency, path and delta-base first.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 883)  	 * </p>
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 884)  	 *
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 885)  	 * @param countingMonitor
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 886)  	 *            progress during object enumeration.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 887)  	 * @param walk
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 888)  	 *            ObjectWalk to perform enumeration.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 889)  	 * @param interestingObjects
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 890)  	 *            collection of objects to be marked as interesting (start
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 891)  	 *            points of graph traversal). Must not be {@code null}.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 892)  	 * @param uninterestingObjects
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 893)  	 *            collection of objects to be marked as uninteresting (end
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 894)  	 *            points of graph traversal). Pass {@link #NONE} if all objects
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 895)  	 *            reachable from {@code want} are desired, such as when serving
4e650c0d7 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2016-01-13 00:30:32 +0000 896)  	 *            a clone.
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 897)  	 * @param noBitmaps
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 898)  	 *            collection of objects to be excluded from bitmap commit
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 899)  	 *            selection.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 900)  	 * @throws java.io.IOException
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 901)  	 *             when some I/O problem occur during reading objects.
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 902)  	 */
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 903)  	public void preparePack(ProgressMonitor countingMonitor,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 904)  			@NonNull ObjectWalk walk,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 905)  			@NonNull Set<? extends ObjectId> interestingObjects,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 906)  			@NonNull Set<? extends ObjectId> uninterestingObjects,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 907)  			@NonNull Set<? extends ObjectId> noBitmaps)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 908)  			throws IOException {
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 909)  		if (countingMonitor == null)
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 910)  			countingMonitor = NullProgressMonitor.INSTANCE;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 911)  		if (shallowPack && !(walk instanceof DepthWalk.ObjectWalk))
d385a7a5e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 22:37:36 +0000 912)  			throw new IllegalArgumentException(
d385a7a5e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 22:37:36 +0000 913)  					JGitText.get().shallowPacksRequireDepthWalk);
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 914)  		findObjectsToPack(countingMonitor, walk, interestingObjects,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 915)  				uninterestingObjects, noBitmaps);
74333e63b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-16 19:18:39 +0000 916)  	}
                                                                                                                                           917)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 918)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 919)  	 * Determine if the pack file will contain the requested object.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 920)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 921)  	 * @param id
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 922)  	 *            the object to test the existence of.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 923)  	 * @return true if the object will appear in the output pack file.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 924)  	 * @throws java.io.IOException
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 925)  	 *             a cached pack cannot be examined.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 926)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 927)  	public boolean willInclude(AnyObjectId id) throws IOException {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 928)  		ObjectToPack obj = objectsMap.get(id);
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 929)  		return obj != null && !obj.isEdge();
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 930)  	}
                                                                                                                                           931)
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 932)  	/**
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 933)  	 * Lookup the ObjectToPack object for a given ObjectId.
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 934)  	 *
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 935)  	 * @param id
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 936)  	 *            the object to find in the pack.
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 937)  	 * @return the object we are packing, or null.
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 938)  	 */
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 939)  	public ObjectToPack get(AnyObjectId id) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 940)  		ObjectToPack obj = objectsMap.get(id);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 941)  		return obj != null && !obj.isEdge() ? obj : null;
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 942)  	}
                                                                                                                                           943)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 944)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 945)  	 * Computes SHA-1 of lexicographically sorted objects ids written in this
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 946)  	 * pack, as used to name a pack file in repository.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 947)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 948)  	 * @return ObjectId representing SHA-1 name of a pack that was created.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 949)  	 */
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 950)  	public ObjectId computeName() {
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 951)  		final byte[] buf = new byte[OBJECT_ID_LENGTH];
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 952)  		final MessageDigest md = Constants.newMessageDigest();
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 953)  		for (ObjectToPack otp : sortByName()) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 954)  			otp.copyRawTo(buf, 0);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 955)  			md.update(buf, 0, OBJECT_ID_LENGTH);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 956)  		}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 957)  		return ObjectId.fromRaw(md.digest());
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 958)  	}
                                                                                                                                           959)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 960)  	/**
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 961)  	 * Returns the index format version that will be written.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 962)  	 * <p>
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 963)  	 * This method can only be invoked after
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 964)  	 * {@link #writePack(ProgressMonitor, ProgressMonitor, OutputStream)} has
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 965)  	 * been invoked and completed successfully.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 966)  	 *
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 967)  	 * @return the index format version.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 968)  	 */
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 969)  	public int getIndexVersion() {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 970)  		int indexVersion = config.getIndexVersion();
616bc74cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:00:46 +0000 971)  		if (indexVersion <= 0) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 972)  			for (BlockList<ObjectToPack> objs : objectsLists)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 973)  				indexVersion = Math.max(indexVersion,
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 974)  						PackIndexWriter.oldestPossibleFormat(objs));
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 975)  		}
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 976)  		return indexVersion;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 977)  	}
                                                                                                                                           978)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 979)  	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 980)  	 * Create an index file to match the pack file just written.
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 981)  	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 982)  	 * Called after
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 983)  	 * {@link #writePack(ProgressMonitor, ProgressMonitor, OutputStream)}.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 984)  	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 985)  	 * Writing an index is only required for local pack storage. Packs sent on
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 986)  	 * the network do not need to create an index.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 987)  	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 988)  	 * @param indexStream
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 989)  	 *            output for the index data. Caller is responsible for closing
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 990)  	 *            this stream.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 991)  	 * @throws java.io.IOException
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 992)  	 *             the index data could not be written to the supplied stream.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 993)  	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 994)  	public void writeIndex(OutputStream indexStream) throws IOException {
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 995)  		if (isIndexDisabled())
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 996)  			throw new IOException(JGitText.get().cachedPacksPreventsIndexCreation);
                                                                                                                                           997)
1b6a549ff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-09-14 22:34:55 +0000 998)  		long writeStart = System.currentTimeMillis();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 999)  		final PackIndexWriter iw = PackIndexWriter.createVersion(
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1000) 				indexStream, getIndexVersion());
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1001) 		iw.write(sortByName(), packcsum);
1b6a549ff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-09-14 22:34:55 +0000 1002) 		stats.timeWriting += System.currentTimeMillis() - writeStart;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1003) 	}
                                                                                                                                           1004)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1005) 	/**
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1006) 	 * Create a bitmap index file to match the pack file just written.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1007) 	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 1008) 	 * Called after {@link #prepareBitmapIndex(ProgressMonitor)}.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1009) 	 *
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1010) 	 * @param bitmapIndexStream
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1011) 	 *            output for the bitmap index data. Caller is responsible for
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1012) 	 *            closing this stream.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1013) 	 * @throws java.io.IOException
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1014) 	 *             the index data could not be written to the supplied stream.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1015) 	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 1016) 	public void writeBitmapIndex(OutputStream bitmapIndexStream)
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 1017) 			throws IOException {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1018) 		if (writeBitmaps == null)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1019) 			throw new IOException(JGitText.get().bitmapsMustBePrepared);
                                                                                                                                           1020)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1021) 		long writeStart = System.currentTimeMillis();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1022) 		final PackBitmapIndexWriterV1 iw = new PackBitmapIndexWriterV1(bitmapIndexStream);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1023) 		iw.write(writeBitmaps, packcsum);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1024) 		stats.timeWriting += System.currentTimeMillis() - writeStart;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1025) 	}
                                                                                                                                           1026)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1027) 	private List<ObjectToPack> sortByName() {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1028) 		if (sortedByName == null) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1029) 			int cnt = 0;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1030) 			cnt += objectsLists[OBJ_COMMIT].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1031) 			cnt += objectsLists[OBJ_TREE].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1032) 			cnt += objectsLists[OBJ_BLOB].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1033) 			cnt += objectsLists[OBJ_TAG].size();
                                                                                                                                           1034)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1035) 			sortedByName = new BlockList<>(cnt);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1036) 			sortedByName.addAll(objectsLists[OBJ_COMMIT]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1037) 			sortedByName.addAll(objectsLists[OBJ_TREE]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1038) 			sortedByName.addAll(objectsLists[OBJ_BLOB]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1039) 			sortedByName.addAll(objectsLists[OBJ_TAG]);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1040) 			Collections.sort(sortedByName);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1041) 		}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1042) 		return sortedByName;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1043) 	}
                                                                                                                                           1044)
1421106d7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1045) 	private void beginPhase(PackingPhase phase, ProgressMonitor monitor,
1421106d7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1046) 			long cnt) {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1047) 		state.phase = phase;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1048) 		String task;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1049) 		switch (phase) {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1050) 		case COUNTING:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1051) 			task = JGitText.get().countingObjects;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1052) 			break;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1053) 		case GETTING_SIZES:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1054) 			task = JGitText.get().searchForSizes;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1055) 			break;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1056) 		case FINDING_SOURCES:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1057) 			task = JGitText.get().searchForReuse;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1058) 			break;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1059) 		case COMPRESSING:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1060) 			task = JGitText.get().compressingObjects;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1061) 			break;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1062) 		case WRITING:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1063) 			task = JGitText.get().writingObjects;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1064) 			break;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1065) 		case BUILDING_BITMAPS:
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1066) 			task = JGitText.get().buildingBitmaps;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1067) 			break;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1068) 		default:
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1069) 			throw new IllegalArgumentException(
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1070) 					MessageFormat.format(JGitText.get().illegalPackingPhase, phase));
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1071) 		}
1421106d7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1072) 		monitor.beginTask(task, (int) cnt);
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1073) 	}
                                                                                                                                           1074)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1075) 	private void endPhase(ProgressMonitor monitor) {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1076) 		monitor.endTask();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1077) 	}
                                                                                                                                           1078)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1079) 	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1080) 	 * Write the prepared pack to the supplied stream.
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 1081) 	 * <p>
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1082) 	 * Called after
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1083) 	 * {@link #preparePack(ProgressMonitor, ObjectWalk, Set, Set, Set)} or
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1084) 	 * {@link #preparePack(ProgressMonitor, Set, Set)}.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1085) 	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 1086) 	 * Performs delta search if enabled and writes the pack stream.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1087) 	 * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1088) 	 * All reused objects data checksum (Adler32/CRC32) is computed and
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1089) 	 * validated against existing checksum.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1090) 	 *
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1091) 	 * @param compressMonitor
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1092) 	 *            progress monitor to report object compression work.
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1093) 	 * @param writeMonitor
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1094) 	 *            progress monitor to report the number of objects written.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1095) 	 * @param packStream
2156aa894 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-03-13 00:08:14 +0000 1096) 	 *            output stream of pack data. The stream should be buffered by
2156aa894 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-03-13 00:08:14 +0000 1097) 	 *            the caller. The caller is responsible for closing the stream.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1098) 	 * @throws java.io.IOException
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1099) 	 *             an error occurred reading a local object's data to include in
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1100) 	 *             the pack, or writing compressed object data to the output
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1101) 	 *             stream.
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 1102) 	 * @throws WriteAbortedException
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1103) 	 *             the write operation is aborted by
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1104) 	 *             {@link org.eclipse.jgit.transport.ObjectCountCallback} .
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1105) 	 */
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1106) 	public void writePack(ProgressMonitor compressMonitor,
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1107) 			ProgressMonitor writeMonitor, OutputStream packStream)
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1108) 			throws IOException {
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1109) 		if (compressMonitor == null)
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1110) 			compressMonitor = NullProgressMonitor.INSTANCE;
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1111) 		if (writeMonitor == null)
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1112) 			writeMonitor = NullProgressMonitor.INSTANCE;
                                                                                                                                           1113)
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1114) 		excludeInPacks = null;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1115) 		excludeInPackLast = null;
                                                                                                                                           1116)
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1117) 		boolean needSearchForReuse = reuseSupport != null && (
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1118) 				   reuseDeltas
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1119) 				|| config.isReuseObjects()
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1120) 				|| !cachedPacks.isEmpty());
                                                                                                                                           1121)
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1122) 		if (compressMonitor instanceof BatchingProgressMonitor) {
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1123) 			long delay = 1000;
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1124) 			if (needSearchForReuse && config.isDeltaCompress())
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1125) 				delay = 500;
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1126) 			((BatchingProgressMonitor) compressMonitor).setDelayStart(
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1127) 					delay,
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1128) 					TimeUnit.MILLISECONDS);
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1129) 		}
                                                                                                                                           1130)
68cc21b60 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-07-28 17:22:50 +0000 1131) 		if (needSearchForReuse)
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1132) 			searchForReuse(compressMonitor);
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1133) 		if (config.isDeltaCompress())
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1134) 			searchForDeltas(compressMonitor);
                                                                                                                                           1135)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1136) 		crc32 = new CRC32();
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1137) 		final PackOutputStream out = new PackOutputStream(
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1138) 			writeMonitor,
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1139) 			isIndexDisabled()
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1140) 				? packStream
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1141) 				: new CheckedOutputStream(packStream, crc32),
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1142) 			this);
                                                                                                                                           1143)
7a9bf1e2e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-14 15:01:52 +0000 1144) 		long objCnt = getObjectCount();
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1145) 		stats.totalObjects = objCnt;
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 1146) 		if (callback != null)
53be446f6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Yuxuan 'fishy' Wang       2015-06-09 21:11:13 +0000 1147) 			callback.setObjectCount(objCnt);
1421106d7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1148) 		beginPhase(PackingPhase.WRITING, writeMonitor, objCnt);
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1149) 		long writeStart = System.currentTimeMillis();
bc90ce778 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2014-09-04 19:45:18 +0000 1150) 		try {
21f76c2a6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1151) 			out.writeFileHeader(PACK_VERSION_GENERATED, objCnt);
cc6210619 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1152) 			out.flush();
                                                                                                                                           1153)
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1154) 			writeObjects(out);
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1155) 			if (!edgeObjects.isEmpty() || !cachedPacks.isEmpty()) {
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 1156) 				for (PackStatistics.ObjectType.Accumulator typeStat : stats.objectTypes) {
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1157) 					if (typeStat == null)
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1158) 						continue;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1159) 					stats.thinPackBytes += typeStat.bytes;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1160) 				}
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1161) 			}
                                                                                                                                           1162)
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1163) 			stats.reusedPacks = Collections.unmodifiableList(cachedPacks);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1164) 			for (CachedPack pack : cachedPacks) {
388ba7e00 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 01:36:45 +0000 1165) 				long deltaCnt = pack.getDeltaCount();
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1166) 				stats.reusedObjects += pack.getObjectCount();
388ba7e00 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 01:36:45 +0000 1167) 				stats.reusedDeltas += deltaCnt;
388ba7e00 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 01:36:45 +0000 1168) 				stats.totalDeltas += deltaCnt;
6e5c71b35 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-04-24 18:31:22 +0000 1169) 				reuseSupport.copyPackAsIs(out, pack);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1170) 			}
f288c27e4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1171) 			writeChecksum(out);
cc6210619 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1172) 			out.flush();
bc90ce778 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2014-09-04 19:45:18 +0000 1173) 		} finally {
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1174) 			stats.timeWriting = System.currentTimeMillis() - writeStart;
1b6a549ff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-09-14 22:34:55 +0000 1175) 			stats.depth = depth;
                                                                                                                                           1176)
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 1177) 			for (PackStatistics.ObjectType.Accumulator typeStat : stats.objectTypes) {
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1178) 				if (typeStat == null)
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1179) 					continue;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1180) 				typeStat.cntDeltas += typeStat.reusedDeltas;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1181) 				stats.reusedObjects += typeStat.reusedObjects;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1182) 				stats.reusedDeltas += typeStat.reusedDeltas;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1183) 				stats.totalDeltas += typeStat.cntDeltas;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1184) 			}
bc90ce778 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2014-09-04 19:45:18 +0000 1185) 		}
                                                                                                                                           1186)
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1187) 		stats.totalBytes = out.length();
0e73d3950 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-05-20 22:01:36 +0000 1188) 		reader.close();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1189) 		endPhase(writeMonitor);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1190) 	}
                                                                                                                                           1191)
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1192) 	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1193) 	 * Get statistics of what this PackWriter did in order to create the final
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1194) 	 * pack stream.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1195) 	 *
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1196) 	 * @return description of what this PackWriter did in order to create the
8b20f2c89 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-16 17:08:18 +0000 1197) 	 *         final pack stream. This should only be invoked after the calls to
8b20f2c89 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-16 17:08:18 +0000 1198) 	 *         create the pack/index/bitmap have completed.
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1199) 	 */
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 1200) 	public PackStatistics getStatistics() {
d9bbb04c3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-12 20:56:16 +0000 1201) 		return new PackStatistics(stats);
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1202) 	}
                                                                                                                                           1203)
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1204) 	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1205) 	 * Get snapshot of the current state of this PackWriter.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1206) 	 *
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1207) 	 * @return snapshot of the current state of this PackWriter.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1208) 	 */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1209) 	public State getState() {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1210) 		return state.snapshot();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1211) 	}
                                                                                                                                           1212)
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1213) 	/**
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1214) 	 * {@inheritDoc}
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 1215) 	 * <p>
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1216) 	 * Release all resources used by this writer.
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1217) 	 */
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1218) 	@Override
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1219) 	public void close() {
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1220) 		reader.close();
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1221) 		if (myDeflater != null) {
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1222) 			myDeflater.end();
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1223) 			myDeflater = null;
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1224) 		}
2b584b921 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1225) 		instances.remove(selfRef);
77030a5e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2015-02-09 13:11:50 +0000 1226) 	}
                                                                                                                                           1227)
b85af0632 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1228) 	private void searchForReuse(ProgressMonitor monitor) throws IOException {
1421106d7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1229) 		long cnt = 0;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1230) 		cnt += objectsLists[OBJ_COMMIT].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1231) 		cnt += objectsLists[OBJ_TREE].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1232) 		cnt += objectsLists[OBJ_BLOB].size();
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1233) 		cnt += objectsLists[OBJ_TAG].size();
                                                                                                                                           1234)
7505b9354 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-23 19:56:19 +0000 1235) 		long start = System.currentTimeMillis();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1236) 		beginPhase(PackingPhase.FINDING_SOURCES, monitor, cnt);
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1237) 		if (cnt <= 4096) {
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1238) 			// For small object counts, do everything as one list.
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1239) 			BlockList<ObjectToPack> tmp = new BlockList<>((int) cnt);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1240) 			tmp.addAll(objectsLists[OBJ_TAG]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1241) 			tmp.addAll(objectsLists[OBJ_COMMIT]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1242) 			tmp.addAll(objectsLists[OBJ_TREE]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1243) 			tmp.addAll(objectsLists[OBJ_BLOB]);
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1244) 			searchForReuse(monitor, tmp);
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1245) 			if (pruneCurrentObjectList) {
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1246) 				// If the list was pruned, we need to re-prune the main lists.
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1247) 				pruneEdgesFromObjectList(objectsLists[OBJ_COMMIT]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1248) 				pruneEdgesFromObjectList(objectsLists[OBJ_TREE]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1249) 				pruneEdgesFromObjectList(objectsLists[OBJ_BLOB]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1250) 				pruneEdgesFromObjectList(objectsLists[OBJ_TAG]);
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1251) 			}
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1252) 		} else {
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1253) 			searchForReuse(monitor, objectsLists[OBJ_TAG]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1254) 			searchForReuse(monitor, objectsLists[OBJ_COMMIT]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1255) 			searchForReuse(monitor, objectsLists[OBJ_TREE]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1256) 			searchForReuse(monitor, objectsLists[OBJ_BLOB]);
36a38adf7 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1257) 		}
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1258) 		endPhase(monitor);
7505b9354 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-23 19:56:19 +0000 1259) 		stats.timeSearchingForReuse = System.currentTimeMillis() - start;
                                                                                                                                           1260)
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1261) 		if (config.isReuseDeltas() && config.getCutDeltaChains()) {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1262) 			cutDeltaChains(objectsLists[OBJ_TREE]);
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1263) 			cutDeltaChains(objectsLists[OBJ_BLOB]);
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1264) 		}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1265) 	}
                                                                                                                                           1266)
0be24ebf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1267) 	private void searchForReuse(ProgressMonitor monitor, List<ObjectToPack> list)
0be24ebf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1268) 			throws IOException, MissingObjectException {
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1269) 		pruneCurrentObjectList = false;
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1270) 		reuseSupport.selectObjectRepresentation(this, monitor, list);
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1271) 		if (pruneCurrentObjectList)
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1272) 			pruneEdgesFromObjectList(list);
0be24ebf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1273) 	}
                                                                                                                                           1274)
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1275) 	private void cutDeltaChains(BlockList<ObjectToPack> list)
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1276) 			throws IOException {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1277) 		int max = config.getMaxDeltaDepth();
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1278) 		for (int idx = list.size() - 1; idx >= 0; idx--) {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1279) 			int d = 0;
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1280) 			ObjectToPack b = list.get(idx).getDeltaBase();
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1281) 			while (b != null) {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1282) 				if (d < b.getChainLength())
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1283) 					break;
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1284) 				b.setChainLength(++d);
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1285) 				if (d >= max && b.isDeltaRepresentation()) {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1286) 					reselectNonDelta(b);
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1287) 					break;
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1288) 				}
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1289) 				b = b.getDeltaBase();
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1290) 			}
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1291) 		}
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1292) 		if (config.isDeltaCompress()) {
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1293) 			for (ObjectToPack otp : list)
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1294) 				otp.clearChainLength();
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1295) 		}
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1296) 	}
                                                                                                                                           1297)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1298) 	private void searchForDeltas(ProgressMonitor monitor)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1299) 			throws MissingObjectException, IncorrectObjectTypeException,
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1300) 			IOException {
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1301) 		// Commits and annotated tags tend to have too many differences to
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1302) 		// really benefit from delta compression. Consequently just don't
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1303) 		// bother examining those types here.
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1304) 		//
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1305) 		ObjectToPack[] list = new ObjectToPack[
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1306) 				  objectsLists[OBJ_TREE].size()
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1307) 				+ objectsLists[OBJ_BLOB].size()
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1308) 				+ edgeObjects.size()];
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1309) 		int cnt = 0;
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1310) 		cnt = findObjectsNeedingDelta(list, cnt, OBJ_TREE);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1311) 		cnt = findObjectsNeedingDelta(list, cnt, OBJ_BLOB);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1312) 		if (cnt == 0)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1313) 			return;
37a10e300 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 14:55:43 +0000 1314) 		int nonEdgeCnt = cnt;
                                                                                                                                           1315)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1316) 		// Queue up any edge objects that we might delta against.  We won't
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1317) 		// be sending these as we assume the other side has them, but we need
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1318) 		// them in the search phase below.
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1319) 		//
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1320) 		for (ObjectToPack eo : edgeObjects) {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1321) 			eo.setWeight(0);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1322) 			list[cnt++] = eo;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1323) 		}
                                                                                                                                           1324)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1325) 		// Compute the sizes of the objects so we can do a proper sort.
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1326) 		// We let the reader skip missing objects if it chooses. For
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1327) 		// some readers this can be a huge win. We detect missing objects
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1328) 		// by having set the weights above to 0 and allowing the delta
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1329) 		// search code to discover the missing object and skip over it, or
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1330) 		// abort with an exception if we actually had to have it.
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1331) 		//
7505b9354 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-23 19:56:19 +0000 1332) 		final long sizingStart = System.currentTimeMillis();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1333) 		beginPhase(PackingPhase.GETTING_SIZES, monitor, cnt);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1334) 		AsyncObjectSizeQueue<ObjectToPack> sizeQueue = reader.getObjectSize(
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1335) 				Arrays.<ObjectToPack> asList(list).subList(0, cnt), false);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1336) 		try {
93a27ce72 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 18:25:57 +0000 1337) 			final long limit = Math.min(
93a27ce72 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 18:25:57 +0000 1338) 					config.getBigFileThreshold(),
93a27ce72 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 18:25:57 +0000 1339) 					Integer.MAX_VALUE);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1340) 			for (;;) {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1341) 				try {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1342) 					if (!sizeQueue.next())
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1343) 						break;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1344) 				} catch (MissingObjectException notFound) {
29997ab08 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:51 +0000 1345) 					monitor.update(1);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1346) 					if (ignoreMissingUninteresting) {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1347) 						ObjectToPack otp = sizeQueue.getCurrent();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1348) 						if (otp != null && otp.isEdge()) {
594d4ceb1 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 17:56:42 +0000 1349) 							otp.setDoNotDelta();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1350) 							continue;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1351) 						}
                                                                                                                                           1352)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1353) 						otp = objectsMap.get(notFound.getObjectId());
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1354) 						if (otp != null && otp.isEdge()) {
594d4ceb1 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 17:56:42 +0000 1355) 							otp.setDoNotDelta();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1356) 							continue;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1357) 						}
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1358) 					}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1359) 					throw notFound;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1360) 				}
                                                                                                                                           1361)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1362) 				ObjectToPack otp = sizeQueue.getCurrent();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1363) 				if (otp == null)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1364) 					otp = objectsMap.get(sizeQueue.getObjectId());
                                                                                                                                           1365)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1366) 				long sz = sizeQueue.getSize();
93a27ce72 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 18:25:57 +0000 1367) 				if (DeltaIndex.BLKSZ < sz && sz < limit)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1368) 					otp.setWeight((int) sz);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1369) 				else
594d4ceb1 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-04 17:56:42 +0000 1370) 					otp.setDoNotDelta(); // too small, or too big
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1371) 				monitor.update(1);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1372) 			}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1373) 		} finally {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1374) 			sizeQueue.release();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1375) 		}
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1376) 		endPhase(monitor);
7505b9354 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-23 19:56:19 +0000 1377) 		stats.timeSearchingForSizes = System.currentTimeMillis() - sizingStart;
                                                                                                                                           1378)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1379) 		// Sort the objects by path hash so like files are near each other,
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1380) 		// and then by size descending so that bigger files are first. This
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1381) 		// applies "Linus' Law" which states that newer files tend to be the
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1382) 		// bigger ones, because source files grow and hardly ever shrink.
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1383) 		//
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1384) 		Arrays.sort(list, 0, cnt, new Comparator<ObjectToPack>() {
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1385) 			@Override
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1386) 			public int compare(ObjectToPack a, ObjectToPack b) {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1387) 				int cmp = (a.isDoNotDelta() ? 1 : 0)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1388) 						- (b.isDoNotDelta() ? 1 : 0);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1389) 				if (cmp != 0)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1390) 					return cmp;
                                                                                                                                           1391)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1392) 				cmp = a.getType() - b.getType();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1393) 				if (cmp != 0)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1394) 					return cmp;
                                                                                                                                           1395)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1396) 				cmp = (a.getPathHash() >>> 1) - (b.getPathHash() >>> 1);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1397) 				if (cmp != 0)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1398) 					return cmp;
                                                                                                                                           1399)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1400) 				cmp = (a.getPathHash() & 1) - (b.getPathHash() & 1);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1401) 				if (cmp != 0)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1402) 					return cmp;
                                                                                                                                           1403)
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1404) 				cmp = (a.isEdge() ? 0 : 1) - (b.isEdge() ? 0 : 1);
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1405) 				if (cmp != 0)
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1406) 					return cmp;
                                                                                                                                           1407)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1408) 				return b.getWeight() - a.getWeight();
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1409) 			}
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1410) 		});
                                                                                                                                           1411)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1412) 		// Above we stored the objects we cannot delta onto the end.
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1413) 		// Remove them from the list so we don't waste time on them.
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1414) 		while (0 < cnt && list[cnt - 1].isDoNotDelta()) {
37a10e300 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 14:55:43 +0000 1415) 			if (!list[cnt - 1].isEdge())
37a10e300 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 14:55:43 +0000 1416) 				nonEdgeCnt--;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1417) 			cnt--;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1418) 		}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1419) 		if (cnt == 0)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1420) 			return;
                                                                                                                                           1421)
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1422) 		final long searchStart = System.currentTimeMillis();
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1423) 		searchForDeltas(monitor, list, cnt);
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1424) 		stats.deltaSearchNonEdgeObjects = nonEdgeCnt;
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1425) 		stats.timeCompressing = System.currentTimeMillis() - searchStart;
                                                                                                                                           1426)
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1427) 		for (int i = 0; i < cnt; i++)
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1428) 			if (!list[i].isEdge() && list[i].isDeltaRepresentation())
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1429) 				stats.deltasFound++;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1430) 	}
                                                                                                                                           1431)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1432) 	private int findObjectsNeedingDelta(ObjectToPack[] list, int cnt, int type) {
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1433) 		for (ObjectToPack otp : objectsLists[type]) {
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1434) 			if (otp.isDoNotDelta()) // delta is disabled for this path
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1435) 				continue;
2610eaf38 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-14 00:01:29 +0000 1436) 			if (otp.isDeltaRepresentation()) // already reusing a delta
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1437) 				continue;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1438) 			otp.setWeight(0);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1439) 			list[cnt++] = otp;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1440) 		}
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1441) 		return cnt;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1442) 	}
                                                                                                                                           1443)
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1444) 	private void reselectNonDelta(ObjectToPack otp) throws IOException {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1445) 		otp.clearDeltaBase();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1446) 		otp.clearReuseAsIs();
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1447) 		boolean old = reuseDeltas;
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1448) 		reuseDeltas = false;
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1449) 		reuseSupport.selectObjectRepresentation(this,
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1450) 				NullProgressMonitor.INSTANCE,
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1451) 				Collections.singleton(otp));
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1452) 		reuseDeltas = old;
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1453) 	}
                                                                                                                                           1454)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1455) 	private void searchForDeltas(final ProgressMonitor monitor,
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1456) 			final ObjectToPack[] list, final int cnt)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1457) 			throws MissingObjectException, IncorrectObjectTypeException,
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1458) 			LargeObjectException, IOException {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1459) 		int threads = config.getThreads();
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1460) 		if (threads == 0)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1461) 			threads = Runtime.getRuntime().availableProcessors();
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1462) 		if (threads <= 1 || cnt <= config.getDeltaSearchWindowSize())
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1463) 			singleThreadDeltaSearch(monitor, list, cnt);
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1464) 		else
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1465) 			parallelDeltaSearch(monitor, list, cnt, threads);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1466) 	}
                                                                                                                                           1467)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1468) 	private void singleThreadDeltaSearch(ProgressMonitor monitor,
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1469) 			ObjectToPack[] list, int cnt) throws IOException {
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1470) 		long totalWeight = 0;
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1471) 		for (int i = 0; i < cnt; i++) {
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1472) 			ObjectToPack o = list[i];
36c6aecbe org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-11-03 23:10:02 +0000 1473) 			totalWeight += DeltaTask.getAdjustedWeight(o);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1474) 		}
                                                                                                                                           1475)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1476) 		long bytesPerUnit = 1;
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1477) 		while (DeltaTask.MAX_METER <= (totalWeight / bytesPerUnit))
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1478) 			bytesPerUnit <<= 10;
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1479) 		int cost = (int) (totalWeight / bytesPerUnit);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1480) 		if (totalWeight % bytesPerUnit != 0)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1481) 			cost++;
                                                                                                                                           1482)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1483) 		beginPhase(PackingPhase.COMPRESSING, monitor, cost);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1484) 		new DeltaWindow(config, new DeltaCache(config), reader,
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1485) 				monitor, bytesPerUnit,
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1486) 				list, 0, cnt).search();
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1487) 		endPhase(monitor);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1488) 	}
                                                                                                                                           1489)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1490) 	private void parallelDeltaSearch(ProgressMonitor monitor,
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1491) 			ObjectToPack[] list, int cnt, int threads) throws IOException {
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1492) 		DeltaCache dc = new ThreadSafeDeltaCache(config);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1493) 		ThreadSafeProgressMonitor pm = new ThreadSafeProgressMonitor(monitor);
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1494) 		DeltaTask.Block taskBlock = new DeltaTask.Block(threads, config,
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1495) 				reader, dc, pm,
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1496) 				list, 0, cnt);
21e4aa2b9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:31:00 +0000 1497) 		taskBlock.partitionTasks();
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1498) 		beginPhase(PackingPhase.COMPRESSING, monitor, taskBlock.cost());
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1499) 		pm.startWorkers(taskBlock.tasks.size());
                                                                                                                                           1500)
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1501) 		Executor executor = config.getExecutor();
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1502) 		final List<Throwable> errors =
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1503) 				Collections.synchronizedList(new ArrayList<Throwable>(threads));
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1504) 		if (executor instanceof ExecutorService) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1505) 			// Caller supplied us a service, use it directly.
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1506) 			runTasks((ExecutorService) executor, pm, taskBlock, errors);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1507) 		} else if (executor == null) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1508) 			// Caller didn't give us a way to run the tasks, spawn up a
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1509) 			// temporary thread pool and make sure it tears down cleanly.
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1510) 			ExecutorService pool = Executors.newFixedThreadPool(threads);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1511) 			try {
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1512) 				runTasks(pool, pm, taskBlock, errors);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1513) 			} finally {
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1514) 				pool.shutdown();
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1515) 				for (;;) {
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1516) 					try {
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1517) 						if (pool.awaitTermination(60, TimeUnit.SECONDS))
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1518) 							break;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1519) 					} catch (InterruptedException e) {
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1520) 						throw new IOException(
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1521) 								JGitText.get().packingCancelledDuringObjectsWriting);
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1522) 					}
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1523) 				}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1524) 			}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1525) 		} else {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1526) 			// The caller gave us an executor, but it might not do
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1527) 			// asynchronous execution.  Wrap everything and hope it
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1528) 			// can schedule these for us.
f3ec7cf3f org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-18 15:59:45 +0000 1529) 			for (DeltaTask task : taskBlock.tasks) {
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1530) 				executor.execute(new Runnable() {
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1531) 					@Override
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1532) 					public void run() {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1533) 						try {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1534) 							task.call();
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1535) 						} catch (Throwable failure) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1536) 							errors.add(failure);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1537) 						}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1538) 					}
7ac182f4e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 00:05:08 +0000 1539) 				});
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1540) 			}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1541) 			try {
bdf535de4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-10-27 15:37:31 +0000 1542) 				pm.waitForCompletion();
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1543) 			} catch (InterruptedException ie) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1544) 				// We can't abort the other tasks as we have no handle.
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1545) 				// Cross our fingers and just break out anyway.
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1546) 				//
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1547) 				throw new IOException(
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1548) 						JGitText.get().packingCancelledDuringObjectsWriting);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1549) 			}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1550) 		}
                                                                                                                                           1551)
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1552) 		// If any task threw an error, try to report it back as
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1553) 		// though we weren't using a threaded search algorithm.
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1554) 		//
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1555) 		if (!errors.isEmpty()) {
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1556) 			Throwable err = errors.get(0);
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1557) 			if (err instanceof Error)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1558) 				throw (Error) err;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1559) 			if (err instanceof RuntimeException)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1560) 				throw (RuntimeException) err;
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1561) 			if (err instanceof IOException)
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1562) 				throw (IOException) err;
                                                                                                                                           1563)
0c259eaf1 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-12-19 23:02:34 +0000 1564) 			throw new IOException(err.getMessage(), err);
74e083501 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:17:30 +0000 1565) 		}
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1566) 		endPhase(monitor);
5d8a9f6f3 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-17 18:43:01 +0000 1567) 	}
                                                                                                                                           1568)
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1569) 	private static void runTasks(ExecutorService pool,
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1570) 			ThreadSafeProgressMonitor pm,
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1571) 			DeltaTask.Block tb, List<Throwable> errors) throws IOException {
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1572) 		List<Future<?>> futures = new ArrayList<>(tb.tasks.size());
d0a533762 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 18:34:50 +0000 1573) 		for (DeltaTask task : tb.tasks)
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1574) 			futures.add(pool.submit(task));
                                                                                                                                           1575)
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1576) 		try {
bdf535de4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-10-27 15:37:31 +0000 1577) 			pm.waitForCompletion();
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1578) 			for (Future<?> f : futures) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1579) 				try {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1580) 					f.get();
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1581) 				} catch (ExecutionException failed) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1582) 					errors.add(failed.getCause());
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1583) 				}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1584) 			}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1585) 		} catch (InterruptedException ie) {
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1586) 			for (Future<?> f : futures)
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1587) 				f.cancel(true);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1588) 			throw new IOException(
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1589) 					JGitText.get().packingCancelledDuringObjectsWriting);
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1590) 		}
1b783d037 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 17:50:28 +0000 1591) 	}
                                                                                                                                           1592)
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1593) 	private void writeObjects(PackOutputStream out) throws IOException {
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1594) 		writeObjects(out, objectsLists[OBJ_COMMIT]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1595) 		writeObjects(out, objectsLists[OBJ_TAG]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1596) 		writeObjects(out, objectsLists[OBJ_TREE]);
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 1597) 		writeObjects(out, objectsLists[OBJ_BLOB]);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1598) 	}
                                                                                                                                           1599)
26dffbe04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 1600) 	private void writeObjects(PackOutputStream out, List<ObjectToPack> list)
26dffbe04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 1601) 			throws IOException {
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1602) 		if (list.isEmpty())
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1603) 			return;
                                                                                                                                           1604)
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1605) 		typeStats = stats.objectTypes[list.get(0).getType()];
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1606) 		long beginOffset = out.length();
                                                                                                                                           1607)
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1608) 		if (reuseSupport != null) {
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1609) 			reuseSupport.writeObjects(out, list);
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1610) 		} else {
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1611) 			for (ObjectToPack otp : list)
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1612) 				out.writeObject(otp);
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1613) 		}
                                                                                                                                           1614)
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1615) 		typeStats.bytes += out.length() - beginOffset;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1616) 		typeStats.cntObjects = list.size();
26dffbe04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 1617) 	}
                                                                                                                                           1618)
28ba4747b org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:59:36 +0000 1619) 	void writeObject(PackOutputStream out, ObjectToPack otp) throws IOException {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1620) 		if (!otp.isWritten())
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1621) 			writeObjectImpl(out, otp);
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1622) 	}
                                                                                                                                           1623)
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1624) 	private void writeObjectImpl(PackOutputStream out, ObjectToPack otp)
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1625) 			throws IOException {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1626) 		if (otp.wantWrite()) {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1627) 			// A cycle exists in this delta chain. This should only occur if a
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1628) 			// selected object representation disappeared during writing
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1629) 			// (for example due to a concurrent repack) and a different base
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1630) 			// was chosen, forcing a cycle. Select something other than a
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1631) 			// delta, and write this object.
5d446f410 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 17:07:14 +0000 1632) 			reselectNonDelta(otp);
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1633) 		}
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1634) 		otp.markWantWrite();
                                                                                                                                           1635)
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1636) 		while (otp.isReuseAsIs()) {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1637) 			writeBase(out, otp.getDeltaBase());
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1638) 			if (otp.isWritten())
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1639) 				return; // Delta chain cycle caused this to write already.
                                                                                                                                           1640)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1641) 			crc32.reset();
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1642) 			otp.setOffset(out.length());
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1643) 			try {
1b2062fe3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-02 20:23:58 +0000 1644) 				reuseSupport.copyObjectAsIs(out, otp, reuseValidate);
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1645) 				out.endObject();
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1646) 				otp.setCRC((int) crc32.getValue());
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1647) 				typeStats.reusedObjects++;
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1648) 				if (otp.isDeltaRepresentation()) {
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1649) 					typeStats.reusedDeltas++;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1650) 					typeStats.deltaBytes += out.length() - otp.getOffset();
71f168fcd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 01:17:57 +0000 1651) 				}
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1652) 				return;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1653) 			} catch (StoredObjectRepresentationNotAvailableException gone) {
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1654) 				if (otp.getOffset() == out.length()) {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1655) 					otp.setOffset(0);
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1656) 					otp.clearDeltaBase();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1657) 					otp.clearReuseAsIs();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1658) 					reuseSupport.selectObjectRepresentation(this,
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1659) 							NullProgressMonitor.INSTANCE,
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1660) 							Collections.singleton(otp));
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1661) 					continue;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1662) 				} else {
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1663) 					// Object writing already started, we cannot recover.
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1664) 					//
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1665) 					CorruptObjectException coe;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1666) 					coe = new CorruptObjectException(otp, ""); //$NON-NLS-1$
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1667) 					coe.initCause(gone);
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1668) 					throw coe;
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1669) 				}
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1670) 			}
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1671) 		}
                                                                                                                                           1672)
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1673) 		// If we reached here, reuse wasn't possible.
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1674) 		//
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1675) 		if (otp.isDeltaRepresentation())
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1676) 			writeDeltaObjectDeflate(out, otp);
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1677) 		else
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1678) 			writeWholeObjectDeflate(out, otp);
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1679) 		out.endObject();
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1680) 		otp.setCRC((int) crc32.getValue());
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1681) 	}
                                                                                                                                           1682)
60e51251d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1683) 	private void writeBase(PackOutputStream out, ObjectToPack base)
60e51251d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1684) 			throws IOException {
60e51251d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1685) 		if (base != null && !base.isWritten() && !base.isEdge())
60e51251d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-11-18 23:55:52 +0000 1686) 			writeObjectImpl(out, base);
ece88b99e org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:46:05 +0000 1687) 	}
                                                                                                                                           1688)
f288c27e4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1689) 	private void writeWholeObjectDeflate(PackOutputStream out,
f288c27e4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1690) 			final ObjectToPack otp) throws IOException {
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1691) 		final Deflater deflater = deflater();
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 1692) 		final ObjectLoader ldr = reader.open(otp, otp.getType());
                                                                                                                                           1693)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1694) 		crc32.reset();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1695) 		otp.setOffset(out.length());
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 1696) 		out.writeHeader(otp, ldr.getSize());
                                                                                                                                           1697)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1698) 		deflater.reset();
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 1699) 		DeflaterOutputStream dst = new DeflaterOutputStream(out, deflater);
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 1700) 		ldr.copyTo(dst);
a0fd06e5c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:50:50 +0000 1701) 		dst.finish();
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1702) 	}
                                                                                                                                           1703)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1704) 	private void writeDeltaObjectDeflate(PackOutputStream out,
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1705) 			final ObjectToPack otp) throws IOException {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1706) 		writeBase(out, otp.getDeltaBase());
                                                                                                                                           1707)
eb17495ca org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-10 19:58:50 +0000 1708) 		crc32.reset();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 1709) 		otp.setOffset(out.length());
                                                                                                                                           1710)
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1711) 		DeltaCache.Ref ref = otp.popCachedDelta();
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1712) 		if (ref != null) {
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1713) 			byte[] zbuf = ref.get();
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1714) 			if (zbuf != null) {
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1715) 				out.writeHeader(otp, otp.getCachedSize());
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1716) 				out.write(zbuf);
3096a1334 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (James Kolb                2015-12-16 19:06:16 +0000 1717) 				typeStats.cntDeltas++;
3096a1334 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (James Kolb                2015-12-16 19:06:16 +0000 1718) 				typeStats.deltaBytes += out.length() - otp.getOffset();
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1719) 				return;
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1720) 			}
a960d1429 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:15:54 +0000 1721) 		}
                                                                                                                                           1722)
f30fe13ac org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2016-12-19 07:38:41 +0000 1723) 		try (TemporaryBuffer.Heap delta = delta(otp)) {
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1724) 			out.writeHeader(otp, delta.length());
                                                                                                                                           1725)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1726) 			Deflater deflater = deflater();
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1727) 			deflater.reset();
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1728) 			DeflaterOutputStream dst = new DeflaterOutputStream(out, deflater);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1729) 			delta.writeTo(dst, null);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1730) 			dst.finish();
f30fe13ac org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2016-12-19 07:38:41 +0000 1731) 		}
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1732) 		typeStats.cntDeltas++;
bb1956e64 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-18 18:31:12 +0000 1733) 		typeStats.deltaBytes += out.length() - otp.getOffset();
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1734) 	}
                                                                                                                                           1735)
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 1736) 	private TemporaryBuffer.Heap delta(ObjectToPack otp)
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 1737) 			throws IOException {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1738) 		DeltaIndex index = new DeltaIndex(buffer(otp.getDeltaBaseId()));
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1739) 		byte[] res = buffer(otp);
                                                                                                                                           1740)
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1741) 		// We never would have proposed this pair if the delta would be
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1742) 		// larger than the unpacked version of the object. So using it
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1743) 		// as our buffer limit is valid: we will never reach it.
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1744) 		//
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1745) 		TemporaryBuffer.Heap delta = new TemporaryBuffer.Heap(res.length);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1746) 		index.encode(delta, res);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1747) 		return delta;
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1748) 	}
                                                                                                                                           1749)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1750) 	private byte[] buffer(AnyObjectId objId) throws IOException {
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1751) 		return buffer(config, reader, objId);
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1752) 	}
                                                                                                                                           1753)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1754) 	static byte[] buffer(PackConfig config, ObjectReader or, AnyObjectId objId)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1755) 			throws IOException {
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1756) 		// PackWriter should have already pruned objects that
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1757) 		// are above the big file threshold, so our chances of
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1758) 		// the object being below it are very good. We really
dfad23bf3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-10 02:14:18 +0000 1759) 		// shouldn't be here, unless the implementation is odd.
                                                                                                                                           1760)
c11711f98 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-26 00:05:53 +0000 1761) 		return or.open(objId).getCachedBytes(config.getBigFileThreshold());
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1762) 	}
                                                                                                                                           1763)
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1764) 	private Deflater deflater() {
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1765) 		if (myDeflater == null)
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 1766) 			myDeflater = new Deflater(config.getCompressionLevel());
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1767) 		return myDeflater;
ad0383734 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-01 01:40:54 +0000 1768) 	}
                                                                                                                                           1769)
f288c27e4 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1770) 	private void writeChecksum(PackOutputStream out) throws IOException {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1771) 		packcsum = out.getDigest();
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1772) 		out.write(packcsum);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1773) 	}
                                                                                                                                           1774)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1775) 	private void findObjectsToPack(@NonNull ProgressMonitor countingMonitor,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1776) 			@NonNull ObjectWalk walker, @NonNull Set<? extends ObjectId> want,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1777) 			@NonNull Set<? extends ObjectId> have,
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1778) 			@NonNull Set<? extends ObjectId> noBitmaps) throws IOException {
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1779) 		final long countingStart = System.currentTimeMillis();
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1780) 		beginPhase(PackingPhase.COUNTING, countingMonitor, ProgressMonitor.UNKNOWN);
                                                                                                                                           1781)
4275c4c1c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 01:36:45 +0000 1782) 		stats.interestingObjects = Collections.unmodifiableSet(new HashSet<ObjectId>(want));
4275c4c1c org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 01:36:45 +0000 1783) 		stats.uninterestingObjects = Collections.unmodifiableSet(new HashSet<ObjectId>(have));
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 1784) 		excludeFromBitmapSelection = noBitmaps;
                                                                                                                                           1785)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1786) 		canBuildBitmaps = config.isBuildBitmaps()
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1787) 				&& !shallowPack
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1788) 				&& have.isEmpty()
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1789) 				&& (excludeInPacks == null || excludeInPacks.length == 0);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1790) 		if (!shallowPack && useBitmaps) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1791) 			BitmapIndex bitmapIndex = reader.getBitmapIndex();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1792) 			if (bitmapIndex != null) {
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1793) 				BitmapWalker bitmapWalker = new BitmapWalker(
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1794) 						walker, bitmapIndex, countingMonitor);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1795) 				findObjectsToPackUsingBitmaps(bitmapWalker, want, have);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1796) 				endPhase(countingMonitor);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1797) 				stats.timeCounting = System.currentTimeMillis() - countingStart;
0e8ac496c org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-05-26 21:37:17 +0000 1798) 				stats.bitmapIndexMisses = bitmapWalker.getCountOfBitmapIndexMisses();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1799) 				return;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1800) 			}
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 1801) 		}
                                                                                                                                           1802)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1803) 		List<ObjectId> all = new ArrayList<>(want.size() + have.size());
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1804) 		all.addAll(want);
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1805) 		all.addAll(have);
                                                                                                                                           1806)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1807) 		final RevFlag include = walker.newFlag("include"); //$NON-NLS-1$
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1808) 		final RevFlag added = walker.newFlag("added"); //$NON-NLS-1$
                                                                                                                                           1809)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1810) 		walker.carry(include);
                                                                                                                                           1811)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1812) 		int haveEst = have.size();
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1813) 		if (have.isEmpty()) {
c218a0760 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-01-27 16:58:44 +0000 1814) 			walker.sort(RevSort.COMMIT_TIME_DESC);
c218a0760 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-01-27 16:58:44 +0000 1815) 		} else {
                                                                                                                                           1816) 			walker.sort(RevSort.TOPO);
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1817) 			if (thin)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1818) 				walker.sort(RevSort.BOUNDARY, true);
c218a0760 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-01-27 16:58:44 +0000 1819) 		}
                                                                                                                                           1820)
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1821) 		List<RevObject> wantObjs = new ArrayList<>(want.size());
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1822) 		List<RevObject> haveObjs = new ArrayList<>(haveEst);
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1823) 		List<RevTag> wantTags = new ArrayList<>(want.size());
                                                                                                                                           1824)
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1825) 		// Retrieve the RevWalk's versions of "want" and "have" objects to
d385a7a5e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 22:37:36 +0000 1826) 		// maintain any state previously set in the RevWalk.
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1827) 		AsyncRevObjectQueue q = walker.parseAny(all, true);
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1828) 		try {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1829) 			for (;;) {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1830) 				try {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1831) 					RevObject o = q.next();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1832) 					if (o == null)
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1833) 						break;
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1834) 					if (have.contains(o))
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1835) 						haveObjs.add(o);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1836) 					if (want.contains(o)) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1837) 						o.add(include);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1838) 						wantObjs.add(o);
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1839) 						if (o instanceof RevTag)
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1840) 							wantTags.add((RevTag) o);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1841) 					}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1842) 				} catch (MissingObjectException e) {
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1843) 					if (ignoreMissingUninteresting
2fbcba41e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:03:24 +0000 1844) 							&& have.contains(e.getObjectId()))
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1845) 						continue;
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1846) 					throw e;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1847) 				}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1848) 			}
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1849) 		} finally {
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1850) 			q.release();
f048af3fd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-08-21 00:41:27 +0000 1851) 		}
                                                                                                                                           1852)
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1853) 		if (!wantTags.isEmpty()) {
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1854) 			all = new ArrayList<>(wantTags.size());
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1855) 			for (RevTag tag : wantTags)
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1856) 				all.add(tag.getObject());
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1857) 			q = walker.parseAny(all, true);
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1858) 			try {
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1859) 				while (q.next() != null) {
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1860) 					// Just need to pop the queue item to parse the object.
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1861) 				}
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1862) 			} finally {
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1863) 				q.release();
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1864) 			}
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1865) 		}
                                                                                                                                           1866)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1867) 		if (walker instanceof DepthWalk.ObjectWalk) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1868) 			DepthWalk.ObjectWalk depthWalk = (DepthWalk.ObjectWalk) walker;
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1869) 			for (RevObject obj : wantObjs) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1870) 				depthWalk.markRoot(obj);
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1871) 			}
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1872) 			// Mark the tree objects associated with "have" commits as
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1873) 			// uninteresting to avoid writing redundant blobs. A normal RevWalk
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1874) 			// lazily propagates the "uninteresting" state from a commit to its
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1875) 			// tree during the walk, but DepthWalks can terminate early so
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1876) 			// preemptively propagate that state here.
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1877) 			for (RevObject obj : haveObjs) {
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1878) 				if (obj instanceof RevCommit) {
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1879) 					RevTree t = ((RevCommit) obj).getTree();
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1880) 					depthWalk.markUninteresting(t);
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1881) 				}
7edf05530 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2016-08-05 00:20:23 +0000 1882) 			}
                                                                                                                                           1883)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1884) 			if (unshallowObjects != null) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1885) 				for (ObjectId id : unshallowObjects) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1886) 					depthWalk.markUnshallow(walker.parseAny(id));
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1887) 				}
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1888) 			}
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1889) 		} else {
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1890) 			for (RevObject obj : wantObjs)
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1891) 				walker.markStart(obj);
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1892) 		}
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1893) 		for (RevObject obj : haveObjs)
19037e8cf org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:25 +0000 1894) 			walker.markUninteresting(obj);
                                                                                                                                           1895)
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1896) 		final int maxBases = config.getDeltaSearchWindowSize();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1897) 		Set<RevTree> baseTrees = new HashSet<>();
3b4448637 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2017-02-20 21:47:23 +0000 1898) 		BlockList<RevCommit> commits = new BlockList<>();
1d7d0f95e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-16 21:10:16 +0000 1899) 		Set<ObjectId> roots = new HashSet<>();
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1900) 		RevCommit c;
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1901) 		while ((c = walker.next()) != null) {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1902) 			if (exclude(c))
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1903) 				continue;
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1904) 			if (c.has(RevFlag.UNINTERESTING)) {
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1905) 				if (baseTrees.size() <= maxBases)
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1906) 					baseTrees.add(c.getTree());
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1907) 				continue;
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1908) 			}
                                                                                                                                           1909)
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1910) 			commits.add(c);
1d7d0f95e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-16 21:10:16 +0000 1911) 			if (c.getParentCount() == 0) {
1d7d0f95e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-16 21:10:16 +0000 1912) 				roots.add(c.copy());
1d7d0f95e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-16 21:10:16 +0000 1913) 			}
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1914) 			countingMonitor.update(1);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1915) 		}
1d7d0f95e org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-16 21:10:16 +0000 1916) 		stats.rootCommits = Collections.unmodifiableSet(roots);
                                                                                                                                           1917)
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1918) 		if (shallowPack) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1919) 			for (RevCommit cmit : commits) {
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1920) 				addObject(cmit, 0);
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1921) 			}
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1922) 		} else {
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1923) 			int commitCnt = 0;
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1924) 			boolean putTagTargets = false;
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1925) 			for (RevCommit cmit : commits) {
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1926) 				if (!cmit.has(added)) {
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1927) 					cmit.add(added);
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1928) 					addObject(cmit, 0);
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1929) 					commitCnt++;
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1930) 				}
                                                                                                                                           1931)
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1932) 				for (int i = 0; i < cmit.getParentCount(); i++) {
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1933) 					RevCommit p = cmit.getParent(i);
0f84b86e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Christian Halstrick       2012-06-04 14:52:36 +0000 1934) 					if (!p.has(added) && !p.has(RevFlag.UNINTERESTING)
0f84b86e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Christian Halstrick       2012-06-04 14:52:36 +0000 1935) 							&& !exclude(p)) {
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1936) 						p.add(added);
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1937) 						addObject(p, 0);
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1938) 						commitCnt++;
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1939) 					}
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1940) 				}
                                                                                                                                           1941)
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1942) 				if (!putTagTargets && 4096 < commitCnt) {
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1943) 					for (ObjectId id : tagTargets) {
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1944) 						RevObject obj = walker.lookupOrNull(id);
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1945) 						if (obj instanceof RevCommit
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1946) 								&& obj.has(include)
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1947) 								&& !obj.has(RevFlag.UNINTERESTING)
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1948) 								&& !obj.has(added)) {
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1949) 							obj.add(added);
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1950) 							addObject(obj, 0);
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1951) 						}
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1952) 					}
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1953) 					putTagTargets = true;
8f865bfff org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-19 02:15:26 +0000 1954) 				}
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1955) 			}
9952223e0 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Matt Fischer              2011-08-21 21:04:23 +0000 1956) 		}
733780e8a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-18 05:32:03 +0000 1957) 		commits = null;
                                                                                                                                           1958)
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1959) 		if (thin && !baseTrees.isEmpty()) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1960) 			BaseSearch bases = new BaseSearch(countingMonitor, baseTrees, //
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1961) 					objectsMap, edgeObjects, reader);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1962) 			RevObject o;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1963) 			while ((o = walker.nextObject()) != null) {
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1964) 				if (o.has(RevFlag.UNINTERESTING))
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1965) 					continue;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1966) 				if (exclude(o))
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1967) 					continue;
                                                                                                                                           1968)
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1969) 				int pathHash = walker.getPathHashCode();
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1970) 				byte[] pathBuf = walker.getPathBuffer();
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1971) 				int pathLen = walker.getPathLength();
13bcf05a9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-01 15:12:06 +0000 1972) 				bases.addBase(o.getType(), pathBuf, pathLen, pathHash);
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 1973) 				filterAndAddObject(o, o.getType(), pathHash, want);
6b62e53b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-06-28 18:47:28 +0000 1974) 				countingMonitor.update(1);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1975) 			}
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1976) 		} else {
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1977) 			RevObject o;
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1978) 			while ((o = walker.nextObject()) != null) {
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1979) 				if (o.has(RevFlag.UNINTERESTING))
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1980) 					continue;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1981) 				if (exclude(o))
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 1982) 					continue;
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 1983) 				filterAndAddObject(o, o.getType(), walker.getPathHashCode(), want);
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1984) 				countingMonitor.update(1);
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1985) 			}
99e6cfb13 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-08 22:10:11 +0000 1986) 		}
                                                                                                                                           1987)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1988) 		for (CachedPack pack : cachedPacks)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 1989) 			countingMonitor.update((int) pack.getObjectCount());
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 1990) 		endPhase(countingMonitor);
c8c4524b6 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-13 21:43:11 +0000 1991) 		stats.timeCounting = System.currentTimeMillis() - countingStart;
dd22bc831 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-06-03 02:49:55 +0000 1992) 		stats.bitmapIndexMisses = -1;
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 1993) 	}
                                                                                                                                           1994)
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1995) 	private void findObjectsToPackUsingBitmaps(
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1996) 			BitmapWalker bitmapWalker, Set<? extends ObjectId> want,
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1997) 			Set<? extends ObjectId> have)
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1998) 			throws MissingObjectException, IncorrectObjectTypeException,
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 1999) 			IOException {
9fd1325ec org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2014-09-26 13:45:46 +0000 2000) 		BitmapBuilder haveBitmap = bitmapWalker.findObjects(have, null, true);
9fd1325ec org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2014-09-26 13:45:46 +0000 2001) 		BitmapBuilder wantBitmap = bitmapWalker.findObjects(want, haveBitmap,
9fd1325ec org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2014-09-26 13:45:46 +0000 2002) 				false);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2003) 		BitmapBuilder needBitmap = wantBitmap.andNot(haveBitmap);
                                                                                                                                           2004)
6e5c71b35 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-04-24 18:31:22 +0000 2005) 		if (useCachedPacks && reuseSupport != null && !reuseValidate
6e5c71b35 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-04-24 18:31:22 +0000 2006) 				&& (excludeInPacks == null || excludeInPacks.length == 0))
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2007) 			cachedPacks.addAll(
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2008) 					reuseSupport.getCachedPacksAndUpdate(needBitmap));
                                                                                                                                           2009)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2010) 		for (BitmapObject obj : needBitmap) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2011) 			ObjectId objectId = obj.getObjectId();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2012) 			if (exclude(objectId)) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2013) 				needBitmap.remove(objectId);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2014) 				continue;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2015) 			}
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2016) 			filterAndAddObject(objectId, obj.getType(), 0, want);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2017) 		}
                                                                                                                                           2018)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2019) 		if (thin)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2020) 			haveObjects = haveBitmap;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2021) 	}
                                                                                                                                           2022)
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2023) 	private static void pruneEdgesFromObjectList(List<ObjectToPack> list) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2024) 		final int size = list.size();
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2025) 		int src = 0;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2026) 		int dst = 0;
                                                                                                                                           2027)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2028) 		for (; src < size; src++) {
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2029) 			ObjectToPack obj = list.get(src);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2030) 			if (obj.isEdge())
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2031) 				continue;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2032) 			if (dst != src)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2033) 				list.set(dst, obj);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2034) 			dst++;
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2035) 		}
                                                                                                                                           2036)
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2037) 		while (dst < list.size())
f67e5602a org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-08 02:23:39 +0000 2038) 			list.remove(list.size() - 1);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2039) 	}
                                                                                                                                           2040)
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2041) 	/**
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2042) 	 * Include one object to the output file.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2043) 	 * <p>
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2044) 	 * Objects are written in the order they are added. If the same object is
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2045) 	 * added twice, it may be written twice, creating a larger than necessary
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2046) 	 * file.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2047) 	 *
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2048) 	 * @param object
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2049) 	 *            the object to add.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 2050) 	 * @throws org.eclipse.jgit.errors.IncorrectObjectTypeException
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2051) 	 *             the object is an unsupported type.
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2052) 	 */
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 2053) 	public void addObject(RevObject object)
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 2054) 			throws IncorrectObjectTypeException {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2055) 		if (!exclude(object))
065a0a812 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-01-28 15:20:26 +0000 2056) 			addObject(object, 0);
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2057) 	}
                                                                                                                                           2058)
6d370d837 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Han-Wen Nienhuys          2018-05-15 21:05:02 +0000 2059) 	private void addObject(RevObject object, int pathHashCode) {
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2060) 		addObject(object, object.getType(), pathHashCode);
2f93a09dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-09 22:17:26 +0000 2061) 	}
                                                                                                                                           2062)
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2063) 	private void addObject(
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2064) 			final AnyObjectId src, final int type, final int pathHashCode) {
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2065) 		final ObjectToPack otp;
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2066) 		if (reuseSupport != null)
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2067) 			otp = reuseSupport.newObjectToPack(src, type);
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2068) 		else
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2069) 			otp = new ObjectToPack(src, type);
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2070) 		otp.setPathHash(pathHashCode);
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2071) 		objectsLists[type].add(otp);
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2072) 		objectsMap.add(otp);
be7a135e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-04 22:43:22 +0000 2073) 	}
                                                                                                                                           2074)
901e663a6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2018-03-19 23:28:03 +0000 2075) 	// Adds the given object as an object to be packed, first performing
901e663a6 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (David Pursehouse          2018-03-19 23:28:03 +0000 2076) 	// filtering on blobs at or exceeding a given size.
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2077) 	private void filterAndAddObject(@NonNull AnyObjectId src, int type,
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2078) 			int pathHashCode, @NonNull Set<? extends AnyObjectId> want)
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2079) 			throws IOException {
                                                                                                                                           2080)
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2081) 		// Check if this object needs to be rejected, doing the cheaper
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2082) 		// checks first.
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2083) 		boolean reject = filterBlobLimit >= 0 &&
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2084) 			type == OBJ_BLOB &&
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2085) 			!want.contains(src) &&
32798dcfd org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-07-21 00:09:05 +0000 2086) 			reader.getObjectSize(src, OBJ_BLOB) > filterBlobLimit;
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2087) 		if (!reject) {
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2088) 			addObject(src, type, pathHashCode);
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2089) 		}
4ac32e79b org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2018-03-15 20:46:42 +0000 2090) 	}
                                                                                                                                           2091)
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2092) 	private boolean exclude(AnyObjectId objectId) {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2093) 		if (excludeInPacks == null)
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2094) 			return false;
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 2095) 		if (excludeInPackLast.contains(objectId))
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2096) 			return true;
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 2097) 		for (ObjectIdSet idx : excludeInPacks) {
7c58f6282 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-01-19 00:22:10 +0000 2098) 			if (idx.contains(objectId)) {
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2099) 				excludeInPackLast = idx;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2100) 				return true;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2101) 			}
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2102) 		}
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2103) 		return false;
a1a8c6d77 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-08-21 20:59:26 +0000 2104) 	}
                                                                                                                                           2105)
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2106) 	/**
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2107) 	 * Select an object representation for this writer.
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2108) 	 * <p>
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 2109) 	 * An {@link org.eclipse.jgit.lib.ObjectReader} implementation should invoke
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 2110) 	 * this method once for each representation available for an object, to
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 2111) 	 * allow the writer to find the most suitable one for the output.
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2112) 	 *
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2113) 	 * @param otp
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2114) 	 *            the object being packed.
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2115) 	 * @param next
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2116) 	 *            the next available representation from the repository.
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2117) 	 */
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2118) 	public void select(ObjectToPack otp, StoredObjectRepresentation next) {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2119) 		int nFmt = next.getFormat();
                                                                                                                                           2120)
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2121) 		if (!cachedPacks.isEmpty()) {
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2122) 			if (otp.isEdge())
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2123) 				return;
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2124) 			if ((nFmt == PACK_WHOLE) | (nFmt == PACK_DELTA)) {
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2125) 				for (CachedPack pack : cachedPacks) {
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2126) 					if (pack.hasObject(otp, next)) {
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2127) 						otp.setEdge();
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2128) 						otp.clearDeltaBase();
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2129) 						otp.clearReuseAsIs();
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2130) 						pruneCurrentObjectList = true;
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2131) 						return;
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2132) 					}
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2133) 				}
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2134) 			}
9f5bbb5dd org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2135) 		}
                                                                                                                                           2136)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2137) 		if (nFmt == PACK_DELTA && reuseDeltas && reuseDeltaFor(otp)) {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2138) 			ObjectId baseId = next.getDeltaBase();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2139) 			ObjectToPack ptr = objectsMap.get(baseId);
461b012e9 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-02-03 21:20:22 +0000 2140) 			if (ptr != null && !ptr.isEdge()) {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2141) 				otp.setDeltaBase(ptr);
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2142) 				otp.setReuseAsIs();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2143) 			} else if (thin && have(ptr, baseId)) {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2144) 				otp.setDeltaBase(baseId);
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2145) 				otp.setReuseAsIs();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2146) 			} else {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2147) 				otp.clearDeltaBase();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2148) 				otp.clearReuseAsIs();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2149) 			}
1a06179ea org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2010-07-28 19:13:48 +0000 2150) 		} else if (nFmt == PACK_WHOLE && config.isReuseObjects()) {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2151) 			int nWeight = next.getWeight();
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2152) 			if (otp.isReuseAsIs() && !otp.isDeltaRepresentation()) {
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2153) 				// We've chosen another PACK_WHOLE format for this object,
8ac65d33e org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-04-01 21:40:33 +0000 2154) 				// choose the one that has the smaller compressed size.
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2155) 				//
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2156) 				if (otp.getWeight() <= nWeight)
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2157) 					return;
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2158) 			}
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2159) 			otp.clearDeltaBase();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2160) 			otp.setReuseAsIs();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2161) 			otp.setWeight(nWeight);
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2162) 		} else {
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2163) 			otp.clearDeltaBase();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2164) 			otp.clearReuseAsIs();
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2165) 		}
                                                                                                                                           2166)
c9707e635 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-12 19:59:02 +0000 2167) 		otp.setDeltaAttempted(reuseDeltas & next.wasDeltaAttempted());
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2168) 		otp.select(next);
bf4ffff07 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Shawn O. Pearce           2010-06-26 21:16:06 +0000 2169) 	}
                                                                                                                                           2170)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2171) 	private final boolean have(ObjectToPack ptr, AnyObjectId objectId) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2172) 		return (ptr != null && ptr.isEdge())
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2173) 				|| (haveObjects != null && haveObjects.contains(objectId));
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2174) 	}
                                                                                                                                           2175)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2176) 	/**
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2177) 	 * Prepares the bitmaps to be written to the bitmap index file.
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2178) 	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2179) 	 * Bitmaps can be used to speed up fetches and clones by storing the entire
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2180) 	 * object graph at selected commits. Writing a bitmap index is an optional
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2181) 	 * feature that not all pack users may require.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2182) 	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2183) 	 * Called after {@link #writeIndex(OutputStream)}.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2184) 	 * <p>
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2185) 	 * To reduce memory internal state is cleared during this method, rendering
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2186) 	 * the PackWriter instance useless for anything further than a call to write
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2187) 	 * out the new bitmaps with {@link #writeBitmapIndex(OutputStream)}.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2188) 	 *
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2189) 	 * @param pm
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2190) 	 *            progress monitor to report bitmap building work.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2191) 	 * @return whether a bitmap index may be written.
783dbf1b0 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2017-12-19 12:39:09 +0000 2192) 	 * @throws java.io.IOException
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2193) 	 *             when some I/O problem occur during reading objects.
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2194) 	 */
f82821728 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:15:19 +0000 2195) 	public boolean prepareBitmapIndex(ProgressMonitor pm) throws IOException {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2196) 		if (!canBuildBitmaps || getObjectCount() > Integer.MAX_VALUE
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2197) 				|| !cachedPacks.isEmpty())
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2198) 			return false;
                                                                                                                                           2199)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2200) 		if (pm == null)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2201) 			pm = NullProgressMonitor.INSTANCE;
                                                                                                                                           2202)
8e83c36e2 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 2203) 		int numCommits = objectsLists[OBJ_COMMIT].size();
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2204) 		List<ObjectToPack> byName = sortByName();
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2205) 		sortedByName = null;
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2206) 		objectsLists = null;
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2207) 		objectsMap = null;
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2208) 		writeBitmaps = new PackBitmapIndexBuilder(byName);
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2209) 		byName = null;
                                                                                                                                           2210)
80c7884ea org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-10-22 05:12:52 +0000 2211) 		PackWriterBitmapPreparer bitmapPreparer = new PackWriterBitmapPreparer(
80c7884ea org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2015-10-22 05:12:52 +0000 2212) 				reader, writeBitmaps, pm, stats.interestingObjects, config);
                                                                                                                                           2213)
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 2214) 		Collection<PackWriterBitmapPreparer.BitmapCommit> selectedCommits = bitmapPreparer
c46c720e9 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Terry Parker              2017-05-18 22:25:21 +0000 2215) 				.selectCommits(numCommits, excludeFromBitmapSelection);
                                                                                                                                           2216)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2217) 		beginPhase(PackingPhase.BUILDING_BITMAPS, pm, selectedCommits.size());
                                                                                                                                           2218)
ccf25f954 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Jonathan Tan              2017-11-10 23:41:31 +0000 2219) 		BitmapWalker walker = bitmapPreparer.newBitmapWalker();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2220) 		AnyObjectId last = null;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2221) 		for (PackWriterBitmapPreparer.BitmapCommit cmit : selectedCommits) {
8f7d0a4fb org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Zhen Chen                 2017-05-03 22:02:33 +0000 2222) 			if (!cmit.isReuseWalker()) {
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2223) 				walker = bitmapPreparer.newBitmapWalker();
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2224) 			}
9fd1325ec org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2014-09-26 13:45:46 +0000 2225) 			BitmapBuilder bitmap = walker.findObjects(
9fd1325ec org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Matthias Sohn             2014-09-26 13:45:46 +0000 2226) 					Collections.singleton(cmit), null, false);
                                                                                                                                           2227)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2228) 			if (last != null && cmit.isReuseWalker() && !bitmap.contains(last))
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2229) 				throw new IllegalStateException(MessageFormat.format(
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2230) 						JGitText.get().bitmapMissingObject, cmit.name(),
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2231) 						last.name()));
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2232) 			last = cmit;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2233) 			writeBitmaps.addBitmap(cmit, bitmap.build(), cmit.getFlags());
                                                                                                                                           2234)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2235) 			pm.update(1);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2236) 		}
                                                                                                                                           2237)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2238) 		endPhase(pm);
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2239) 		return true;
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2240) 	}
                                                                                                                                           2241)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2242) 	private boolean reuseDeltaFor(ObjectToPack otp) {
                                                                                                                                           2243) 		int type = otp.getType();
01a0699ac org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 2244) 		if ((type & 2) != 0) // OBJ_TREE(2) or OBJ_BLOB(3)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2245) 			return true;
01a0699ac org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 2246) 		if (type == OBJ_COMMIT)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2247) 			return reuseDeltaCommits;
01a0699ac org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2013-04-05 16:43:02 +0000 2248) 		if (type == OBJ_TAG)
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2249) 			return false;
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2250) 		return true;
751c329b3 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Shawn O. Pearce           2011-03-01 18:07:08 +0000 2251) 	}
                                                                                                                                           2252)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2253) 	private class MutableState {
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2254) 		/** Estimated size of a single ObjectToPack instance. */
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2255) 		// Assume 64-bit pointers, since this is just an estimate.
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2256) 		private static final long OBJECT_TO_PACK_SIZE =
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2257) 				(2 * 8)               // Object header
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2258) 				+ (2 * 8) + (2 * 8)   // ObjectToPack fields
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2259) 				+ (8 + 8)             // PackedObjectInfo fields
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2260) 				+ 8                   // ObjectIdOwnerMap fields
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2261) 				+ 40                  // AnyObjectId fields
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2262) 				+ 8;                  // Reference in BlockList
                                                                                                                                           2263)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2264) 		private final long totalDeltaSearchBytes;
                                                                                                                                           2265)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2266) 		private volatile PackingPhase phase;
                                                                                                                                           2267)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2268) 		MutableState() {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2269) 			phase = PackingPhase.COUNTING;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2270) 			if (config.isDeltaCompress()) {
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2271) 				int threads = config.getThreads();
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2272) 				if (threads <= 0)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2273) 					threads = Runtime.getRuntime().availableProcessors();
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2274) 				totalDeltaSearchBytes = (threads * config.getDeltaSearchMemoryLimit())
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2275) 						+ config.getBigFileThreshold();
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2276) 			} else
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2277) 				totalDeltaSearchBytes = 0;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2278) 		}
                                                                                                                                           2279)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2280) 		State snapshot() {
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2281) 			long objCnt = 0;
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2282) 			BlockList<ObjectToPack>[] lists = objectsLists;
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2283) 			if (lists != null) {
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2284) 				objCnt += lists[OBJ_COMMIT].size();
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2285) 				objCnt += lists[OBJ_TREE].size();
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2286) 				objCnt += lists[OBJ_BLOB].size();
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2287) 				objCnt += lists[OBJ_TAG].size();
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2288) 				// Exclude CachedPacks.
4bb523475 org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java (Shawn Pearce              2015-08-13 17:13:44 +0000 2289) 			}
                                                                                                                                           2290)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2291) 			long bytesUsed = OBJECT_TO_PACK_SIZE * objCnt;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2292) 			PackingPhase curr = phase;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2293) 			if (curr == PackingPhase.COMPRESSING)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2294) 				bytesUsed += totalDeltaSearchBytes;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2295) 			return new State(curr, bytesUsed);
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2296) 		}
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2297) 	}
                                                                                                                                           2298)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2299) 	/** Possible states that a PackWriter can be in. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2300) 	public static enum PackingPhase {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2301) 		/** Counting objects phase. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2302) 		COUNTING,
                                                                                                                                           2303)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2304) 		/** Getting sizes phase. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2305) 		GETTING_SIZES,
                                                                                                                                           2306)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2307) 		/** Finding sources phase. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2308) 		FINDING_SOURCES,
                                                                                                                                           2309)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2310) 		/** Compressing objects phase. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2311) 		COMPRESSING,
                                                                                                                                           2312)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2313) 		/** Writing objects phase. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2314) 		WRITING,
                                                                                                                                           2315)
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2316) 		/** Building bitmaps phase. */
dafcb8f6d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Colby Ranger              2013-03-05 19:14:45 +0000 2317) 		BUILDING_BITMAPS;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2318) 	}
                                                                                                                                           2319)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2320) 	/** Summary of the current state of a PackWriter. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2321) 	public class State {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2322) 		private final PackingPhase phase;
                                                                                                                                           2323)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2324) 		private final long bytesUsed;
                                                                                                                                           2325)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2326) 		State(PackingPhase phase, long bytesUsed) {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2327) 			this.phase = phase;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2328) 			this.bytesUsed = bytesUsed;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2329) 		}
                                                                                                                                           2330)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2331) 		/** @return the PackConfig used to build the writer. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2332) 		public PackConfig getConfig() {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2333) 			return config;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2334) 		}
                                                                                                                                           2335)
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2336) 		/** @return the current phase of the writer. */
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2337) 		public PackingPhase getPhase() {
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2338) 			return phase;
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2339) 		}
                                                                                                                                           2340)
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2341) 		/** @return an estimate of the total memory used by the writer. */
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2342) 		public long estimateBytesUsed() {
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2343) 			return bytesUsed;
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2344) 		}
                                                                                                                                           2345)
c310fa0c8 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Robin Rosenberg           2012-12-27 15:57:38 +0000 2346) 		@SuppressWarnings("nls")
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2347) 		@Override
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2348) 		public String toString() {
f26b79d04 org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2349) 			return "PackWriter.State[" + phase + ", memory=" + bytesUsed + "]";
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2350) 		}
16b8ebf2d org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java          (Dave Borowitz             2011-11-14 18:27:45 +0000 2351) 	}
1a6964c82 org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java                   (Git Development Community 2009-09-29 23:47:03 +0000 2352) }
