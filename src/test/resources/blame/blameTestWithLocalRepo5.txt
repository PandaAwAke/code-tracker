683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 1)   /*
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 2)    * Copyright 2016 Federico Tomassetti
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 3)    *
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 4)    * Licensed under the Apache License, Version 2.0 (the "License");
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 5)    * you may not use this file except in compliance with the License.
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 6)    * You may obtain a copy of the License at
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 7)    *
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 8)    * http://www.apache.org/licenses/LICENSE-2.0
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 9)    *
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 10)   * Unless required by applicable law or agreed to in writing, software
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 11)   * distributed under the License is distributed on an "AS IS" BASIS,
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 12)   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 13)   * See the License for the specific language governing permissions and
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 14)   * limitations under the License.
683012de2 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-19 15:04:20 +0000 15)   */
                                                                                                                                                                                                 16)
9c53c2cbc java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-20 06:39:09 +0000 17)  package com.github.javaparser.symbolsolver.javaparsermodel.contexts;
                                                                                                                                                                                                 18)
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 19)  import com.github.javaparser.ast.expr.Expression;
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 20)  import com.github.javaparser.ast.expr.MethodCallExpr;
7b2a0b366 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 08:24:23 +0000 21)  import com.github.javaparser.ast.expr.NameExpr;
791449a6a javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (Federico Tomassetti      2018-06-06 13:52:48 +0000 22)  import com.github.javaparser.ast.expr.ObjectCreationExpr;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 23)  import com.github.javaparser.resolution.MethodUsage;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 24)  import com.github.javaparser.resolution.UnsolvedSymbolException;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 25)  import com.github.javaparser.resolution.declarations.*;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 26)  import com.github.javaparser.resolution.types.*;
9c53c2cbc java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-20 06:39:09 +0000 27)  import com.github.javaparser.symbolsolver.core.resolution.Context;
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 28)  import com.github.javaparser.symbolsolver.javaparser.Navigator;
9c53c2cbc java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-20 06:39:09 +0000 29)  import com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade;
9c53c2cbc java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-20 06:39:09 +0000 30)  import com.github.javaparser.symbolsolver.model.resolution.SymbolReference;
9c53c2cbc java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-20 06:39:09 +0000 31)  import com.github.javaparser.symbolsolver.model.resolution.TypeSolver;
9c53c2cbc java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-20 06:39:09 +0000 32)  import com.github.javaparser.symbolsolver.model.resolution.Value;
cb5ffb7fd java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-12-13 16:45:00 +0000 33)  import com.github.javaparser.symbolsolver.model.typesystem.*;
9c53c2cbc java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-20 06:39:09 +0000 34)  import com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration;
9c53c2cbc java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-20 06:39:09 +0000 35)  import com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 36)  import com.github.javaparser.utils.Pair;
                                                                                                                                                                                                 37)
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 38)  import java.util.ArrayList;
1db4cd791 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Marcos CÃ©sar de Oliveira 2017-12-10 14:34:00 +0000 39)  import java.util.Collection;
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 40)  import java.util.HashMap;
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 41)  import java.util.List;
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 42)  import java.util.Map;
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 43)  import java.util.Optional;
                                                                                                                                                                                                 44)
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 45)  public class MethodCallExprContext extends AbstractJavaParserContext<MethodCallExpr> {
                                                                                                                                                                                                 46)
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 47)      ///
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 48)      /// Constructors
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 49)      ///
                                                                                                                                                                                                 50)
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 51)      public MethodCallExprContext(MethodCallExpr wrappedNode, TypeSolver typeSolver) {
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 52)          super(wrappedNode, typeSolver);
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 53)      }
                                                                                                                                                                                                 54)
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 55)      ///
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 56)      /// Public methods
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 57)      ///
                                                                                                                                                                                                 58)
9f625af27 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-17 05:55:41 +0000 59)      @Override
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 60)      public Optional<ResolvedType> solveGenericType(String name, TypeSolver typeSolver) {
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 61)          if(wrappedNode.getScope().isPresent()){
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 62)              ResolvedType typeOfScope = JavaParserFacade.get(typeSolver).getType(wrappedNode.getScope().get());
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 63)              Optional<ResolvedType> res = typeOfScope.asReferenceType().getGenericParameterByName(name);
acf74024c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-11 17:37:32 +0000 64)              return res;
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 65)          } else{
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 66)              return Optional.empty();
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 67)          }
9f625af27 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-17 05:55:41 +0000 68)      }
                                                                                                                                                                                                 69)
26c12a20f src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-11-01 11:29:15 +0000 70)      @Override
26c12a20f src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-11-01 11:29:15 +0000 71)      public String toString() {
ed63079d0 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 15:51:42 +0000 72)          return "MethodCallExprContext{wrapped=" + wrappedNode + "}";
26c12a20f src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-11-01 11:29:15 +0000 73)      }
                                                                                                                                                                                                 74)
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 75)      @Override
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 76)      public Optional<MethodUsage> solveMethodAsUsage(String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver) {
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 77)          if (wrappedNode.getScope().isPresent()) {
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 78)              Expression scope = wrappedNode.getScope().get();
03055f925 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 13:49:23 +0000 79)              // Consider static method calls
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 80)              if (scope instanceof NameExpr) {
065875981 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-01-12 00:45:26 +0000 81)                  String className = ((NameExpr) scope).getName().getId();
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 82)                  SymbolReference<ResolvedTypeDeclaration> ref = solveType(className, typeSolver);
7b2a0b366 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 08:24:23 +0000 83)                  if (ref.isSolved()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 84)                      SymbolReference<ResolvedMethodDeclaration> m = MethodResolutionLogic.solveMethodInType(ref.getCorrespondingDeclaration(), name, argumentsTypes, typeSolver);
7b2a0b366 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 08:24:23 +0000 85)                      if (m.isSolved()) {
8d234965b java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 06:36:12 +0000 86)                          MethodUsage methodUsage = new MethodUsage(m.getCorrespondingDeclaration());
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 87)                          methodUsage = resolveMethodTypeParametersFromExplicitList(typeSolver, methodUsage);
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 88)                          methodUsage = resolveMethodTypeParameters(methodUsage, argumentsTypes);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 89)                          return Optional.of(methodUsage);
6a15cd550 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-24 16:29:04 +0000 90)                      } else {
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 91)                          throw new UnsolvedSymbolException(ref.getCorrespondingDeclaration().toString(),
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 92)                                  "Method '" + name + "' with parameterTypes " + argumentsTypes);
6a15cd550 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-24 16:29:04 +0000 93)                      }
7b2a0b366 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 08:24:23 +0000 94)                  }
7b2a0b366 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 08:24:23 +0000 95)              }
                                                                                                                                                                                                 96)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 97)              ResolvedType typeOfScope = JavaParserFacade.get(typeSolver).getType(scope);
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 98)              // we can replace the parameter types from the scope into the typeParametersValues
                                                                                                                                                                                                 99)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 100)             Map<ResolvedTypeParameterDeclaration, ResolvedType> inferredTypes = new HashMap<>();
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 101)             for (int i = 0; i < argumentsTypes.size(); i++) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 102)                 // by replacing types I can also find new equivalences
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 103)                 // for example if I replace T=U with String because I know that T=String I can derive that also U equal String
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 104)                 ResolvedType originalArgumentType = argumentsTypes.get(i);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 105)                 ResolvedType updatedArgumentType = usingParameterTypesFromScope(typeOfScope, originalArgumentType, inferredTypes);
d017fb8ca java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-27 17:31:21 +0000 106)                 argumentsTypes.set(i, updatedArgumentType);
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 107)             }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 108)             for (int i = 0; i < argumentsTypes.size(); i++) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 109)                 ResolvedType updatedArgumentType = applyInferredTypes(argumentsTypes.get(i), inferredTypes);
d017fb8ca java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-27 17:31:21 +0000 110)                 argumentsTypes.set(i, updatedArgumentType);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 111)             }
                                                                                                                                                                                                 112)
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 113)             return solveMethodAsUsage(typeOfScope, name, argumentsTypes, typeSolver, this);
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 114)         } else {
46aefdd68 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-23 10:34:00 +0000 115)             Context parentContext = getParent();
791449a6a javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (Federico Tomassetti      2018-06-06 13:52:48 +0000 116)             while (parentContext instanceof MethodCallExprContext || parentContext instanceof ObjectCreationContext) {
d36b02817 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (malte_langkabel          2016-09-26 17:15:20 +0000 117)                 parentContext = parentContext.getParent();
d36b02817 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (malte_langkabel          2016-09-26 17:15:20 +0000 118)             }
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 119)             return parentContext.solveMethodAsUsage(name, argumentsTypes, typeSolver);
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 120)         }
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 121)     }
                                                                                                                                                                                                 122)
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 123)     private MethodUsage resolveMethodTypeParametersFromExplicitList(TypeSolver typeSolver, MethodUsage methodUsage) {
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 124)         if (wrappedNode.getTypeArguments().isPresent()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 125)             final List<ResolvedType> typeArguments = new ArrayList<>();
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 126)             for (com.github.javaparser.ast.type.Type ty : wrappedNode.getTypeArguments().get()) {
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 127)                 typeArguments.add(JavaParserFacade.get(typeSolver).convertToUsage(ty));
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 128)             }
                                                                                                                                                                                                 129)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 130)             List<ResolvedTypeParameterDeclaration> tyParamDecls = methodUsage.getDeclaration().getTypeParameters();
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 131)             if (tyParamDecls.size() == typeArguments.size()) {
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 132)                 for (int i = 0; i < tyParamDecls.size(); i++) {
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 133)                     methodUsage = methodUsage.replaceTypeParameter(tyParamDecls.get(i), typeArguments.get(i));
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 134)                 }
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 135)             }
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 136)         }
                                                                                                                                                                                                 137)
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 138)         return methodUsage;
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 139)     }
                                                                                                                                                                                                 140)
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 141)     @Override
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 142)     public SymbolReference<? extends ResolvedValueDeclaration> solveSymbol(String name, TypeSolver typeSolver) {
d0348de24 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-24 18:45:51 +0000 143)         return getParent().solveSymbol(name, typeSolver);
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 144)     }
                                                                                                                                                                                                 145)
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 146)     @Override
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 147)     public Optional<Value> solveSymbolAsValue(String name, TypeSolver typeSolver) {
3a53155f2 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-25 12:56:18 +0000 148)         Context parentContext = getParent();
3a53155f2 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-25 12:56:18 +0000 149)         return parentContext.solveSymbolAsValue(name, typeSolver);
fd2e08322 src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-08-05 13:30:26 +0000 150)     }
                                                                                                                                                                                                 151)
8b8cc6cdd src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 18:52:58 +0000 152)     @Override
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 153)     public SymbolReference<ResolvedMethodDeclaration> solveMethod(String name, List<ResolvedType> argumentsTypes, boolean staticOnly, TypeSolver typeSolver) {
1db4cd791 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Marcos CÃ©sar de Oliveira 2017-12-10 14:34:00 +0000 154)         Collection<ResolvedReferenceTypeDeclaration> rrtds = findTypeDeclarations(wrappedNode.getScope(), typeSolver);
1db4cd791 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Marcos CÃ©sar de Oliveira 2017-12-10 14:34:00 +0000 155)         for (ResolvedReferenceTypeDeclaration rrtd : rrtds) {
1db4cd791 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Marcos CÃ©sar de Oliveira 2017-12-10 14:34:00 +0000 156)             SymbolReference<ResolvedMethodDeclaration> res = MethodResolutionLogic.solveMethodInType(rrtd, name, argumentsTypes, false, typeSolver);
a16d5b370 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 09:06:49 +0000 157)             if (res.isSolved()) {
a16d5b370 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 09:06:49 +0000 158)                 return res;
a16d5b370 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 09:06:49 +0000 159)             }
a16d5b370 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 09:06:49 +0000 160)         }
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 161)         return SymbolReference.unsolved(ResolvedMethodDeclaration.class);
8b8cc6cdd src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 18:52:58 +0000 162)     }
                                                                                                                                                                                                 163)
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 164)     ///
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 165)     /// Private methods
27f0f20ee java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-11-06 08:57:26 +0000 166)     ///
                                                                                                                                                                                                 167)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 168)     private Optional<MethodUsage> solveMethodAsUsage(ResolvedReferenceType refType, String name,
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 169)                                                      List<ResolvedType> argumentsTypes, TypeSolver typeSolver,
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 170)                                                      Context invokationContext) {
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 171)         Optional<MethodUsage> ref = ContextHelper.solveMethodAsUsage(refType.getTypeDeclaration(), name, argumentsTypes, typeSolver, invokationContext, refType.typeParametersValues());
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 172)         if (ref.isPresent()) {
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 173)             MethodUsage methodUsage = ref.get();
                                                                                                                                                                                                 174)
dd5c0a00f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Max Bolingbroke          2017-04-17 21:28:31 +0000 175)             methodUsage = resolveMethodTypeParametersFromExplicitList(typeSolver, methodUsage);
                                                                                                                                                                                                 176)
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 177)             // At this stage I should derive from the context and the value some information on the type parameters
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 178)             // for example, when calling:
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 179)             // myStream.collect(Collectors.toList())
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 180)             // I should be able to figure out that considering the type of the stream (e.g., Stream<String>)
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 181)             // and considering that Stream has this method:
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 182)             //
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 183)             // <R,A> R collect(Collector<? super T,A,R> collector)
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 184)             //
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 185)             // and collector has this method:
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 186)             //
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 187)             // static <T> Collector<T,?,List<T>>   toList()
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 188)             //
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 189)             // In this case collect.R has to be equal to List<toList.T>
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 190)             // And toList.T has to be equal to ? super Stream.T
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 191)             // Therefore R has to be equal to List<? super Stream.T>.
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 192)             // In our example Stream.T equal to String, so the R (and the result of the call to collect) is
cf0045ad7 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-23 18:00:58 +0000 193)             // List<? super String>
                                                                                                                                                                                                 194)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 195)             Map<ResolvedTypeParameterDeclaration, ResolvedType> derivedValues = new HashMap<>();
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 196)             for (int i = 0; i < methodUsage.getParamTypes().size(); i++) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 197)                 ResolvedParameterDeclaration parameter = methodUsage.getDeclaration().getParam(i);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 198)                 ResolvedType parameterType = parameter.getType();
87be89528 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (malte_langkabel          2017-01-05 18:44:33 +0000 199)                 if (parameter.isVariadic()) {
87be89528 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (malte_langkabel          2017-01-05 18:44:33 +0000 200)                 	parameterType = parameterType.asArrayType().getComponentType();
87be89528 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (malte_langkabel          2017-01-05 18:44:33 +0000 201)                 }
87be89528 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (malte_langkabel          2017-01-05 18:44:33 +0000 202)                 inferTypes(argumentsTypes.get(i), parameterType, derivedValues);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 203)             }
                                                                                                                                                                                                 204)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 205)             for (Map.Entry<ResolvedTypeParameterDeclaration, ResolvedType> entry : derivedValues.entrySet()){
63c7f0fb4 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-23 01:31:05 +0000 206)                 methodUsage = methodUsage.replaceTypeParameter(entry.getKey(), entry.getValue());
63c7f0fb4 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-23 01:31:05 +0000 207)             }
                                                                                                                                                                                                 208)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 209)             ResolvedType returnType = refType.useThisTypeParametersOnTheGivenType(methodUsage.returnType());
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 210)             if (returnType != methodUsage.returnType()) {
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 211)                 methodUsage = methodUsage.replaceReturnType(returnType);
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 212)             }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 213)             for (int i = 0; i < methodUsage.getParamTypes().size(); i++) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 214)                 ResolvedType replaced = refType.useThisTypeParametersOnTheGivenType(methodUsage.getParamTypes().get(i));
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 215)                 methodUsage = methodUsage.replaceParamType(i, replaced);
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 216)             }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 217)             return Optional.of(methodUsage);
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 218)         } else {
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 219)             return ref;
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 220)         }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 221)     }
                                                                                                                                                                                                 222)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 223)     private void inferTypes(ResolvedType source, ResolvedType target, Map<ResolvedTypeParameterDeclaration, ResolvedType> mappings) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 224)         if (source.equals(target)) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 225)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 226)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 227)         if (source.isReferenceType() && target.isReferenceType()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 228)             ResolvedReferenceType sourceRefType = source.asReferenceType();
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 229)             ResolvedReferenceType targetRefType = target.asReferenceType();
                                                                                                                                                                                                 230)             if (sourceRefType.getQualifiedName().equals(targetRefType.getQualifiedName())) {
860a4c0c0 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-01-06 09:11:36 +0000 231)             	if (!sourceRefType.isRawType() && !targetRefType.isRawType()) {
860a4c0c0 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-01-06 09:11:36 +0000 232) 	                for (int i = 0; i < sourceRefType.typeParametersValues().size(); i++) {
860a4c0c0 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-01-06 09:11:36 +0000 233) 	                    inferTypes(sourceRefType.typeParametersValues().get(i), targetRefType.typeParametersValues().get(i), mappings);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 234) 	                }
860a4c0c0 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-01-06 09:11:36 +0000 235)             	}
                                                                                                                                                                                                 236)             }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 237)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 238)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 239)         if (source.isReferenceType() && target.isWildcard()) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 240)             if (target.asWildcard().isBounded()) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 241)                 inferTypes(source, target.asWildcard().getBoundedType(), mappings);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 242)                 return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 243)             }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 244)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 245)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 246)         if (source.isWildcard() && target.isWildcard()) {
63c7f0fb4 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-23 01:31:05 +0000 247)             if (source.asWildcard().isBounded() && target.asWildcard().isBounded()){
63c7f0fb4 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-23 01:31:05 +0000 248)                 inferTypes(source.asWildcard().getBoundedType(), target.asWildcard().getBoundedType(), mappings);
63c7f0fb4 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-23 01:31:05 +0000 249)             }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 250)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 251)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 252)         if (source.isReferenceType() && target.isTypeVariable()) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 253)             mappings.put(target.asTypeParameter(), source);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 254)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 255)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 256)         if (source.isWildcard() && target.isTypeVariable()) {
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 257)             mappings.put(target.asTypeParameter(), source);
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 258)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 259)         }
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 260)         if (source.isArray() && target.isWildcard()){
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 261)             if(target.asWildcard().isBounded()){
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 262)                 inferTypes(source, target.asWildcard().getBoundedType(), mappings);
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 263)                 return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 264)             }
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 265)             return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 266)         }
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 267)         if (source.isArray() && target.isTypeVariable()) {
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 268)             mappings.put(target.asTypeParameter(), source);
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 269)             return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 270)         }
                                                                                                                                                                                                 271)
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 272)         if (source.isWildcard() && target.isReferenceType()){
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 273)             if (source.asWildcard().isBounded()){
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 274)                 inferTypes(source.asWildcard().getBoundedType(), target, mappings);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 275)             }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 276)             return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 277)         }
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 278)         if (source.isConstraint() && target.isReferenceType()){
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 279)             inferTypes(source.asConstraintType().getBound(), target, mappings);
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 280)             return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 281)         }
                                                                                                                                                                                                 282)
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 283)         if (source.isConstraint() && target.isTypeVariable()){
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 284)             inferTypes(source.asConstraintType().getBound(), target, mappings);
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 285)             return;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 286)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 287)         if (source.isTypeVariable() && target.isTypeVariable()) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 288)             mappings.put(target.asTypeParameter(), source);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 289)             return;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 290)         }
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 291)         if (source.isPrimitive() || target.isPrimitive()) {
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 292)             return;
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 293)         }
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 294)         if (source.isNull()) {
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 295)             return;
bc6d2747f java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:30:06 +0000 296)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 297)         throw new RuntimeException(source.describe() + " " + target.describe());
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 298)     }
                                                                                                                                                                                                 299)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 300)     private MethodUsage resolveMethodTypeParameters(MethodUsage methodUsage, List<ResolvedType> actualParamTypes) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 301)         Map<ResolvedTypeParameterDeclaration, ResolvedType> matchedTypeParameters = new HashMap<>();
                                                                                                                                                                                                 302)
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 303)         if (methodUsage.getDeclaration().hasVariadicParameter()) {
b32947e8c java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-21 06:55:11 +0000 304)             if (actualParamTypes.size() == methodUsage.getDeclaration().getNumberOfParams()) {
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 305)                 // the varargs parameter is an Array, so extract the inner type
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 306)                 ResolvedType expectedType =
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 307)                     methodUsage.getDeclaration().getLastParam().getType().asArrayType().getComponentType();
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 308)                 // the varargs corresponding type can be either T or Array<T>
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 309)                 ResolvedType actualType =
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 310)                     actualParamTypes.get(actualParamTypes.size() - 1).isArray() ?
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 311)                         actualParamTypes.get(actualParamTypes.size() - 1).asArrayType().getComponentType() :
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 312)                         actualParamTypes.get(actualParamTypes.size() - 1);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 313)                 if (!expectedType.isAssignableBy(actualType)) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 314)                     for (ResolvedTypeParameterDeclaration tp : methodUsage.getDeclaration().getTypeParameters()) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 315)                         expectedType = MethodResolutionLogic.replaceTypeParam(expectedType, tp, typeSolver);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 316)                     }
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 317)                 }
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 318)                 if (!expectedType.isAssignableBy(actualType)) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 319)                     // ok, then it needs to be wrapped
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 320)                     throw new UnsupportedOperationException(
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 321)                         String.format("Unable to resolve the type typeParametersValues in a MethodUsage. Expected type: %s, Actual type: %s. Method Declaration: %s. MethodUsage: %s",
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 322)                                       expectedType,
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 323)                                       actualType,
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 324)                                       methodUsage.getDeclaration(),
70f3e66c9 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 17:24:30 +0000 325)                                       methodUsage));
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 326)                 }
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 327)                 // match only the varargs type
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 328)                 matchTypeParameters(expectedType, actualType, matchedTypeParameters);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 329)             } else {
c1881cd14 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-09 17:39:04 +0000 330)                 return methodUsage;
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 331)             }
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 332)         }
                                                                                                                                                                                                 333)
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 334)         int until = methodUsage.getDeclaration().hasVariadicParameter() ?
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 335)             actualParamTypes.size() - 1 :
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 336)             actualParamTypes.size();
                                                                                                                                                                                                 337)
16aa32541 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-11 14:40:24 +0000 338)         for (int i = 0; i < until; i++) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 339)             ResolvedType expectedType = methodUsage.getParamType(i);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 340)             ResolvedType actualType = actualParamTypes.get(i);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 341)             matchTypeParameters(expectedType, actualType, matchedTypeParameters);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 342)         }
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 343)         for (ResolvedTypeParameterDeclaration tp : matchedTypeParameters.keySet()) {
dc093e9ac java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-22 12:39:56 +0000 344)             methodUsage = methodUsage.replaceTypeParameter(tp, matchedTypeParameters.get(tp));
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 345)         }
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 346)         return methodUsage;
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 347)     }
                                                                                                                                                                                                 348)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 349)     private void matchTypeParameters(ResolvedType expectedType, ResolvedType actualType, Map<ResolvedTypeParameterDeclaration, ResolvedType> matchedTypeParameters) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 350)         if (expectedType.isTypeVariable()) {
589ef9283 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-10 18:08:39 +0000 351)             if (!actualType.isTypeVariable() && !actualType.isReferenceType()) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 352)                 throw new UnsupportedOperationException(actualType.getClass().getCanonicalName());
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 353)             }
9c4e9b3e3 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-22 12:26:28 +0000 354)             matchedTypeParameters.put(expectedType.asTypeParameter(), actualType);
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 355)         } else if (expectedType.isArray()) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 356)             if (!actualType.isArray()) {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 357)                 throw new UnsupportedOperationException(actualType.getClass().getCanonicalName());
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 358)             }
051dbd94c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 20:57:00 +0000 359)             matchTypeParameters(
051dbd94c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 20:57:00 +0000 360)                     expectedType.asArrayType().getComponentType(),
051dbd94c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 20:57:00 +0000 361)                     actualType.asArrayType().getComponentType(),
051dbd94c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 20:57:00 +0000 362)                     matchedTypeParameters);
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 363)         } else if (expectedType.isReferenceType()) {
abec22a71 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (mlangkabel               2017-08-28 09:15:05 +0000 364)             // avoid cases where the actual type has no type parameters but the expected one has. Such as: "classX extends classY<Integer>"
abec22a71 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (mlangkabel               2017-08-28 09:15:05 +0000 365)             if (actualType.isReferenceType() && actualType.asReferenceType().typeParametersValues().size() > 0) {
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 366)                 int i = 0;
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 367)                 for (ResolvedType tp : expectedType.asReferenceType().typeParametersValues()) {
051dbd94c java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-14 20:57:00 +0000 368)                     matchTypeParameters(tp, actualType.asReferenceType().typeParametersValues().get(i), matchedTypeParameters);
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 369)                     i++;
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 370)                 }
589ef9283 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Stas Levin               2017-05-10 18:08:39 +0000 371)             }
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 372)         } else if (expectedType.isPrimitive()) {
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 373)             // nothing to do
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 374)         } else if (expectedType.isWildcard()) {
81d24cde3 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 17:22:20 +0000 375)             // nothing to do
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 376)         } else {
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 377)             throw new UnsupportedOperationException(expectedType.getClass().getCanonicalName());
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 378)         }
ead147279 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-20 16:04:38 +0000 379)     }
                                                                                                                                                                                                 380)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 381)     private Optional<MethodUsage> solveMethodAsUsage(ResolvedTypeVariable tp, String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver, Context invokationContext) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 382)         for (ResolvedTypeParameterDeclaration.Bound bound : tp.asTypeParameter().getBounds()) {
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 383)             Optional<MethodUsage> methodUsage = solveMethodAsUsage(bound.getType(), name, argumentsTypes, typeSolver, invokationContext);
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 384)             if (methodUsage.isPresent()) {
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 385)                 return methodUsage;
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 386)             }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 387)         }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 388)         return Optional.empty();
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 389)     }
                                                                                                                                                                                                 390)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 391)     private Optional<MethodUsage> solveMethodAsUsage(ResolvedType type, String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver, Context invokationContext) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 392)         if (type instanceof ResolvedReferenceType) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 393)             return solveMethodAsUsage((ResolvedReferenceType) type, name, argumentsTypes, typeSolver, invokationContext);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 394)         } else if (type instanceof ResolvedTypeVariable) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 395)             return solveMethodAsUsage((ResolvedTypeVariable) type, name, argumentsTypes, typeSolver, invokationContext);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 396)         } else if (type instanceof ResolvedWildcard) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 397)             ResolvedWildcard wildcardUsage = (ResolvedWildcard) type;
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 398)             if (wildcardUsage.isSuper()) {
88db8b2a8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-17 17:25:56 +0000 399)                 return solveMethodAsUsage(wildcardUsage.getBoundedType(), name, argumentsTypes, typeSolver, invokationContext);
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 400)             } else if (wildcardUsage.isExtends()) {
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 401)                 throw new UnsupportedOperationException("extends wildcard");
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 402)             } else {
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 403)                 throw new UnsupportedOperationException("unbounded wildcard");
5aca9bfac java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java         (Federico Tomassetti      2015-11-13 13:55:17 +0000 404)             }
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 405)         } else if (type instanceof ResolvedLambdaConstraintType){
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 406)             ResolvedLambdaConstraintType constraintType = (ResolvedLambdaConstraintType) type;
acdac6790 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (xdrop                    2017-03-10 01:22:23 +0000 407)             return solveMethodAsUsage(constraintType.getBound(), name, argumentsTypes, typeSolver, invokationContext);
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 408)         } else if (type instanceof ResolvedArrayType) {
c990d2349 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Fred LefÃ©vÃ¨re-Laoide     2016-12-13 13:10:38 +0000 409)             // An array inherits methods from Object not from it's component type
c990d2349 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Fred LefÃ©vÃ¨re-Laoide     2016-12-13 13:10:38 +0000 410)             return solveMethodAsUsage(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeSolver), typeSolver), name, argumentsTypes, typeSolver, invokationContext);
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 411)         } else if (type instanceof ResolvedUnionType) {
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 412)             Optional<ResolvedReferenceType> commonAncestor = type.asUnionType().getCommonAncestor();
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 413)             if (commonAncestor.isPresent()) {
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 414)                 return solveMethodAsUsage(commonAncestor.get(), name, argumentsTypes, typeSolver, invokationContext);
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 415)             } else {
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 416)                 throw new UnsupportedOperationException("no common ancestor available for " + type.describe());
7df795073 javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java (daans                    2018-03-30 13:12:22 +0000 417)             }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 418)         } else {
82eb44707 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-13 20:11:31 +0000 419)             throw new UnsupportedOperationException("type usage: " + type.getClass().getCanonicalName());
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 420)         }
0e81f51c4 src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java                                 (Federico Tomassetti      2015-10-30 22:37:45 +0000 421)     }
                                                                                                                                                                                                 422)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 423)     private ResolvedType usingParameterTypesFromScope(ResolvedType scope, ResolvedType type, Map<ResolvedTypeParameterDeclaration, ResolvedType> inferredTypes) {
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 424)         if (type.isReferenceType()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 425)             for (Pair<ResolvedTypeParameterDeclaration, ResolvedType> entry : type.asReferenceType().getTypeParametersMap()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 426)                 if (entry.a.declaredOnType() && scope.asReferenceType().getGenericParameterByName(entry.a.getName()).isPresent()) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 427)                     type = type.replaceTypeVariables(entry.a, scope.asReferenceType().getGenericParameterByName(entry.a.getName()).get(), inferredTypes);
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 428)                 }
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 429)             }
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 430)             return type;
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 431)         } else {
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 432)             return type;
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 433)         }
38d780df8 java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java               (Federico Tomassetti      2016-10-12 20:53:39 +0000 434)     }
                                                                                                                                                                                                 435)
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 436)     private ResolvedType applyInferredTypes(ResolvedType type, Map<ResolvedTypeParameterDeclaration, ResolvedType> inferredTypes) {
5d8d0cb79 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2017-09-28 20:36:20 +0000 437)         for (ResolvedTypeParameterDeclaration tp : inferredTypes.keySet()) {
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 438)             type = type.replaceTypeVariables(tp, inferredTypes.get(tp), inferredTypes);
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 439)         }
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 440)         return type;
2082034e8 java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java       (Federico Tomassetti      2016-10-24 17:19:05 +0000 441)     }
2f49331fb src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java                                      (Federico Tomassetti      2015-07-31 16:08:00 +0000 442) }
