f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 1)   /*
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 2)    * Copyright 2002-2018 the original author or authors.
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 3)    *
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 4)    * Licensed under the Apache License, Version 2.0 (the "License");
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 5)    * you may not use this file except in compliance with the License.
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 6)    * You may obtain a copy of the License at
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 7)    *
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 8)    *      http://www.apache.org/licenses/LICENSE-2.0
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 9)    *
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 10)   * Unless required by applicable law or agreed to in writing, software
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 11)   * distributed under the License is distributed on an "AS IS" BASIS,
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 12)   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 13)   * See the License for the specific language governing permissions and
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 14)   * limitations under the License.
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 15)   */
                                                                                                                                                                                                                16)
1c45c51fe org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Juergen Hoeller   2011-12-12 18:20:03 -0500 17)  package org.springframework.web.servlet.mvc.method.annotation;
                                                                                                                                                                                                                18)
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 19)  import java.io.IOException;
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 20)  import java.lang.reflect.Type;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 21)  import java.util.ArrayList;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 22)  import java.util.Arrays;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 23)  import java.util.Collections;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 24)  import java.util.HashSet;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 25)  import java.util.List;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 26)  import java.util.Locale;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 27)  import java.util.Set;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 28)  import javax.servlet.http.HttpServletRequest;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 29)  import javax.servlet.http.HttpServletResponse;
                                                                                                                                                                                                                30)
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 31)  import org.springframework.core.GenericTypeResolver;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 32)  import org.springframework.core.MethodParameter;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 33)  import org.springframework.core.ParameterizedTypeReference;
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 34)  import org.springframework.core.ResolvableType;
e9a8a5065 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-04-23 12:39:05 -0400 35)  import org.springframework.core.io.InputStreamResource;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 36)  import org.springframework.core.io.Resource;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 37)  import org.springframework.core.io.support.ResourceRegion;
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 38)  import org.springframework.http.HttpEntity;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 39)  import org.springframework.http.HttpHeaders;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 40)  import org.springframework.http.HttpOutputMessage;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 41)  import org.springframework.http.HttpRange;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 42)  import org.springframework.http.HttpStatus;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 43)  import org.springframework.http.MediaType;
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 44)  import org.springframework.http.converter.GenericHttpMessageConverter;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 45)  import org.springframework.http.converter.HttpMessageConverter;
d83735694 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2015-07-28 06:15:48 -0400 46)  import org.springframework.http.converter.HttpMessageNotWritableException;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 47)  import org.springframework.http.server.ServletServerHttpRequest;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 48)  import org.springframework.http.server.ServletServerHttpResponse;
1f28825f9 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2017-05-31 15:42:23 -0400 49)  import org.springframework.lang.Nullable;
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 50)  import org.springframework.util.Assert;
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 51)  import org.springframework.util.CollectionUtils;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 52)  import org.springframework.util.StringUtils;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 53)  import org.springframework.web.HttpMediaTypeNotAcceptableException;
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 54)  import org.springframework.web.accept.ContentNegotiationManager;
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 55)  import org.springframework.web.accept.PathExtensionContentNegotiationStrategy;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 56)  import org.springframework.web.context.request.NativeWebRequest;
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 57)  import org.springframework.web.context.request.ServletWebRequest;
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 58)  import org.springframework.web.method.support.HandlerMethodReturnValueHandler;
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 59)  import org.springframework.web.servlet.HandlerMapping;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 60)  import org.springframework.web.util.UrlPathHelper;
                                                                                                                                                                                                                61)
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 62)  /**
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 63)   * Extends {@link AbstractMessageConverterMethodArgumentResolver} with the ability to handle method
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 64)   * return values by writing to the response with {@link HttpMessageConverter HttpMessageConverters}.
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 65)   *
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 66)   * @author Arjen Poutsma
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 67)   * @author Rossen Stoyanchev
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 68)   * @author Brian Clozel
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 69)   * @author Juergen Hoeller
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 70)   * @since 3.1
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 71)   */
3a87d8e7c org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-06-28 15:22:33 -0400 72)  public abstract class AbstractMessageConverterMethodProcessor extends AbstractMessageConverterMethodArgumentResolver
3a87d8e7c org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-06-28 15:22:33 -0400 73)  		implements HandlerMethodReturnValueHandler {
                                                                                                                                                                                                                74)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 75)  	/* Extensions associated with the built-in message converters */
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 76)  	private static final Set<String> WHITELISTED_EXTENSIONS = new HashSet<>(Arrays.asList(
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 77)  			"txt", "text", "yml", "properties", "csv",
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 78)  			"json", "xml", "atom", "rss",
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 79)  			"png", "jpe", "jpeg", "jpg", "gif", "wbmp", "bmp"));
                                                                                                                                                                                                                80)
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 81)  	private static final Set<String> WHITELISTED_MEDIA_BASE_TYPES = new HashSet<>(
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 82)  			Arrays.asList("audio", "image", "video"));
                                                                                                                                                                                                                83)
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 84)  	private static final MediaType MEDIA_TYPE_APPLICATION = new MediaType("application");
                                                                                                                                                                                                                85)
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 86)  	private static final Type RESOURCE_REGION_LIST_TYPE =
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 87)  			new ParameterizedTypeReference<List<ResourceRegion>>() { }.getType();
                                                                                                                                                                                                                88)
                                                                                                                                                                                                                89)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 90)  	private static final UrlPathHelper decodingUrlPathHelper = new UrlPathHelper();
                                                                                                                                                                                                                91)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 92)  	private static final UrlPathHelper rawUrlPathHelper = new UrlPathHelper();
                                                                                                                                                                                                                93)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 94)  	static {
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 95)  		rawUrlPathHelper.setRemoveSemicolonContent(false);
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 96)  		rawUrlPathHelper.setUrlDecode(false);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 97)  	}
                                                                                                                                                                                                                98)
                                                                                                                                                                                                                99)
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 100) 	private final ContentNegotiationManager contentNegotiationManager;
                                                                                                                                                                                                                101)
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 102) 	private final PathExtensionContentNegotiationStrategy pathStrategy;
                                                                                                                                                                                                                103)
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 104) 	private final Set<String> safeExtensions = new HashSet<>();
                                                                                                                                                                                                                105)
                                                                                                                                                                                                                106)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 107) 	/**
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 108) 	 * Constructor with list of converters only.
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 109) 	 */
0556ed4f1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-03-29 21:42:14 -0400 110) 	protected AbstractMessageConverterMethodProcessor(List<HttpMessageConverter<?>> converters) {
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 111) 		this(converters, null, null);
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 112) 	}
                                                                                                                                                                                                                113)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 114) 	/**
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 115) 	 * Constructor with list of converters and ContentNegotiationManager.
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 116) 	 */
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 117) 	protected AbstractMessageConverterMethodProcessor(List<HttpMessageConverter<?>> converters,
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 118) 			@Nullable ContentNegotiationManager contentNegotiationManager) {
                                                                                                                                                                                                                119)
0556ed4f1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-03-29 21:42:14 -0400 120) 		this(converters, contentNegotiationManager, null);
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 121) 	}
                                                                                                                                                                                                                122)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 123) 	/**
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 124) 	 * Constructor with list of converters and ContentNegotiationManager as well
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 125) 	 * as request/response body advice instances.
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 126) 	 */
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 127) 	protected AbstractMessageConverterMethodProcessor(List<HttpMessageConverter<?>> converters,
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 128) 			@Nullable ContentNegotiationManager manager, @Nullable List<Object> requestResponseBodyAdvice) {
                                                                                                                                                                                                                129)
0556ed4f1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-03-29 21:42:14 -0400 130) 		super(converters, requestResponseBodyAdvice);
                                                                                                                                                                                                                131)
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 132) 		this.contentNegotiationManager = (manager != null ? manager : new ContentNegotiationManager());
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 133) 		this.pathStrategy = initPathStrategy(this.contentNegotiationManager);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 134) 		this.safeExtensions.addAll(this.contentNegotiationManager.getAllFileExtensions());
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 135) 		this.safeExtensions.addAll(WHITELISTED_EXTENSIONS);
96b18c8dc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-05-19 15:47:16 -0400 136) 	}
                                                                                                                                                                                                                137)
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 138) 	private static PathExtensionContentNegotiationStrategy initPathStrategy(ContentNegotiationManager manager) {
f16225690 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2016-03-04 16:06:01 -0500 139) 		Class<PathExtensionContentNegotiationStrategy> clazz = PathExtensionContentNegotiationStrategy.class;
                                                                                                                                                                                                                140) 		PathExtensionContentNegotiationStrategy strategy = manager.getStrategy(clazz);
f16225690 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2016-03-04 16:06:01 -0500 141) 		return (strategy != null ? strategy : new PathExtensionContentNegotiationStrategy());
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 142) 	}
                                                                                                                                                                                                                143)
                                                                                                                                                                                                                144)
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 145) 	/**
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 146) 	 * Creates a new {@link HttpOutputMessage} from the given {@link NativeWebRequest}.
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 147) 	 * @param webRequest the web request to create an output message from
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 148) 	 * @return the output message
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 149) 	 */
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 150) 	protected ServletServerHttpResponse createOutputMessage(NativeWebRequest webRequest) {
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 151) 		HttpServletResponse response = webRequest.getNativeResponse(HttpServletResponse.class);
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 152) 		Assert.state(response != null, "No HttpServletResponse");
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 153) 		return new ServletServerHttpResponse(response);
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 154) 	}
                                                                                                                                                                                                                155)
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 156) 	/**
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 157) 	 * Writes the given return value to the given web request. Delegates to
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 158) 	 * {@link #writeWithMessageConverters(Object, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)}
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 159) 	 */
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 160) 	protected <T> void writeWithMessageConverters(T value, MethodParameter returnType, NativeWebRequest webRequest)
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 161) 			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {
                                                                                                                                                                                                                162)
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 163) 		ServletServerHttpRequest inputMessage = createInputMessage(webRequest);
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 164) 		ServletServerHttpResponse outputMessage = createOutputMessage(webRequest);
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 165) 		writeWithMessageConverters(value, returnType, inputMessage, outputMessage);
1eaca6572 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-18 07:34:47 -0400 166) 	}
                                                                                                                                                                                                                167)
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 168) 	/**
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 169) 	 * Writes the given return type to the given output message.
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 170) 	 * @param value the value to write to the output message
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 171) 	 * @param returnType the type of the value
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 172) 	 * @param inputMessage the input messages. Used to inspect the {@code Accept} header.
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 173) 	 * @param outputMessage the output message to write to
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 174) 	 * @throws IOException thrown in case of I/O errors
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 175) 	 * @throws HttpMediaTypeNotAcceptableException thrown when the conditions indicated
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 176) 	 * by the {@code Accept} header on the request cannot be met by the message converters
39f8bd663 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-05-05 17:19:08 -0400 177) 	 */
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 178) 	@SuppressWarnings({"rawtypes", "unchecked"})
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 179) 	protected <T> void writeWithMessageConverters(@Nullable T value, MethodParameter returnType,
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 180) 			ServletServerHttpRequest inputMessage, ServletServerHttpResponse outputMessage)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 181) 			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {
                                                                                                                                                                                                                182)
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 183) 		Object body;
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 184) 		Class<?> valueType;
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 185) 		Type targetType;
                                                                                                                                                                                                                186)
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 187) 		if (value instanceof CharSequence) {
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 188) 			body = value.toString();
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 189) 			valueType = String.class;
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 190) 			targetType = String.class;
1291d6e1b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2016-02-04 23:55:48 -0500 191) 		}
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 192) 		else {
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 193) 			body = value;
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 194) 			valueType = getReturnValueType(body, returnType);
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 195) 			targetType = GenericTypeResolver.resolveType(getGenericType(returnType), returnType.getContainingClass());
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 196) 		}
                                                                                                                                                                                                                197)
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 198) 		if (isResourceType(value, returnType)) {
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 199) 			outputMessage.getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");
818e4b077 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-07-10 06:11:23 -0400 200) 			if (value != null && inputMessage.getHeaders().getFirst(HttpHeaders.RANGE) != null &&
818e4b077 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-07-10 06:11:23 -0400 201) 					outputMessage.getServletResponse().getStatus() == 200) {
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 202) 				Resource resource = (Resource) value;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 203) 				try {
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 204) 					List<HttpRange> httpRanges = inputMessage.getHeaders().getRange();
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 205) 					outputMessage.getServletResponse().setStatus(HttpStatus.PARTIAL_CONTENT.value());
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 206) 					body = HttpRange.toResourceRegions(httpRanges, resource);
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 207) 					valueType = body.getClass();
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 208) 					targetType = RESOURCE_REGION_LIST_TYPE;
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 209) 				}
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 210) 				catch (IllegalArgumentException ex) {
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 211) 					outputMessage.getHeaders().set(HttpHeaders.CONTENT_RANGE, "bytes */" + resource.contentLength());
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 212) 					outputMessage.getServletResponse().setStatus(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE.value());
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 213) 				}
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 214) 			}
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 215) 		}
                                                                                                                                                                                                                216)
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 217) 		MediaType selectedMediaType = null;
9a894ab61 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-11-10 15:05:03 -0500 218) 		MediaType contentType = outputMessage.getHeaders().getContentType();
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 219) 		if (contentType != null && contentType.isConcrete()) {
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 220) 			if (logger.isDebugEnabled()) {
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 221) 				logger.debug("Found 'Content-Type:" + contentType + "' in response");
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 222) 			}
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 223) 			selectedMediaType = contentType;
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 224) 		}
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 225) 		else {
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 226) 			HttpServletRequest request = inputMessage.getServletRequest();
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 227) 			List<MediaType> acceptableTypes = getAcceptableMediaTypes(request);
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 228) 			List<MediaType> producibleTypes = getProducibleMediaTypes(request, valueType, targetType);
                                                                                                                                                                                                                229)
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 230) 			if (body != null && producibleTypes.isEmpty()) {
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 231) 				throw new HttpMessageNotWritableException(
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 232) 						"No converter found for return value of type: " + valueType);
667fc7e4a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2015-09-04 08:38:47 -0400 233) 			}
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 234) 			List<MediaType> mediaTypesToUse = new ArrayList<>();
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 235) 			for (MediaType requestedType : acceptableTypes) {
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 236) 				for (MediaType producibleType : producibleTypes) {
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 237) 					if (requestedType.isCompatibleWith(producibleType)) {
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 238) 						mediaTypesToUse.add(getMostSpecificMediaType(requestedType, producibleType));
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 239) 					}
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 240) 				}
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 241) 			}
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 242) 			if (mediaTypesToUse.isEmpty()) {
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 243) 				if (body != null) {
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 244) 					throw new HttpMediaTypeNotAcceptableException(producibleTypes);
c5e360d88 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-10-17 13:21:08 -0400 245) 				}
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 246) 				if (logger.isDebugEnabled()) {
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 247) 					logger.debug("No match for " + acceptableTypes + ", supported: " + producibleTypes);
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 248) 				}
8cce40469 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-10-15 17:06:12 -0400 249) 				return;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 250) 			}
                                                                                                                                                                                                                251)
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 252) 			MediaType.sortBySpecificityAndQuality(mediaTypesToUse);
                                                                                                                                                                                                                253)
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 254) 			for (MediaType mediaType : mediaTypesToUse) {
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 255) 				if (mediaType.isConcrete()) {
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 256) 					selectedMediaType = mediaType;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 257) 					break;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 258) 				}
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 259) 				else if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION)) {
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 260) 					selectedMediaType = MediaType.APPLICATION_OCTET_STREAM;
1bbdb0d2f org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 08:22:21 -0400 261) 					break;
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 262) 				}
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 263) 			}
                                                                                                                                                                                                                264)
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 265) 			if (logger.isDebugEnabled()) {
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 266) 				logger.debug("Using '" + selectedMediaType + "', given " +
0be8c20fc spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-07-24 20:47:26 -0400 267) 						acceptableTypes + " and supported " + producibleTypes);
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 268) 			}
fda08852b spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2017-12-02 00:43:43 -0500 269) 		}
                                                                                                                                                                                                                270)
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 271) 		if (selectedMediaType != null) {
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 272) 			selectedMediaType = selectedMediaType.removeQualityValue();
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 273) 			for (HttpMessageConverter<?> converter : this.messageConverters) {
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 274) 				GenericHttpMessageConverter genericConverter = (converter instanceof GenericHttpMessageConverter ?
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 275) 						(GenericHttpMessageConverter<?>) converter : null);
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 276) 				if (genericConverter != null ?
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 277) 						((GenericHttpMessageConverter) converter).canWrite(targetType, valueType, selectedMediaType) :
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 278) 						converter.canWrite(valueType, selectedMediaType)) {
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 279) 					body = getAdvice().beforeBodyWrite(body, returnType, selectedMediaType,
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 280) 							(Class<? extends HttpMessageConverter<?>>) converter.getClass(),
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 281) 							inputMessage, outputMessage);
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 282) 					if (body != null) {
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 283) 						if (logger.isDebugEnabled()) {
29ce6685c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-08-01 17:49:28 -0400 284) 							logger.debug("Writing [" + formatValue(body) + "]");
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 285) 						}
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 286) 						addContentDispositionHeader(inputMessage, outputMessage);
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 287) 						if (genericConverter != null) {
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 288) 							genericConverter.write(body, targetType, selectedMediaType, outputMessage);
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 289) 						}
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 290) 						else {
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 291) 							((HttpMessageConverter) converter).write(body, selectedMediaType, outputMessage);
7dd8dc62a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-13 05:37:58 -0400 292) 						}
a9b2a1249 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-09-19 14:57:56 -0400 293) 					}
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 294) 					else {
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 295) 						if (logger.isDebugEnabled()) {
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 296) 							logger.debug("Nothing to write: null body");
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 297) 						}
900bc8a2e spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-22 22:44:24 -0400 298) 					}
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 299) 					return;
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 300) 				}
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 301) 			}
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 302) 		}
                                                                                                                                                                                                                303)
28a5c3009 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-06-18 18:33:11 -0400 304) 		if (body != null) {
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 305) 			throw new HttpMediaTypeNotAcceptableException(this.allSupportedMediaTypes);
c5e360d88 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-10-17 13:21:08 -0400 306) 		}
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 307) 	}
                                                                                                                                                                                                                308)
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 309) 	/**
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 310) 	 * Return the type of the value to be written to the response. Typically this is
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 311) 	 * a simple check via getClass on the value but if the value is null, then the
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 312) 	 * return type needs to be examined possibly including generic type determination
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 313) 	 * (e.g. {@code ResponseEntity<T>}).
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 314) 	 */
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 315) 	protected Class<?> getReturnValueType(@Nullable Object value, MethodParameter returnType) {
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 316) 		return (value != null ? value.getClass() : returnType.getParameterType());
a9b2a1249 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2014-09-19 14:57:56 -0400 317) 	}
                                                                                                                                                                                                                318)
818e4b077 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-07-10 06:11:23 -0400 319) 	/**
818e4b077 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-07-10 06:11:23 -0400 320) 	 * Return whether the returned value or the declared return type extends {@link Resource}.
818e4b077 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-07-10 06:11:23 -0400 321) 	 */
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 322) 	protected boolean isResourceType(@Nullable Object value, MethodParameter returnType) {
e9a8a5065 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-04-23 12:39:05 -0400 323) 		Class<?> clazz = getReturnValueType(value, returnType);
e9a8a5065 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2018-04-23 12:39:05 -0400 324) 		return clazz != InputStreamResource.class && Resource.class.isAssignableFrom(clazz);
582014e94 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Brian Clozel      2017-08-24 14:50:37 -0400 325) 	}
                                                                                                                                                                                                                326)
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 327) 	/**
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 328) 	 * Return the generic type of the {@code returnType} (or of the nested type
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 329) 	 * if it is an {@link HttpEntity}).
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 330) 	 */
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 331) 	private Type getGenericType(MethodParameter returnType) {
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 332) 		if (HttpEntity.class.isAssignableFrom(returnType.getParameterType())) {
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 333) 			return ResolvableType.forType(returnType.getGenericParameterType()).getGeneric().getType();
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 334) 		}
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 335) 		else {
e7a53e37f spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 07:02:22 -0400 336) 			return returnType.getGenericParameterType();
31a5434ea spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-22 11:05:45 -0400 337) 		}
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 338) 	}
                                                                                                                                                                                                                339)
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 340) 	/**
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 341) 	 * Returns the media types that can be produced.
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 342) 	 * @see #getProducibleMediaTypes(HttpServletRequest, Class, Type)
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 343) 	 */
aba882af4 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sam Brannen       2018-04-04 08:04:54 -0400 344) 	@SuppressWarnings("unused")
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 345) 	protected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> valueClass) {
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 346) 		return getProducibleMediaTypes(request, valueClass, null);
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 347) 	}
                                                                                                                                                                                                                348)
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 349) 	/**
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 350) 	 * Returns the media types that can be produced. The resulting media types are:
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 351) 	 * <ul>
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 352) 	 * <li>The producible media types specified in the request mappings, or
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 353) 	 * <li>Media types of configured converters that can write the specific return value, or
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 354) 	 * <li>{@link MediaType#ALL}
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 355) 	 * </ul>
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 356) 	 * @since 4.2
e0480f75a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Phillip Webb      2018-06-28 04:28:44 -0400 357) 	 */
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 358) 	@SuppressWarnings("unchecked")
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 359) 	protected List<MediaType> getProducibleMediaTypes(
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 360) 			HttpServletRequest request, Class<?> valueClass, @Nullable Type targetType) {
                                                                                                                                                                                                                361)
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 362) 		Set<MediaType> mediaTypes =
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 363) 				(Set<MediaType>) request.getAttribute(HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE);
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 364) 		if (!CollectionUtils.isEmpty(mediaTypes)) {
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 365) 			return new ArrayList<>(mediaTypes);
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 366) 		}
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 367) 		else if (!this.allSupportedMediaTypes.isEmpty()) {
00d2606b0 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Stephane Nicoll   2016-07-05 11:00:34 -0400 368) 			List<MediaType> result = new ArrayList<>();
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 369) 			for (HttpMessageConverter<?> converter : this.messageConverters) {
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 370) 				if (converter instanceof GenericHttpMessageConverter && targetType != null) {
b915e42c3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2018-07-16 13:45:35 -0400 371) 					if (((GenericHttpMessageConverter<?>) converter).canWrite(targetType, valueClass, null)) {
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 372) 						result.addAll(converter.getSupportedMediaTypes());
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 373) 					}
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 374) 				}
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 375) 				else if (converter.canWrite(valueClass, null)) {
c5833b192 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-24 13:22:22 -0400 376) 					result.addAll(converter.getSupportedMediaTypes());
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 377) 				}
c5833b192 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-24 13:22:22 -0400 378) 			}
c5833b192 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-24 13:22:22 -0400 379) 			return result;
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 380) 		}
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 381) 		else {
5fa7f2479 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-20 13:02:20 -0400 382) 			return Collections.singletonList(MediaType.ALL);
af1dfd357 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-05-17 09:02:48 -0400 383) 		}
289f35da3 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Sebastien Deleuze 2015-06-25 09:02:33 -0400 384) 	}
                                                                                                                                                                                                                385)
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 386) 	private List<MediaType> getAcceptableMediaTypes(HttpServletRequest request)
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 387) 			throws HttpMediaTypeNotAcceptableException {
                                                                                                                                                                                                                388)
f3994467c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-03-27 16:54:19 -0400 389) 		return this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));
f05e2bc56 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-06-22 11:55:46 -0400 390) 	}
                                                                                                                                                                                                                391)
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 392) 	/**
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 393) 	 * Return the more specific of the acceptable and the producible media types
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 394) 	 * with the q-value of the former.
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 395) 	 */
982cb2f25 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2012-05-11 14:43:58 -0400 396) 	private MediaType getMostSpecificMediaType(MediaType acceptType, MediaType produceType) {
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 397) 		MediaType produceTypeToUse = produceType.copyQualityValue(acceptType);
ec7d80b85 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2014-04-23 17:03:47 -0400 398) 		return (MediaType.SPECIFICITY_COMPARATOR.compare(acceptType, produceTypeToUse) <= 0 ? acceptType : produceTypeToUse);
ad2e0d458 org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Arjen Poutsma     2011-05-17 05:45:57 -0400 399) 	}
                                                                                                                                                                                                                400)
29ce6685c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-08-01 17:49:28 -0400 401) 	static String formatValue(Object body) {
29ce6685c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-08-01 17:49:28 -0400 402) 		return (body instanceof CharSequence ? "\"" + body + "\"" : body.toString());
29ce6685c spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2018-08-01 17:49:28 -0400 403) 	}
                                                                                                                                                                                                                404)
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 405) 	/**
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 406) 	 * Check if the path has a file extension and whether the extension is
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 407) 	 * either {@link #WHITELISTED_EXTENSIONS whitelisted} or explicitly
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 408) 	 * {@link ContentNegotiationManager#getAllFileExtensions() registered}.
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 409) 	 * If not, and the status is in the 2xx range, a 'Content-Disposition'
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 410) 	 * header with a safe attachment file name ("f.txt") is added to prevent
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 411) 	 * RFD exploits.
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 412) 	 */
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 413) 	private void addContentDispositionHeader(ServletServerHttpRequest request, ServletServerHttpResponse response) {
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 414) 		HttpHeaders headers = response.getHeaders();
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 415) 		if (headers.containsKey(HttpHeaders.CONTENT_DISPOSITION)) {
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 416) 			return;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 417) 		}
                                                                                                                                                                                                                418)
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 419) 		try {
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 420) 			int status = response.getServletResponse().getStatus();
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 421) 			if (status < 200 || status > 299) {
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 422) 				return;
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 423) 			}
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 424) 		}
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 425) 		catch (Throwable ex) {
5169c51a6 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-12-13 07:02:23 -0500 426) 			// ignore
050e79e45 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-26 16:01:32 -0400 427) 		}
                                                                                                                                                                                                                428)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 429) 		HttpServletRequest servletRequest = request.getServletRequest();
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 430) 		String requestUri = rawUrlPathHelper.getOriginatingRequestUri(servletRequest);
                                                                                                                                                                                                                431)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 432) 		int index = requestUri.lastIndexOf('/') + 1;
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 433) 		String filename = requestUri.substring(index);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 434) 		String pathParams = "";
                                                                                                                                                                                                                435)
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 436) 		index = filename.indexOf(';');
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 437) 		if (index != -1) {
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 438) 			pathParams = filename.substring(index);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 439) 			filename = filename.substring(0, index);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 440) 		}
                                                                                                                                                                                                                441)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 442) 		filename = decodingUrlPathHelper.decodeRequestString(servletRequest, filename);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 443) 		String ext = StringUtils.getFilenameExtension(filename);
                                                                                                                                                                                                                444)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 445) 		pathParams = decodingUrlPathHelper.decodeRequestString(servletRequest, pathParams);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 446) 		String extInPathParams = StringUtils.getFilenameExtension(pathParams);
                                                                                                                                                                                                                447)
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 448) 		if (!safeExtension(servletRequest, ext) || !safeExtension(servletRequest, extInPathParams)) {
3a919a48d spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-11 17:14:29 -0500 449) 			headers.add(HttpHeaders.CONTENT_DISPOSITION, "inline;filename=f.txt");
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 450) 		}
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 451) 	}
                                                                                                                                                                                                                452)
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 453) 	@SuppressWarnings("unchecked")
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 454) 	private boolean safeExtension(HttpServletRequest request, @Nullable String extension) {
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 455) 		if (!StringUtils.hasText(extension)) {
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 456) 			return true;
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 457) 		}
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 458) 		extension = extension.toLowerCase(Locale.ENGLISH);
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 459) 		if (this.safeExtensions.contains(extension)) {
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 460) 			return true;
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 461) 		}
237439ef9 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 12:37:13 -0500 462) 		String pattern = (String) request.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);
237439ef9 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 12:37:13 -0500 463) 		if (pattern != null && pattern.endsWith("." + extension)) {
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 464) 			return true;
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 465) 		}
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 466) 		if (extension.equals("html")) {
237439ef9 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 12:37:13 -0500 467) 			String name = HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE;
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 468) 			Set<MediaType> mediaTypes = (Set<MediaType>) request.getAttribute(name);
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 469) 			if (!CollectionUtils.isEmpty(mediaTypes) && mediaTypes.contains(MediaType.TEXT_HTML)) {
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 470) 				return true;
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 471) 			}
bdb71e91a spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-02 13:07:48 -0500 472) 		}
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 473) 		return safeMediaTypesForExtension(new ServletWebRequest(request), extension);
2bd1daa75 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-10-15 04:33:27 -0400 474) 	}
                                                                                                                                                                                                                475)
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 476) 	private boolean safeMediaTypesForExtension(NativeWebRequest request, String extension) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 477) 		List<MediaType> mediaTypes = null;
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 478) 		try {
f813712f5 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2017-06-07 08:19:15 -0400 479) 			mediaTypes = this.pathStrategy.resolveMediaTypeKey(request, extension);
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 480) 		}
b204437ce spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Juergen Hoeller   2016-07-02 08:48:15 -0400 481) 		catch (HttpMediaTypeNotAcceptableException ex) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 482) 			// Ignore
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 483) 		}
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 484) 		if (CollectionUtils.isEmpty(mediaTypes)) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 485) 			return false;
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 486) 		}
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 487) 		for (MediaType mediaType : mediaTypes) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 488) 			if (!safeMediaType(mediaType)) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 489) 				return false;
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 490) 			}
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 491) 		}
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 492) 		return true;
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 493) 	}
                                                                                                                                                                                                                494)
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 495) 	private boolean safeMediaType(MediaType mediaType) {
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 496) 		return (WHITELISTED_MEDIA_BASE_TYPES.contains(mediaType.getType()) ||
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 497) 				mediaType.getSubtype().endsWith("+xml"));
a3168fde1 spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java                           (Rossen Stoyanchev 2015-11-06 16:45:41 -0500 498) 	}
                                                                                                                                                                                                                499)
acc75aa4b org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java (Rossen Stoyanchev 2011-04-06 07:30:59 -0400 500) }
