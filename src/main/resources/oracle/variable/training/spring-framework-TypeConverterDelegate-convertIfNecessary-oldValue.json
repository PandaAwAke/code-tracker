{
  "repositoryName": "spring-framework",
  "repositoryWebURL": "https://github.com/spring-projects/spring-framework.git",
  "filePath": "spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java",
  "functionName": "convertIfNecessary",
  "functionKey": "spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)",
  "functionStartLine": 138,
  "variableName": "oldValue",
  "variableKey": "spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(152)",
  "variableStartLine": 152,
  "startCommitId": "b325c74216fd9564a36602158fa1269e2e832874",
  "expectedChanges": [
    {
      "parentCommitId": "2d37c966b2831add8fd0e01efa9c1eb8240fbdd3",
      "commitId": "87598f48e41d483745aba56cbf4e998c6f6d680c",
      "commitTime": 1495868221,
      "changeType": "annotation change",
      "elementFileBefore": "spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java",
      "elementNameBefore": "spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(147)",
      "elementFileAfter": "spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java",
      "elementNameAfter": "spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(148)",
      "comment": "Add Parameter Annotation @Nullable in parameter oldValue : Object in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
    },
    {
      "parentCommitId": "973fb6ce4096d344758b3e0988e90ab401275209",
      "commitId": "ac490114aee005a66eeb0fba6c3c853552fc6a94",
      "commitTime": 1259286194,
      "changeType": "introduced",
      "elementFileBefore": "org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java",
      "elementNameBefore": "org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(186)",
      "elementFileAfter": "org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java",
      "elementNameAfter": "org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(186)",
      "comment": "Extract Method private convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T extracted from protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, descriptor PropertyDescriptor, methodParam MethodParameter) : T in class org.springframework.beans.TypeConverterDelegate"
    }
  ]
}