{
  "origin": "codeshovel",
  "repositoryName": "spring-boot",
  "repositoryPath": "H:\\Projects\\spring-projects\\spring-boot/.git",
  "startCommitName": "5cfe8dbee950dbf3a8de3ece2f6f3363f13d904a",
  "sourceFileName": "ErrorPageRegistrarBeanPostProcessor.java",
  "functionName": "getRegistrars",
  "functionId": "getRegistrars",
  "sourceFilePath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
  "functionStartLine": 76,
  "functionEndLine": 85,
  "numCommitsSeen": 8,
  "timeTaken": 2796,
  "changeHistory": [
    "0ba4830b4fb20deea040ca5e1c9a34651708b222",
    "4a189bdee7d1bd7fbdbd2593a8c9b8636a90bd39",
    "67556ba8eaf22a352b03fe197a0c452f695835a6",
    "d8f827d2249696a346bc11adf4ccacf61eeb888d",
    "9fb9a67c4bc895ead0008db106145953d3b3b855",
    "08ef5f4b1feb1033a5053a8d5bf6c439f2cf2db0"
  ],
  "changeHistoryShort": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": "Yfilerename",
    "4a189bdee7d1bd7fbdbd2593a8c9b8636a90bd39": "Ybodychange",
    "67556ba8eaf22a352b03fe197a0c452f695835a6": "Yfilerename",
    "d8f827d2249696a346bc11adf4ccacf61eeb888d": "Ybodychange",
    "9fb9a67c4bc895ead0008db106145953d3b3b855": "Ybodychange",
    "08ef5f4b1feb1033a5053a8d5bf6c439f2cf2db0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba4830b4fb20deea040ca5e1c9a34651708b222": {
      "type": "Yfilerename",
      "commitMessage": "Relocate projects to spring-boot-project\n\nMove projects to better reflect the way that Spring Boot is released.\n\nThe following projects are under `spring-boot-project`:\n\n  - `spring-boot`\n  - `spring-boot-autoconfigure`\n  - `spring-boot-tools`\n  - `spring-boot-starters`\n  - `spring-boot-actuator`\n  - `spring-boot-actuator-autoconfigure`\n  - `spring-boot-test`\n  - `spring-boot-test-autoconfigure`\n  - `spring-boot-devtools`\n  - `spring-boot-cli`\n  - `spring-boot-docs`\n\nSee gh-9316\n",
      "commitDate": "2017-10-04, 7:34 p.m.",
      "commitName": "0ba4830b4fb20deea040ca5e1c9a34651708b222",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2017-10-04, 7:04 p.m.",
      "commitNameOld": "0419d42b7ca37611955bc0211359c215e5477fa4",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tthis.registrars.sort(AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 76,
      "functionName": "getRegistrars",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
        "newPath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java"
      }
    },
    "4a189bdee7d1bd7fbdbd2593a8c9b8636a90bd39": {
      "type": "Ybodychange",
      "commitMessage": "Replace Collections.sort() with direct sort call\n\nReplace existing `Collections.sort(...)` calls with `.sort(...)`\ndirectly on the collection instance.\n\nSee gh-9781\n",
      "commitDate": "2017-07-25, 3:53 a.m.",
      "commitName": "4a189bdee7d1bd7fbdbd2593a8c9b8636a90bd39",
      "commitAuthor": "Emanuel Campolo",
      "commitDateOld": "2017-03-13, 12:08 a.m.",
      "commitNameOld": "67556ba8eaf22a352b03fe197a0c452f695835a6",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 134.16,
      "commitsBetweenForRepo": 1136,
      "commitsBetweenForFile": 1,
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tthis.registrars.sort(AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 76,
      "functionName": "getRegistrars",
      "diff": "@@ -1,10 +1,10 @@\n \tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n \t\tif (this.registrars \u003d\u003d null) {\n \t\t\t// Look up does not include the parent context\n \t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n \t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n-\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n+\t\t\tthis.registrars.sort(AnnotationAwareOrderComparator.INSTANCE);\n \t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n \t\t}\n \t\treturn this.registrars;\n \t}\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "67556ba8eaf22a352b03fe197a0c452f695835a6": {
      "type": "Yfilerename",
      "commitMessage": "Restructure embedded web server packages\n\nRework `org.springframework.boot.context.embedded` to relocate classes\nto `org.springframework.boot.web`. Packages are now organized around\nthe following areas:\n\nPackages for shared concerns, for example the `WebServer` interface\nto start/stop a server and the common configuration elements:\n- org.springframework.boot.web.context\n- org.springframework.boot.web.server\n\nServlet specific packages:\n- org.springframework.boot.web.servlet.server\n- org.springframework.boot.web.servlet.context\n- org.springframework.boot.web.servlet.filter\n\nReactive specific packages:\n- org.springframework.boot.web.reactive.context\n- org.springframework.boot.web.reactive.server\n\nEmbedded server implementations (both reactive and servlet):\n- org.springframework.boot.web.embedded\n\nIn addition:\n\n- Rename `EmbeddedServletContainerFactory` to `ServletWebServerFactory`\n  to align with the `ReactiveWebServerFactory`.\n- Rename `EmbeddedWebApplicationContext` to\n  `ServletWebServerApplicationContext` and\n- Rename `EmbeddedReactiveWebApplicationContext` to\n  `ReactiveWebServerApplicationContext`.\n- Add checkstyle rules to restrict imports.\n- Fixup all affected code to use the correct imports and local names.\n\nFixes gh-8532\n",
      "commitDate": "2017-03-13, 12:08 a.m.",
      "commitName": "67556ba8eaf22a352b03fe197a0c452f695835a6",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2017-03-12, 3:44 a.m.",
      "commitNameOld": "7b388e5865c82701f28fb1bf126f44a29b469798",
      "commitAuthorOld": "Stephane Nicoll",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 76,
      "functionName": "getRegistrars",
      "diff": "",
      "extendedDetails": {
        "oldPath": "spring-boot/src/main/java/org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor.java",
        "newPath": "spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java"
      }
    },
    "d8f827d2249696a346bc11adf4ccacf61eeb888d": {
      "type": "Ybodychange",
      "commitMessage": "Cleanup and format code\n",
      "commitDate": "2017-03-06, 8:08 p.m.",
      "commitName": "d8f827d2249696a346bc11adf4ccacf61eeb888d",
      "commitAuthor": "Phillip Webb",
      "commitDateOld": "2017-03-06, 2:43 p.m.",
      "commitNameOld": "f5aeac36582e43f8072f486835a86212358f7735",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 0.23,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 76,
      "functionName": "getRegistrars",
      "diff": "@@ -1,10 +1,10 @@\n \tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n \t\tif (this.registrars \u003d\u003d null) {\n \t\t\t// Look up does not include the parent context\n-\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.beanFactory\n+\t\t\tthis.registrars \u003d new ArrayList\u003c\u003e(this.beanFactory\n \t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n \t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n \t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n \t\t}\n \t\treturn this.registrars;\n \t}\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9fb9a67c4bc895ead0008db106145953d3b3b855": {
      "type": "Ybodychange",
      "commitMessage": "Avoid early initializations\n\nThis commit flags the two `BeanPostProcessors` registered by the\nembedded support as `synthetic` so that they don\u0027t trigger an early\ninitialization of other components.\n\nCloses gh-8467\n",
      "commitDate": "2017-03-06, 2:16 a.m.",
      "commitName": "9fb9a67c4bc895ead0008db106145953d3b3b855",
      "commitAuthor": "Stephane Nicoll",
      "commitDateOld": "2016-06-03, 7:20 a.m.",
      "commitNameOld": "5de95162550c39087396792e9bc41cb9af42843d",
      "commitAuthorOld": "Johnny Lim",
      "daysBetweenCommits": 275.83,
      "commitsBetweenForRepo": 1047,
      "commitsBetweenForFile": 1,
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.beanFactory\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 72,
      "functionName": "getRegistrars",
      "diff": "@@ -1,10 +1,10 @@\n \tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n \t\tif (this.registrars \u003d\u003d null) {\n \t\t\t// Look up does not include the parent context\n-\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.applicationContext\n+\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.beanFactory\n \t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n \t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n \t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n \t\t}\n \t\treturn this.registrars;\n \t}\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "08ef5f4b1feb1033a5053a8d5bf6c439f2cf2db0": {
      "type": "Yintroduced",
      "commitMessage": "Make ErrorPageRegistry first class concern\n\nCreate ErrorPageRegistry and ErrorPageRegistrar interfaces that allow\nerror page registration to be a first class concern.\n\nPrior to this commit ErrorPageFilter needed to implement\nConfigurableEmbeddedServletContainer in order to receive ErrorPage\nregistrations.\n\nCloses gh-5789\n",
      "commitDate": "2016-04-28, 3:45 p.m.",
      "commitName": "08ef5f4b1feb1033a5053a8d5bf6c439f2cf2db0",
      "commitAuthor": "Phillip Webb",
      "diff": "@@ -0,0 +1,10 @@\n+\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n+\t\tif (this.registrars \u003d\u003d null) {\n+\t\t\t// Look up does not include the parent context\n+\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.applicationContext\n+\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n+\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n+\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n+\t\t}\n+\t\treturn this.registrars;\n+\t}\n\\ No newline at end of file\n",
      "actualSource": "\tprivate Collection\u003cErrorPageRegistrar\u003e getRegistrars() {\n\t\tif (this.registrars \u003d\u003d null) {\n\t\t\t// Look up does not include the parent context\n\t\t\tthis.registrars \u003d new ArrayList\u003cErrorPageRegistrar\u003e(this.applicationContext\n\t\t\t\t\t.getBeansOfType(ErrorPageRegistrar.class, false, false).values());\n\t\t\tCollections.sort(this.registrars, AnnotationAwareOrderComparator.INSTANCE);\n\t\t\tthis.registrars \u003d Collections.unmodifiableList(this.registrars);\n\t\t}\n\t\treturn this.registrars;\n\t}",
      "path": "spring-boot/src/main/java/org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor.java",
      "functionStartLine": 71,
      "functionName": "getRegistrars"
    }
  }
}