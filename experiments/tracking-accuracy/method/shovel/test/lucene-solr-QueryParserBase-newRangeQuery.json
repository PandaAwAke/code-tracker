{
  "origin": "codeshovel",
  "repositoryName": "lucene-solr",
  "repositoryPath": "H:\\Projects\\apache\\lucene-solr/.git",
  "startCommitName": "38bf976cd4b9e324c21664bd7ae3d554df803705",
  "sourceFileName": "QueryParserBase.java",
  "functionName": "newRangeQuery",
  "functionId": "newRangeQuery___field-String__part1-String__part2-String__startInclusive-boolean__endInclusive-boolean",
  "sourceFilePath": "lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
  "functionStartLine": 608,
  "functionEndLine": 628,
  "numCommitsSeen": 151,
  "timeTaken": 3845,
  "changeHistory": [
    "e92a38af90d12e51390b4307ccbe0c24ac7b6b4e",
    "e8e4245d9b36123446546ff15967ac95429ea2b0",
    "098371446aaab89b978cba936e9012055c67ef64",
    "5f30bedccc3f8a2ed14df05e3207ef9ed56965b2",
    "308e0bd4a9d24ab613fb2b3e7a5e094452447917",
    "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9",
    "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b",
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec",
    "be66120dffb677ea4ce263282d6fd35956b84e78",
    "fed4bba63d724da192988fc7717a25da6832ff8b",
    "9d8c8823854df8aa798c0d1b0c6bf22f82f72d5b",
    "abe6ea0828bdc521f77bb07da3845186669d48d5",
    "a8c0a8a8107dc946335e18b6b21cae82d8fd777f",
    "1bbfaa54451f5654abd9c5976c865dae47d83cb4"
  ],
  "changeHistoryShort": {
    "e92a38af90d12e51390b4307ccbe0c24ac7b6b4e": "Ybodychange",
    "e8e4245d9b36123446546ff15967ac95429ea2b0": "Yfilerename",
    "098371446aaab89b978cba936e9012055c67ef64": "Ybodychange",
    "5f30bedccc3f8a2ed14df05e3207ef9ed56965b2": "Yfilerename",
    "308e0bd4a9d24ab613fb2b3e7a5e094452447917": "Ybodychange",
    "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9": "Ymultichange(Yparameterchange,Ybodychange)",
    "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b": "Ymovefromfile",
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec": "Yfilerename",
    "be66120dffb677ea4ce263282d6fd35956b84e78": "Ybodychange",
    "fed4bba63d724da192988fc7717a25da6832ff8b": "Ybodychange",
    "9d8c8823854df8aa798c0d1b0c6bf22f82f72d5b": "Ybodychange",
    "abe6ea0828bdc521f77bb07da3845186669d48d5": "Ybodychange",
    "a8c0a8a8107dc946335e18b6b21cae82d8fd777f": "Ybodychange",
    "1bbfaa54451f5654abd9c5976c865dae47d83cb4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e92a38af90d12e51390b4307ccbe0c24ac7b6b4e": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-7355: Add Analyzer#normalize() and use it in query parsers.\n",
      "commitDate": "2016-07-12, 10:33 a.m.",
      "commitName": "e92a38af90d12e51390b4307ccbe0c24ac7b6b4e",
      "commitAuthor": "Adrien Grand",
      "commitDateOld": "2016-07-05, 6:03 p.m.",
      "commitNameOld": "17d113dac1e6081a48144679234b00a556210160",
      "commitAuthorOld": "Steve Rowe",
      "daysBetweenCommits": 6.69,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final BytesRef start;\n    final BytesRef end;\n     \n    if (part1 \u003d\u003d null) {\n      start \u003d null;\n    } else {\n      start \u003d getAnalyzer().normalize(field, part1);\n    }\n     \n    if (part2 \u003d\u003d null) {\n      end \u003d null;\n    } else {\n      end \u003d getAnalyzer().normalize(field, part2);\n    }\n      \n    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
      "functionStartLine": 603,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,21 +1,21 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n     final BytesRef start;\n     final BytesRef end;\n      \n     if (part1 \u003d\u003d null) {\n       start \u003d null;\n     } else {\n-      start \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part1) : new BytesRef(part1);\n+      start \u003d getAnalyzer().normalize(field, part1);\n     }\n      \n     if (part2 \u003d\u003d null) {\n       end \u003d null;\n     } else {\n-      end \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part2) : new BytesRef(part2);\n+      end \u003d getAnalyzer().normalize(field, part2);\n     }\n       \n     final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n \n     query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e8e4245d9b36123446546ff15967ac95429ea2b0": {
      "type": "Yfilerename",
      "commitMessage": "LUCENE-3965: consolidate all api modules and fix packaging for 4.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1327094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012-04-17, 9:36 a.m.",
      "commitName": "e8e4245d9b36123446546ff15967ac95429ea2b0",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2012-04-17, 8:03 a.m.",
      "commitNameOld": "0daa4b0aac1748bbb2c56547626e9f49e7fb4ed6",
      "commitAuthorOld": "Sami Siren",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final BytesRef start;\n    final BytesRef end;\n     \n    if (part1 \u003d\u003d null) {\n      start \u003d null;\n    } else {\n      start \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part1) : new BytesRef(part1);\n    }\n     \n    if (part2 \u003d\u003d null) {\n      end \u003d null;\n    } else {\n      end \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part2) : new BytesRef(part2);\n    }\n      \n    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
      "functionStartLine": 829,
      "functionName": "newRangeQuery",
      "diff": "",
      "extendedDetails": {
        "oldPath": "modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
        "newPath": "lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java"
      }
    },
    "098371446aaab89b978cba936e9012055c67ef64": {
      "type": "Ybodychange",
      "commitMessage": "SOLR-2438, allow an analysis chain to be created for multiterm query terms or synthesize one if not defined explicitly\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1206229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011-11-25, 10:46 a.m.",
      "commitName": "098371446aaab89b978cba936e9012055c67ef64",
      "commitAuthor": "Erick Erickson",
      "commitDateOld": "2011-11-25, 7:50 a.m.",
      "commitNameOld": "3b6da22aa73a6f5df3bc95abfb56baafc193ce89",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final BytesRef start;\n    final BytesRef end;\n     \n    if (part1 \u003d\u003d null) {\n      start \u003d null;\n    } else {\n      start \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part1) : new BytesRef(part1);\n    }\n     \n    if (part2 \u003d\u003d null) {\n      end \u003d null;\n    } else {\n      end \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part2) : new BytesRef(part2);\n    }\n      \n    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
      "functionStartLine": 829,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,21 +1,21 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n     final BytesRef start;\n     final BytesRef end;\n      \n     if (part1 \u003d\u003d null) {\n       start \u003d null;\n     } else {\n-      start \u003d analyzeRangeTerms ? analyzeRangePart(field, part1) : new BytesRef(part1);\n+      start \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part1) : new BytesRef(part1);\n     }\n      \n     if (part2 \u003d\u003d null) {\n       end \u003d null;\n     } else {\n-      end \u003d analyzeRangeTerms ? analyzeRangePart(field, part2) : new BytesRef(part2);\n+      end \u003d analyzeRangeTerms ? analyzeMultitermTerm(field, part2) : new BytesRef(part2);\n     }\n       \n     final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n \n     query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5f30bedccc3f8a2ed14df05e3207ef9ed56965b2": {
      "type": "Yfilerename",
      "commitMessage": "LUCENE-3283: Moved core QueryParsers to queryparser module\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1145016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011-07-10, 11:37 p.m.",
      "commitName": "5f30bedccc3f8a2ed14df05e3207ef9ed56965b2",
      "commitAuthor": "Christopher John Male",
      "commitDateOld": "2011-07-10, 9:11 p.m.",
      "commitNameOld": "ef25bf2d31a5e462ad6a752919481e2a7d1e2bd2",
      "commitAuthorOld": "Steven Rowe",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final BytesRef start;\n    final BytesRef end;\n     \n    if (part1 \u003d\u003d null) {\n      start \u003d null;\n    } else {\n      start \u003d analyzeRangeTerms ? analyzeRangePart(field, part1) : new BytesRef(part1);\n    }\n     \n    if (part2 \u003d\u003d null) {\n      end \u003d null;\n    } else {\n      end \u003d analyzeRangeTerms ? analyzeRangePart(field, part2) : new BytesRef(part2);\n    }\n      \n    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java",
      "functionStartLine": 825,
      "functionName": "newRangeQuery",
      "diff": "",
      "extendedDetails": {
        "oldPath": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
        "newPath": "modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase.java"
      }
    },
    "308e0bd4a9d24ab613fb2b3e7a5e094452447917": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-2514, LUCENE-2551: collation uses byte[] keys, deprecate old unscalable locale sort/range, termrangequery/filter work on bytes\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1075210 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2011-02-28, 12:15 a.m.",
      "commitName": "308e0bd4a9d24ab613fb2b3e7a5e094452447917",
      "commitAuthor": "Robert Muir",
      "commitDateOld": "2011-02-11, 5:51 p.m.",
      "commitNameOld": "4953202fbade58e6a8a1c78b47e5ccd23ea973da",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 16.27,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final BytesRef start;\n    final BytesRef end;\n     \n    if (part1 \u003d\u003d null) {\n      start \u003d null;\n    } else {\n      start \u003d analyzeRangeTerms ? analyzeRangePart(field, part1) : new BytesRef(part1);\n    }\n     \n    if (part2 \u003d\u003d null) {\n      end \u003d null;\n    } else {\n      end \u003d analyzeRangeTerms ? analyzeRangePart(field, part2) : new BytesRef(part2);\n    }\n      \n    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
      "functionStartLine": 828,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,5 +1,21 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n-    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, startInclusive, endInclusive, rangeCollator);\n+    final BytesRef start;\n+    final BytesRef end;\n+     \n+    if (part1 \u003d\u003d null) {\n+      start \u003d null;\n+    } else {\n+      start \u003d analyzeRangeTerms ? analyzeRangePart(field, part1) : new BytesRef(part1);\n+    }\n+     \n+    if (part2 \u003d\u003d null) {\n+      end \u003d null;\n+    } else {\n+      end \u003d analyzeRangeTerms ? analyzeRangePart(field, part2) : new BytesRef(part2);\n+    }\n+      \n+    final TermRangeQuery query \u003d new TermRangeQuery(field, start, end, startInclusive, endInclusive);\n+\n     query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "LUCENE-996: QP: mixed inclusive/exclusive endpoints for ranges\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1026489 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010-10-22, 4:40 p.m.",
      "commitName": "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9",
      "commitAuthor": "Yonik Seeley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "LUCENE-996: QP: mixed inclusive/exclusive endpoints for ranges\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1026489 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-10-22, 4:40 p.m.",
          "commitName": "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "2010-10-22, 10:04 a.m.",
          "commitNameOld": "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b",
          "commitAuthorOld": "Yonik Seeley",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, startInclusive, endInclusive, rangeCollator);\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
          "path": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
          "functionStartLine": 842,
          "functionName": "newRangeQuery",
          "diff": "@@ -1,5 +1,5 @@\n-  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n-    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n+    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, startInclusive, endInclusive, rangeCollator);\n     query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[field-String, part1-String, part2-String, inclusive-boolean]",
            "newValue": "[field-String, part1-String, part2-String, startInclusive-boolean, endInclusive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "LUCENE-996: QP: mixed inclusive/exclusive endpoints for ranges\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1026489 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-10-22, 4:40 p.m.",
          "commitName": "c8c9ee2cb20c1497a28ae1adb80dcc57a1fa5ac9",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "2010-10-22, 10:04 a.m.",
          "commitNameOld": "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b",
          "commitAuthorOld": "Yonik Seeley",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, startInclusive, endInclusive, rangeCollator);\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
          "path": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
          "functionStartLine": 842,
          "functionName": "newRangeQuery",
          "diff": "@@ -1,5 +1,5 @@\n-  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n-    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+  protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive) {\n+    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, startInclusive, endInclusive, rangeCollator);\n     query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b": {
      "type": "Ymovefromfile",
      "commitMessage": "LUCENE-2718: pull java code out of the QP .jj\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1026331 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010-10-22, 10:04 a.m.",
      "commitName": "8b4c80f04b4255b6f1f7309ffb01ccbea6db029b",
      "commitAuthor": "Yonik Seeley",
      "commitDateOld": "2010-10-22, 9:31 a.m.",
      "commitNameOld": "e999b25d05c8fa7403d8c9e48fb042e087f6b95e",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
      "functionStartLine": 829,
      "functionName": "newRangeQuery",
      "diff": "",
      "extendedDetails": {
        "oldPath": "lucene/src/java/org/apache/lucene/queryParser/QueryParser.java",
        "newPath": "lucene/src/java/org/apache/lucene/queryParser/QueryParserBase.java",
        "oldMethodName": "newRangeQuery",
        "newMethodName": "newRangeQuery"
      }
    },
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec": {
      "type": "Yfilerename",
      "commitMessage": "SVN-GIT conversion, path copy emulation.\n",
      "commitDate": "2016-01-22, 7:18 p.m.",
      "commitName": "778d96752fa94636a2136ea2b4d58a3fcbe283ec",
      "commitAuthor": "Dawid Weiss",
      "commitDateOld": "2010-03-17, 10:57 a.m.",
      "commitNameOld": "2e5c6cdadc820220f8cb86e1b6e215da941649f9",
      "commitAuthorOld": "Uwe Schindler",
      "daysBetweenCommits": 2137.39,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "lucene/src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 827,
      "functionName": "newRangeQuery",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/lucene/queryParser/QueryParser.java",
        "newPath": "lucene/src/java/org/apache/lucene/queryParser/QueryParser.java"
      }
    },
    "be66120dffb677ea4ce263282d6fd35956b84e78": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1644: enable different rewrite methods for MultiTermQuery\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@797694 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2009-07-24, 8:03 p.m.",
      "commitName": "be66120dffb677ea4ce263282d6fd35956b84e78",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2009-07-24, 5:45 p.m.",
      "commitNameOld": "31a5f0edcc474f739e8392eac7261b9483fc60bf",
      "commitAuthorOld": "Michael Busch",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    query.setRewriteMethod(multiTermRewriteMethod);\n    return query;\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 841,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,5 +1,5 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n     final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n-    query.setConstantScoreRewrite(constantScoreRewrite);\n+    query.setRewriteMethod(multiTermRewriteMethod);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fed4bba63d724da192988fc7717a25da6832ff8b": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1713: Rename RangeQuery -\u003e TermRangeQuery (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@791175 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2009-07-04, 4:14 p.m.",
      "commitName": "fed4bba63d724da192988fc7717a25da6832ff8b",
      "commitAuthor": "Uwe Schindler",
      "commitDateOld": "2009-06-23, 3:55 p.m.",
      "commitNameOld": "434da775592baec725b8cdc239fc97502723f921",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 11.01,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    query.setConstantScoreRewrite(constantScoreRewrite);\n    return query;\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 886,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,12 +1,5 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n-    RangeQuery query;\n-\n-    if (constantScoreRewrite) {\n-      // TODO: remove in Lucene 3.0\n-      query \u003d new ConstantScoreRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n-    } else {\n-      query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n-    }\n+    final TermRangeQuery query \u003d new TermRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n     query.setConstantScoreRewrite(constantScoreRewrite);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9d8c8823854df8aa798c0d1b0c6bf22f82f72d5b": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1424: Changed QueryParser#newRangeQuery() to return a ConstantScoreRangeQuery to make backwards-compatibility tests pass again; this does not change any behavior since ConstantScoreRangeQuery subclasses RangeQuery\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@713225 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2008-11-11, 7:01 p.m.",
      "commitName": "9d8c8823854df8aa798c0d1b0c6bf22f82f72d5b",
      "commitAuthor": "Michael Busch",
      "commitDateOld": "2008-11-10, 7:40 p.m.",
      "commitNameOld": "abe6ea0828bdc521f77bb07da3845186669d48d5",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    RangeQuery query;\n\n    if (constantScoreRewrite) {\n      // TODO: remove in Lucene 3.0\n      query \u003d new ConstantScoreRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    } else {\n      query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    }\n    query.setConstantScoreRewrite(constantScoreRewrite);\n    return query;\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 756,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,5 +1,12 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n-    RangeQuery query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+    RangeQuery query;\n+\n+    if (constantScoreRewrite) {\n+      // TODO: remove in Lucene 3.0\n+      query \u003d new ConstantScoreRangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+    } else {\n+      query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+    }\n     query.setConstantScoreRewrite(constantScoreRewrite);\n     return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "abe6ea0828bdc521f77bb07da3845186669d48d5": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1424: enable MultiTermQuery to do constant scoring; refactor Range, Wildcard, Prefix to expose this\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@712890 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2008-11-10, 7:40 p.m.",
      "commitName": "abe6ea0828bdc521f77bb07da3845186669d48d5",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2008-09-16, 5:03 p.m.",
      "commitNameOld": "a8c0a8a8107dc946335e18b6b21cae82d8fd777f",
      "commitAuthorOld": "Grant Ingersoll",
      "daysBetweenCommits": 55.15,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    RangeQuery query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n    query.setConstantScoreRewrite(constantScoreRewrite);\n    return query;\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 755,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,13 +1,5 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n-    if(useOldRangeQuery)\n-    {\n-      return new RangeQuery(new Term(field, part1),\n-                            new Term(field, part2),\n-                            inclusive, rangeCollator);\n-    }\n-    else\n-    {\n-      return new ConstantScoreRangeQuery\n-        (field, part1, part2, inclusive, inclusive, rangeCollator);\n-    }\n+    RangeQuery query \u003d new RangeQuery(field, part1, part2, inclusive, inclusive, rangeCollator);\n+    query.setConstantScoreRewrite(constantScoreRewrite);\n+    return query;\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a8c0a8a8107dc946335e18b6b21cae82d8fd777f": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1279: Add support for Collator to RangeFilter, etc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@696056 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2008-09-16, 5:03 p.m.",
      "commitName": "a8c0a8a8107dc946335e18b6b21cae82d8fd777f",
      "commitAuthor": "Grant Ingersoll",
      "commitDateOld": "2008-09-15, 11:42 a.m.",
      "commitNameOld": "0195fcd03d48424a840254063e74e94a3ba951b7",
      "commitAuthorOld": "Otis Gospodnetic",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    if(useOldRangeQuery)\n    {\n      return new RangeQuery(new Term(field, part1),\n                            new Term(field, part2),\n                            inclusive, rangeCollator);\n    }\n    else\n    {\n      return new ConstantScoreRangeQuery\n        (field, part1, part2, inclusive, inclusive, rangeCollator);\n    }\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 743,
      "functionName": "newRangeQuery",
      "diff": "@@ -1,12 +1,13 @@\n   protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n     if(useOldRangeQuery)\n     {\n       return new RangeQuery(new Term(field, part1),\n                             new Term(field, part2),\n-                            inclusive);\n+                            inclusive, rangeCollator);\n     }\n     else\n     {\n-      return new ConstantScoreRangeQuery(field,part1,part2,inclusive,inclusive);\n+      return new ConstantScoreRangeQuery\n+        (field, part1, part2, inclusive, inclusive, rangeCollator);\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1bbfaa54451f5654abd9c5976c865dae47d83cb4": {
      "type": "Yintroduced",
      "commitMessage": "LUCENE-1061: make it simpler to override concrete Query implementations created by QueryParser by factoring out protected newXXXQuery() methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@690535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2008-08-30, 1:12 p.m.",
      "commitName": "1bbfaa54451f5654abd9c5976c865dae47d83cb4",
      "commitAuthor": "Michael McCandless",
      "diff": "@@ -0,0 +1,12 @@\n+  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n+    if(useOldRangeQuery)\n+    {\n+      return new RangeQuery(new Term(field, part1),\n+                            new Term(field, part2),\n+                            inclusive);\n+    }\n+    else\n+    {\n+      return new ConstantScoreRangeQuery(field,part1,part2,inclusive,inclusive);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Query newRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    if(useOldRangeQuery)\n    {\n      return new RangeQuery(new Term(field, part1),\n                            new Term(field, part2),\n                            inclusive);\n    }\n    else\n    {\n      return new ConstantScoreRangeQuery(field,part1,part2,inclusive,inclusive);\n    }\n  }",
      "path": "src/java/org/apache/lucene/queryParser/QueryParser.java",
      "functionStartLine": 706,
      "functionName": "newRangeQuery"
    }
  }
}