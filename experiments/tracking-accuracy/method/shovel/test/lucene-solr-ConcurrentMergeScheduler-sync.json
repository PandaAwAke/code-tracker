{
  "origin": "codeshovel",
  "repositoryName": "lucene-solr",
  "repositoryPath": "H:\\Projects\\apache\\lucene-solr/.git",
  "startCommitName": "38bf976cd4b9e324c21664bd7ae3d554df803705",
  "sourceFileName": "ConcurrentMergeScheduler.java",
  "functionName": "sync",
  "functionId": "sync",
  "sourceFilePath": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
  "functionStartLine": 447,
  "functionEndLine": 477,
  "numCommitsSeen": 86,
  "timeTaken": 4441,
  "changeHistory": [
    "926397824e9fd4b7f480cff547a73aad3c056974",
    "22a8a7cde9f2cf57dcd76682587ae468159b5f3b",
    "eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c",
    "765eab4008f44bb655b3dbbe4cc625455711536b",
    "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
    "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec",
    "4422d07e8af26689620bc5fda245aa6c74d6c9c7",
    "a5df94c249f436b094b914939179ed3ad7b66003",
    "7aa012ca2712cf8204b2b06b58e14e5ac6440f53",
    "19c82a230d9668de85a82186d5e7a27a3c1d2fed",
    "38bbbb51de8920d36f5adecaac69903f79c8c5d3",
    "3b6b76593900f714a299928c8a324593ecbfc8df",
    "299d6357dd296f87a099fadd0764292b28dbde47"
  ],
  "changeHistoryShort": {
    "926397824e9fd4b7f480cff547a73aad3c056974": "Ybodychange",
    "22a8a7cde9f2cf57dcd76682587ae468159b5f3b": "Ybodychange",
    "eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c": "Yfilerename",
    "765eab4008f44bb655b3dbbe4cc625455711536b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "65b27c2adb9000b64ccd9d3a3b1a5030550b06da": "Ymultichange(Ymodifierchange,Ybodychange)",
    "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80": "Ymultichange(Ymodifierchange,Ybodychange)",
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec": "Yfilerename",
    "4422d07e8af26689620bc5fda245aa6c74d6c9c7": "Ybodychange",
    "a5df94c249f436b094b914939179ed3ad7b66003": "Ybodychange",
    "7aa012ca2712cf8204b2b06b58e14e5ac6440f53": "Ybodychange",
    "19c82a230d9668de85a82186d5e7a27a3c1d2fed": "Ybodychange",
    "38bbbb51de8920d36f5adecaac69903f79c8c5d3": "Ybodychange",
    "3b6b76593900f714a299928c8a324593ecbfc8df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "299d6357dd296f87a099fadd0764292b28dbde47": "Yintroduced"
  },
  "changeHistoryDetails": {
    "926397824e9fd4b7f480cff547a73aad3c056974": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-6579: exceptions during merging are now tragic\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1690886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2015-07-14, 5:38 a.m.",
      "commitName": "926397824e9fd4b7f480cff547a73aad3c056974",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2015-06-11, 6:02 p.m.",
      "commitNameOld": "f68abe9378dca7a5e925271aaee6e27638aec5a0",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 32.48,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "actualSource": "  public void sync() {\n    boolean interrupted \u003d false;\n    try {\n      while (true) {\n        MergeThread toSync \u003d null;\n        synchronized (this) {\n          for (MergeThread t : mergeThreads) {\n            // In case a merge thread is calling us, don\u0027t try to sync on\n            // itself, since that will never finish!\n            if (t.isAlive() \u0026\u0026 t !\u003d Thread.currentThread()) {\n              toSync \u003d t;\n              break;\n            }\n          }\n        }\n        if (toSync !\u003d null) {\n          try {\n            toSync.join();\n          } catch (InterruptedException ie) {\n            // ignore this Exception, we will retry until all threads are dead\n            interrupted \u003d true;\n          }\n        } else {\n          break;\n        }\n      }\n    } finally {\n      // finally, restore interrupt status:\n      if (interrupted) Thread.currentThread().interrupt();\n    }\n  }",
      "path": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 410,
      "functionName": "sync",
      "diff": "@@ -1,29 +1,31 @@\n   public void sync() {\n     boolean interrupted \u003d false;\n     try {\n       while (true) {\n         MergeThread toSync \u003d null;\n         synchronized (this) {\n           for (MergeThread t : mergeThreads) {\n-            if (t.isAlive()) {\n+            // In case a merge thread is calling us, don\u0027t try to sync on\n+            // itself, since that will never finish!\n+            if (t.isAlive() \u0026\u0026 t !\u003d Thread.currentThread()) {\n               toSync \u003d t;\n               break;\n             }\n           }\n         }\n         if (toSync !\u003d null) {\n           try {\n             toSync.join();\n           } catch (InterruptedException ie) {\n             // ignore this Exception, we will retry until all threads are dead\n             interrupted \u003d true;\n           }\n         } else {\n           break;\n         }\n       }\n     } finally {\n       // finally, restore interrupt status:\n       if (interrupted) Thread.currentThread().interrupt();\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "22a8a7cde9f2cf57dcd76682587ae468159b5f3b": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-4245: Make IndexWriter#close() and MergeScheduler#close() non-interruptible\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1364896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012-07-24, 1:26 a.m.",
      "commitName": "22a8a7cde9f2cf57dcd76682587ae468159b5f3b",
      "commitAuthor": "Uwe Schindler",
      "commitDateOld": "2012-06-28, 12:39 p.m.",
      "commitNameOld": "fd16190940d7495e985f44ce7504562c8bbc91e6",
      "commitAuthorOld": "Steven Rowe",
      "daysBetweenCommits": 25.53,
      "commitsBetweenForRepo": 278,
      "commitsBetweenForFile": 1,
      "actualSource": "  public void sync() {\n    boolean interrupted \u003d false;\n    try {\n      while (true) {\n        MergeThread toSync \u003d null;\n        synchronized (this) {\n          for (MergeThread t : mergeThreads) {\n            if (t.isAlive()) {\n              toSync \u003d t;\n              break;\n            }\n          }\n        }\n        if (toSync !\u003d null) {\n          try {\n            toSync.join();\n          } catch (InterruptedException ie) {\n            // ignore this Exception, we will retry until all threads are dead\n            interrupted \u003d true;\n          }\n        } else {\n          break;\n        }\n      }\n    } finally {\n      // finally, restore interrupt status:\n      if (interrupted) Thread.currentThread().interrupt();\n    }\n  }",
      "path": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 247,
      "functionName": "sync",
      "diff": "@@ -1,22 +1,29 @@\n   public void sync() {\n-    while (true) {\n-      MergeThread toSync \u003d null;\n-      synchronized (this) {\n-        for (MergeThread t : mergeThreads) {\n-          if (t.isAlive()) {\n-            toSync \u003d t;\n-            break;\n+    boolean interrupted \u003d false;\n+    try {\n+      while (true) {\n+        MergeThread toSync \u003d null;\n+        synchronized (this) {\n+          for (MergeThread t : mergeThreads) {\n+            if (t.isAlive()) {\n+              toSync \u003d t;\n+              break;\n+            }\n           }\n         }\n-      }\n-      if (toSync !\u003d null) {\n-        try {\n-          toSync.join();\n-        } catch (InterruptedException ie) {\n-          throw new ThreadInterruptedException(ie);\n+        if (toSync !\u003d null) {\n+          try {\n+            toSync.join();\n+          } catch (InterruptedException ie) {\n+            // ignore this Exception, we will retry until all threads are dead\n+            interrupted \u003d true;\n+          }\n+        } else {\n+          break;\n         }\n-      } else {\n-        break;\n       }\n+    } finally {\n+      // finally, restore interrupt status:\n+      if (interrupted) Thread.currentThread().interrupt();\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c": {
      "type": "Yfilerename",
      "commitMessage": "LUCENE-3753: Restructure the Lucene build system\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1241588 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2012-02-07, 2:59 p.m.",
      "commitName": "eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c",
      "commitAuthor": "Steven Rowe",
      "commitDateOld": "2012-02-07, 1:58 p.m.",
      "commitNameOld": "8b939cb7d20160f9f8a7baf2030613f0e1e877b4",
      "commitAuthorOld": "Robert Muir",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  public void sync() {\n    while (true) {\n      MergeThread toSync \u003d null;\n      synchronized (this) {\n        for (MergeThread t : mergeThreads) {\n          if (t.isAlive()) {\n            toSync \u003d t;\n            break;\n          }\n        }\n      }\n      if (toSync !\u003d null) {\n        try {\n          toSync.join();\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      } else {\n        break;\n      }\n    }\n  }",
      "path": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 247,
      "functionName": "sync",
      "diff": "",
      "extendedDetails": {
        "oldPath": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
        "newPath": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java"
      }
    },
    "765eab4008f44bb655b3dbbe4cc625455711536b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "LUCENE-2820: fix CMS to stop its threads without deadlocking!\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1051041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010-12-20, 5:35 a.m.",
      "commitName": "765eab4008f44bb655b3dbbe4cc625455711536b",
      "commitAuthor": "Michael McCandless",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "LUCENE-2820: fix CMS to stop its threads without deadlocking!\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1051041 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-20, 5:35 a.m.",
          "commitName": "765eab4008f44bb655b3dbbe4cc625455711536b",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-19, 12:07 p.m.",
          "commitNameOld": "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 0.73,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "  public void sync() {\n    while(true) {\n      MergeThread toSync \u003d null;\n      synchronized(this) {\n        for(MergeThread t : mergeThreads) {\n          if (t.isAlive()) {\n            toSync \u003d t;\n            break;\n          }\n        }\n      }\n      if (toSync !\u003d null) {\n        try {\n          toSync.join();\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      } else {\n        break;\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 233,
          "functionName": "sync",
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void sync() {\n-    while(mergeThreadCount() \u003e 0) {\n-      if (verbose())\n-        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n-      final int count \u003d mergeThreads.size();\n-      if (verbose()) {\n-        for(int i\u003d0;i\u003ccount;i++)\n-          message(\"    \" + i + \": \" + mergeThreads.get(i));\n+  public void sync() {\n+    while(true) {\n+      MergeThread toSync \u003d null;\n+      synchronized(this) {\n+        for(MergeThread t : mergeThreads) {\n+          if (t.isAlive()) {\n+            toSync \u003d t;\n+            break;\n+          }\n+        }\n       }\n-      \n-      try {\n-        wait();\n-      } catch (InterruptedException ie) {\n-        throw new ThreadInterruptedException(ie);\n+      if (toSync !\u003d null) {\n+        try {\n+          toSync.join();\n+        } catch (InterruptedException ie) {\n+          throw new ThreadInterruptedException(ie);\n+        }\n+      } else {\n+        break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "LUCENE-2820: fix CMS to stop its threads without deadlocking!\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1051041 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-20, 5:35 a.m.",
          "commitName": "765eab4008f44bb655b3dbbe4cc625455711536b",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-19, 12:07 p.m.",
          "commitNameOld": "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 0.73,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "  public void sync() {\n    while(true) {\n      MergeThread toSync \u003d null;\n      synchronized(this) {\n        for(MergeThread t : mergeThreads) {\n          if (t.isAlive()) {\n            toSync \u003d t;\n            break;\n          }\n        }\n      }\n      if (toSync !\u003d null) {\n        try {\n          toSync.join();\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      } else {\n        break;\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 233,
          "functionName": "sync",
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void sync() {\n-    while(mergeThreadCount() \u003e 0) {\n-      if (verbose())\n-        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n-      final int count \u003d mergeThreads.size();\n-      if (verbose()) {\n-        for(int i\u003d0;i\u003ccount;i++)\n-          message(\"    \" + i + \": \" + mergeThreads.get(i));\n+  public void sync() {\n+    while(true) {\n+      MergeThread toSync \u003d null;\n+      synchronized(this) {\n+        for(MergeThread t : mergeThreads) {\n+          if (t.isAlive()) {\n+            toSync \u003d t;\n+            break;\n+          }\n+        }\n       }\n-      \n-      try {\n-        wait();\n-      } catch (InterruptedException ie) {\n-        throw new ThreadInterruptedException(ie);\n+      if (toSync !\u003d null) {\n+        try {\n+          toSync.join();\n+        } catch (InterruptedException ie) {\n+          throw new ThreadInterruptedException(ie);\n+        }\n+      } else {\n+        break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "65b27c2adb9000b64ccd9d3a3b1a5030550b06da": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "LUCENE-2820: revert until I find the cause of the deadlock\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010-12-19, 12:07 p.m.",
      "commitName": "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
      "commitAuthor": "Michael McCandless",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "LUCENE-2820: revert until I find the cause of the deadlock\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-19, 12:07 p.m.",
          "commitName": "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-19, 8:57 a.m.",
          "commitNameOld": "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + mergeThreads.get(i));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 214,
          "functionName": "sync",
          "diff": "@@ -1,22 +1,17 @@\n-  public void sync() {\n-    while(true) {\n-      MergeThread toSync \u003d null;\n-      synchronized(this) {\n-        for(MergeThread t : mergeThreads) {\n-          if (t.isAlive()) {\n-            toSync \u003d t;\n-            break;\n-          }\n-        }\n+  public synchronized void sync() {\n+    while(mergeThreadCount() \u003e 0) {\n+      if (verbose())\n+        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+      final int count \u003d mergeThreads.size();\n+      if (verbose()) {\n+        for(int i\u003d0;i\u003ccount;i++)\n+          message(\"    \" + i + \": \" + mergeThreads.get(i));\n       }\n-      if (toSync !\u003d null) {\n-        try {\n-          toSync.join();\n-        } catch (InterruptedException ie) {\n-          throw new ThreadInterruptedException(ie);\n-        }\n-      } else {\n-        break;\n+      \n+      try {\n+        wait();\n+      } catch (InterruptedException ie) {\n+        throw new ThreadInterruptedException(ie);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "LUCENE-2820: revert until I find the cause of the deadlock\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-19, 12:07 p.m.",
          "commitName": "65b27c2adb9000b64ccd9d3a3b1a5030550b06da",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-19, 8:57 a.m.",
          "commitNameOld": "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + mergeThreads.get(i));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 214,
          "functionName": "sync",
          "diff": "@@ -1,22 +1,17 @@\n-  public void sync() {\n-    while(true) {\n-      MergeThread toSync \u003d null;\n-      synchronized(this) {\n-        for(MergeThread t : mergeThreads) {\n-          if (t.isAlive()) {\n-            toSync \u003d t;\n-            break;\n-          }\n-        }\n+  public synchronized void sync() {\n+    while(mergeThreadCount() \u003e 0) {\n+      if (verbose())\n+        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+      final int count \u003d mergeThreads.size();\n+      if (verbose()) {\n+        for(int i\u003d0;i\u003ccount;i++)\n+          message(\"    \" + i + \": \" + mergeThreads.get(i));\n       }\n-      if (toSync !\u003d null) {\n-        try {\n-          toSync.join();\n-        } catch (InterruptedException ie) {\n-          throw new ThreadInterruptedException(ie);\n-        }\n-      } else {\n-        break;\n+      \n+      try {\n+        wait();\n+      } catch (InterruptedException ie) {\n+        throw new ThreadInterruptedException(ie);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "LUCENE-2820: fix CMS to stop all threads during close\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2010-12-19, 8:57 a.m.",
      "commitName": "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
      "commitAuthor": "Michael McCandless",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "LUCENE-2820: fix CMS to stop all threads during close\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050853 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-19, 8:57 a.m.",
          "commitName": "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-18, 2:14 p.m.",
          "commitNameOld": "623fd7bcd7470d5d5330d721ea89269ce93c02e5",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "  public void sync() {\n    while(true) {\n      MergeThread toSync \u003d null;\n      synchronized(this) {\n        for(MergeThread t : mergeThreads) {\n          if (t.isAlive()) {\n            toSync \u003d t;\n            break;\n          }\n        }\n      }\n      if (toSync !\u003d null) {\n        try {\n          toSync.join();\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      } else {\n        break;\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 233,
          "functionName": "sync",
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void sync() {\n-    while(mergeThreadCount() \u003e 0) {\n-      if (verbose())\n-        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n-      final int count \u003d mergeThreads.size();\n-      if (verbose()) {\n-        for(int i\u003d0;i\u003ccount;i++)\n-          message(\"    \" + i + \": \" + mergeThreads.get(i));\n+  public void sync() {\n+    while(true) {\n+      MergeThread toSync \u003d null;\n+      synchronized(this) {\n+        for(MergeThread t : mergeThreads) {\n+          if (t.isAlive()) {\n+            toSync \u003d t;\n+            break;\n+          }\n+        }\n       }\n-      \n-      try {\n-        wait();\n-      } catch (InterruptedException ie) {\n-        throw new ThreadInterruptedException(ie);\n+      if (toSync !\u003d null) {\n+        try {\n+          toSync.join();\n+        } catch (InterruptedException ie) {\n+          throw new ThreadInterruptedException(ie);\n+        }\n+      } else {\n+        break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "LUCENE-2820: fix CMS to stop all threads during close\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1050853 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2010-12-19, 8:57 a.m.",
          "commitName": "5f9bb3f0a860097352abfc5b4c2ac7d486c06c80",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2010-12-18, 2:14 p.m.",
          "commitNameOld": "623fd7bcd7470d5d5330d721ea89269ce93c02e5",
          "commitAuthorOld": "Robert Muir",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "  public void sync() {\n    while(true) {\n      MergeThread toSync \u003d null;\n      synchronized(this) {\n        for(MergeThread t : mergeThreads) {\n          if (t.isAlive()) {\n            toSync \u003d t;\n            break;\n          }\n        }\n      }\n      if (toSync !\u003d null) {\n        try {\n          toSync.join();\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      } else {\n        break;\n      }\n    }\n  }",
          "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 233,
          "functionName": "sync",
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void sync() {\n-    while(mergeThreadCount() \u003e 0) {\n-      if (verbose())\n-        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n-      final int count \u003d mergeThreads.size();\n-      if (verbose()) {\n-        for(int i\u003d0;i\u003ccount;i++)\n-          message(\"    \" + i + \": \" + mergeThreads.get(i));\n+  public void sync() {\n+    while(true) {\n+      MergeThread toSync \u003d null;\n+      synchronized(this) {\n+        for(MergeThread t : mergeThreads) {\n+          if (t.isAlive()) {\n+            toSync \u003d t;\n+            break;\n+          }\n+        }\n       }\n-      \n-      try {\n-        wait();\n-      } catch (InterruptedException ie) {\n-        throw new ThreadInterruptedException(ie);\n+      if (toSync !\u003d null) {\n+        try {\n+          toSync.join();\n+        } catch (InterruptedException ie) {\n+          throw new ThreadInterruptedException(ie);\n+        }\n+      } else {\n+        break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "778d96752fa94636a2136ea2b4d58a3fcbe283ec": {
      "type": "Yfilerename",
      "commitMessage": "SVN-GIT conversion, path copy emulation.\n",
      "commitDate": "2016-01-22, 7:18 p.m.",
      "commitName": "778d96752fa94636a2136ea2b4d58a3fcbe283ec",
      "commitAuthor": "Dawid Weiss",
      "commitDateOld": "2010-03-17, 10:57 a.m.",
      "commitNameOld": "2e5c6cdadc820220f8cb86e1b6e215da941649f9",
      "commitAuthorOld": "Uwe Schindler",
      "daysBetweenCommits": 2137.39,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + mergeThreads.get(i));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n  }",
      "path": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 221,
      "functionName": "sync",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
        "newPath": "lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java"
      }
    },
    "4422d07e8af26689620bc5fda245aa6c74d6c9c7": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-2053: throw ThreadInterruptedException when the thread is interrupt()d\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@836158 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2009-11-14, 6:33 a.m.",
      "commitName": "4422d07e8af26689620bc5fda245aa6c74d6c9c7",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2009-11-14, 6:22 a.m.",
      "commitNameOld": "0a82d99eff6eeb16baf01e7c35a6fceb98ab975f",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + mergeThreads.get(i));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 121,
      "functionName": "sync",
      "diff": "@@ -1,20 +1,17 @@\n   public synchronized void sync() {\n     while(mergeThreadCount() \u003e 0) {\n       if (verbose())\n         message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n       final int count \u003d mergeThreads.size();\n       if (verbose()) {\n         for(int i\u003d0;i\u003ccount;i++)\n           message(\"    \" + i + \": \" + mergeThreads.get(i));\n       }\n       \n       try {\n         wait();\n       } catch (InterruptedException ie) {\n-        // In 3.0 we will change this to throw\n-        // InterruptedException instead\n-        Thread.currentThread().interrupt();\n-        throw new RuntimeException(ie);\n+        throw new ThreadInterruptedException(ie);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a5df94c249f436b094b914939179ed3ad7b66003": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1257: More Java5 updates\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@829013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2009-10-23, 7:54 a.m.",
      "commitName": "a5df94c249f436b094b914939179ed3ad7b66003",
      "commitAuthor": "Uwe Schindler",
      "commitDateOld": "2009-10-17, 3:15 p.m.",
      "commitNameOld": "b22932be70380aaa85eb436c96b5908c0276618f",
      "commitAuthorOld": "Uwe Schindler",
      "daysBetweenCommits": 5.69,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + mergeThreads.get(i));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        // In 3.0 we will change this to throw\n        // InterruptedException instead\n        Thread.currentThread().interrupt();\n        throw new RuntimeException(ie);\n      }\n    }\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 119,
      "functionName": "sync",
      "diff": "@@ -1,20 +1,20 @@\n   public synchronized void sync() {\n     while(mergeThreadCount() \u003e 0) {\n       if (verbose())\n         message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n       final int count \u003d mergeThreads.size();\n       if (verbose()) {\n         for(int i\u003d0;i\u003ccount;i++)\n-          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n+          message(\"    \" + i + \": \" + mergeThreads.get(i));\n       }\n       \n       try {\n         wait();\n       } catch (InterruptedException ie) {\n         // In 3.0 we will change this to throw\n         // InterruptedException instead\n         Thread.currentThread().interrupt();\n         throw new RuntimeException(ie);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7aa012ca2712cf8204b2b06b58e14e5ac6440f53": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1573: don\u0027t ignore, or enter spinloop, when Thread.interrupt() is called\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@759556 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2009-03-28, 3:10 p.m.",
      "commitName": "7aa012ca2712cf8204b2b06b58e14e5ac6440f53",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2009-03-05, 4:54 a.m.",
      "commitNameOld": "ebb8c8ec3d5fd370ef96771f0cfa7d6ff09db112",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 23.39,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        // In 3.0 we will change this to throw\n        // InterruptedException instead\n        Thread.currentThread().interrupt();\n        throw new RuntimeException(ie);\n      }\n    }\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 120,
      "functionName": "sync",
      "diff": "@@ -1,16 +1,20 @@\n   public synchronized void sync() {\n     while(mergeThreadCount() \u003e 0) {\n       if (verbose())\n         message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n       final int count \u003d mergeThreads.size();\n       if (verbose()) {\n         for(int i\u003d0;i\u003ccount;i++)\n           message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n       }\n       \n       try {\n         wait();\n-      } catch (InterruptedException e) {\n+      } catch (InterruptedException ie) {\n+        // In 3.0 we will change this to throw\n+        // InterruptedException instead\n+        Thread.currentThread().interrupt();\n+        throw new RuntimeException(ie);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "19c82a230d9668de85a82186d5e7a27a3c1d2fed": {
      "type": "Ybodychange",
      "commitMessage": "don\u0027t construct verbose message Strings unless infoStream is non-null\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@724033 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2008-12-06, 3:05 p.m.",
      "commitName": "19c82a230d9668de85a82186d5e7a27a3c1d2fed",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2008-09-22, 6:53 p.m.",
      "commitNameOld": "2befbd45b79f3f1d205a8b734ce4e21ec9f6b12a",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 74.88,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (verbose())\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      if (verbose()) {\n        for(int i\u003d0;i\u003ccount;i++)\n          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n      }\n      \n      try {\n        wait();\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 120,
      "functionName": "sync",
      "diff": "@@ -1,13 +1,16 @@\n   public synchronized void sync() {\n     while(mergeThreadCount() \u003e 0) {\n-      message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+      if (verbose())\n+        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n       final int count \u003d mergeThreads.size();\n-      for(int i\u003d0;i\u003ccount;i++)\n-        message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n-\n+      if (verbose()) {\n+        for(int i\u003d0;i\u003ccount;i++)\n+          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n+      }\n+      \n       try {\n         wait();\n       } catch (InterruptedException e) {\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "38bbbb51de8920d36f5adecaac69903f79c8c5d3": {
      "type": "Ybodychange",
      "commitMessage": "LUCENE-1022: share writer\u0027s infoStream with LogMergePolicy \u0026 ConcurrentMergeScheduler\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@587101 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2007-10-22, 10:04 a.m.",
      "commitName": "38bbbb51de8920d36f5adecaac69903f79c8c5d3",
      "commitAuthor": "Michael McCandless",
      "commitDateOld": "2007-10-10, 12:46 p.m.",
      "commitNameOld": "3b6b76593900f714a299928c8a324593ecbfc8df",
      "commitAuthorOld": "Michael McCandless",
      "daysBetweenCommits": 11.89,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n      final int count \u003d mergeThreads.size();\n      for(int i\u003d0;i\u003ccount;i++)\n        message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n\n      try {\n        wait();\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 111,
      "functionName": "sync",
      "diff": "@@ -1,14 +1,13 @@\n   public synchronized void sync() {\n     while(mergeThreadCount() \u003e 0) {\n-      if (VERBOSE) {\n-        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n-        for(int i\u003d0;i\u003cmergeThreads.size();i++)\n-          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n-      }\n+      message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+      final int count \u003d mergeThreads.size();\n+      for(int i\u003d0;i\u003ccount;i++)\n+        message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n \n       try {\n         wait();\n       } catch (InterruptedException e) {\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3b6b76593900f714a299928c8a324593ecbfc8df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "LUCENE-1021: make all unit tests subclass from a new LuceneTestCase, so that we can assert no unhandled exceptions occurred in ConcurrentMergeScheduler\u0027s threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@583534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2007-10-10, 12:46 p.m.",
      "commitName": "3b6b76593900f714a299928c8a324593ecbfc8df",
      "commitAuthor": "Michael McCandless",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "LUCENE-1021: make all unit tests subclass from a new LuceneTestCase, so that we can assert no unhandled exceptions occurred in ConcurrentMergeScheduler\u0027s threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@583534 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2007-10-10, 12:46 p.m.",
          "commitName": "3b6b76593900f714a299928c8a324593ecbfc8df",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2007-10-06, 11:12 a.m.",
          "commitNameOld": "ceebb95d636a5c26a7c43c250415666283a615e4",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 4.07,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (VERBOSE) {\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n        for(int i\u003d0;i\u003cmergeThreads.size();i++)\n          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n      }\n\n      try {\n        wait();\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
          "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 111,
          "functionName": "sync",
          "diff": "@@ -1,3 +1,14 @@\n-  public void sync() {\n-    finishThreads();\n+  public synchronized void sync() {\n+    while(mergeThreadCount() \u003e 0) {\n+      if (VERBOSE) {\n+        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+        for(int i\u003d0;i\u003cmergeThreads.size();i++)\n+          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n+      }\n+\n+      try {\n+        wait();\n+      } catch (InterruptedException e) {\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "LUCENE-1021: make all unit tests subclass from a new LuceneTestCase, so that we can assert no unhandled exceptions occurred in ConcurrentMergeScheduler\u0027s threads\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@583534 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2007-10-10, 12:46 p.m.",
          "commitName": "3b6b76593900f714a299928c8a324593ecbfc8df",
          "commitAuthor": "Michael McCandless",
          "commitDateOld": "2007-10-06, 11:12 a.m.",
          "commitNameOld": "ceebb95d636a5c26a7c43c250415666283a615e4",
          "commitAuthorOld": "Michael McCandless",
          "daysBetweenCommits": 4.07,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "  public synchronized void sync() {\n    while(mergeThreadCount() \u003e 0) {\n      if (VERBOSE) {\n        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n        for(int i\u003d0;i\u003cmergeThreads.size();i++)\n          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n      }\n\n      try {\n        wait();\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
          "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
          "functionStartLine": 111,
          "functionName": "sync",
          "diff": "@@ -1,3 +1,14 @@\n-  public void sync() {\n-    finishThreads();\n+  public synchronized void sync() {\n+    while(mergeThreadCount() \u003e 0) {\n+      if (VERBOSE) {\n+        message(\"now wait for threads; currently \" + mergeThreads.size() + \" still running\");\n+        for(int i\u003d0;i\u003cmergeThreads.size();i++)\n+          message(\"    \" + i + \": \" + ((MergeThread) mergeThreads.get(i)));\n+      }\n+\n+      try {\n+        wait();\n+      } catch (InterruptedException e) {\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "299d6357dd296f87a099fadd0764292b28dbde47": {
      "type": "Yintroduced",
      "commitMessage": "LUCENE-845, LUCENE-847, LUCENE-870: factor MergePolicy \u0026 MergeScheduler out of IndexWriter, improve overall concurrency of IndexWriter, and add ConcurrentMergeScheduler\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@576798 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2007-09-18, 5:27 a.m.",
      "commitName": "299d6357dd296f87a099fadd0764292b28dbde47",
      "commitAuthor": "Michael McCandless",
      "diff": "@@ -0,0 +1,3 @@\n+  public void sync() {\n+    finishThreads();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void sync() {\n    finishThreads();\n  }",
      "path": "src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java",
      "functionStartLine": 124,
      "functionName": "sync"
    }
  }
}