repository,element_key,parent_commit_id,commit_id,commit_time, change_type,element_file_before,element_file_after,element_name_before,element_name_after,result,comment
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$element(387)",6e96026ec6d95fc5eadd3044cab91c24c73c8e0c,e00c478dd61d9d883e41b500b780ab217582c2e7,1287650559,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$element:LocalizedMessage(509)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$element:LocalizedMessage(507)",TP,"Add Variable Modifier final in variable element : LocalizedMessage in method public fireErrors(aFileName String, aErrors TreeSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$element(387)",f1afaf83f39b83cc3bd07a2388448b262652a76b,e50e1fcd1c17ba1f73d11df38382907cc163a1d1,1197714527,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$element:LocalizedMessage(471)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$element:LocalizedMessage(471)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors(384)",58219b9bd31c8f7fbc4f4bba0eeb811851f276b3,b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1,1421678312,rename,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,"src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$aErrors:SortedSet<LocalizedMessage>(515)","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors:SortedSet<LocalizedMessage>(515)",TP,"Rename Parameter aErrors : SortedSet<LocalizedMessage> to errors : SortedSet<LocalizedMessage> in method public fireErrors(fileName String, errors SortedSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors(384)",5ce771ac776af4197ce832792a049e9357ca90b8,1d614c3a7ecf8a3ede4df8a50da46e71792d0025,1386263571,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$aErrors:TreeSet<LocalizedMessage>(504)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$aErrors:SortedSet<LocalizedMessage>(506)",TP,"Change Parameter Type aErrors : TreeSet<LocalizedMessage> to aErrors : SortedSet<LocalizedMessage> in method public fireErrors(aFileName String, aErrors SortedSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors(384)",5dfb3f5a9e0206f9f80f9f067faa3dbe7766cef9,13b7c634337e38d20daa92ca9d5e069a2e72ec55,1226223447,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$aErrors:LocalizedMessage[](472)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$aErrors:TreeSet<LocalizedMessage>(500)",TP,"Change Parameter Type aErrors : LocalizedMessage[] to aErrors : TreeSet<LocalizedMessage> in method public fireErrors(aFileName String, aErrors TreeSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors(384)",d499f72239cec254d620ab1619ac936e233e2033,c682b5725d22afc38bf19d9667b23a7deab6d8c3,1028988900,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$aErrors:LineText[](362)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$aErrors:LocalizedMessage[](364)",TP,"Change Parameter Type aErrors : LineText[] to aErrors : LocalizedMessage[] in method protected fireErrors(aFileName String, aErrors LocalizedMessage[]) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$errors(384)",f34eba11cbd8559d4d06f96e19affa70abaf86ff,0e3fe5643667a53079dbd114e5b1e9aa91fde083,999188004,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$aErrors:LineText[](309)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$aErrors:LineText[](309)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$event(388)",bf529ef600fa9ef2034d0412c198b2121f2b94f2,ce196814d857a4244a80c51d5151cc35e90b6749,1445038509,rename,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,"src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$evt:AuditEvent(359)","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$event:AuditEvent(359)",TP,"Rename Variable evt : AuditEvent to event : AuditEvent in method public fireErrors(fileName String, errors SortedSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$event(388)",f34eba11cbd8559d4d06f96e19affa70abaf86ff,0e3fe5643667a53079dbd114e5b1e9aa91fde083,999188004,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$evt:AuditEvent(312)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$evt:AuditEvent(312)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$fileName(384)",58219b9bd31c8f7fbc4f4bba0eeb811851f276b3,b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1,1421678312,rename,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,"src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$aFileName:String(514)","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$fileName:String(514)",TP,"Rename Parameter aFileName : String to fileName : String in method public fireErrors(fileName String, errors SortedSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$fileName(384)",f34eba11cbd8559d4d06f96e19affa70abaf86ff,0e3fe5643667a53079dbd114e5b1e9aa91fde083,999188004,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$aFileName:String(309)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$aFileName:String(309)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$hasNonFilteredViolations(386)",a963f8a21bd47624ec9f1eea72c9326e2ca01c8a,56cc11416ebdf52dd299d11424fb04fda42fa63f,1478807994,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,"src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$hasNonFilteredViolations:boolean(355)","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$hasNonFilteredViolations:boolean(355)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$listener(391)",6e96026ec6d95fc5eadd3044cab91c24c73c8e0c,e00c478dd61d9d883e41b500b780ab217582c2e7,1287650559,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$listener:AuditListener(512)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, TreeSet)$listener:AuditListener(510)",TP,"Add Variable Modifier final in variable listener : AuditListener in method public fireErrors(aFileName String, aErrors TreeSet<LocalizedMessage>) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$listener(391)",08638b5f739d9929698860048c052da2d5f80209,f1afaf83f39b83cc3bd07a2388448b262652a76b,1197706480,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$listener:AuditListener(484)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$listener:AuditListener(474)",TP,"Remove Variable Modifier final in variable listener : AuditListener in method public fireErrors(aFileName String, aErrors LocalizedMessage[]) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$listener(391)",f34eba11cbd8559d4d06f96e19affa70abaf86ff,0e3fe5643667a53079dbd114e5b1e9aa91fde083,999188004,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$listener:AuditListener(317)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LineText[])$listener:AuditListener(317)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, SortedSet)$stripped(385)",b33ff29c69de2b8aca3b7f73315f4594bdce4c24,82b2ba526976588d550cac698e512f8de6c1ffc6,1037521490,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$stripped:String(267)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#fireErrors(String, LocalizedMessage[])$stripped:String(267)",TP,"Extract Variable stripped : String in method protected fireErrors(aFileName String, aErrors LocalizedMessage[]) : void from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$errorCount(226)",d86a9de35b58eeed409ed9fc3cbef252fda4cb84,5d7063c660b241bce251f1a8c89394619f2791fb,1093527252,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$errorCount:int(240)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$errorCount:int(241)",TP,"Add Variable Modifier final in variable errorCount : int in method public process(aFiles File[]) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$errorCount(226)",a49d4e972a6bfd26e73e42337ff75d50b4df8959,54a09706ec1db32435b09e6b6910813325558f8d,1037733445,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$errorCount:int(183)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$errorCount:int(183)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$files(206)",58219b9bd31c8f7fbc4f4bba0eeb811851f276b3,b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1,1421678312,rename,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,src/main/java/com/puppycrawl/tools/checkstyle/Checker.java,"src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$aFiles:List<File>(246)","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$files:List<File>(246)",TP,"Rename Parameter aFiles : List<File> to files : List<File> in method public process(files List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$files(206)",e287c5e741ce8b13d19e7f0885977792a0d0fcc9,f38d8abd42c3e824635e542e6031b3da1997c02e,1198131671,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$aFiles:File[](235)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(List)$aFiles:List<File>(235)",TP,"Change Parameter Type aFiles : File[] to aFiles : List<File> in method public process(aFiles List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$files(206)",cb2862b73a3aa9192fad25015da2c2fed87f8a91,822384a711290170148b43b5ae390dd4e8cfaf4f,1037515736,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String[])$aFiles:String[](168)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$aFiles:File[](168)",TP,"Change Parameter Type aFiles : String[] to aFiles : File[] in method public process(aFiles File[]) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$files(206)",5f53a2a380e038e791af244b42f245b813dbc379,0fd69594a4c3e82f92f93f0371791da66938f8c3,993216264,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java,src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.CheckStyleTask#process(String, String[], Checker)$aFiles:String[](200)","src/checkstyle/com.puppycrawl.tools.checkstyle.CheckStyleTask#process(String, String[], Checker)$aFiles:String[](200)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc(213)",6e96026ec6d95fc5eadd3044cab91c24c73c8e0c,e00c478dd61d9d883e41b500b780ab217582c2e7,1287650559,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc:FileSetCheck(249)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc:FileSetCheck(249)",TP,"Add Variable Modifier final in variable fsc : FileSetCheck in method public process(aFiles List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc(213)",08638b5f739d9929698860048c052da2d5f80209,f1afaf83f39b83cc3bd07a2388448b262652a76b,1197706480,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(237)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fsc:FileSetCheck(238)",TP,"Remove Variable Modifier final in variable fileSetCheck : FileSetCheck in method public process(aFiles File[]) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc(213)",08638b5f739d9929698860048c052da2d5f80209,f1afaf83f39b83cc3bd07a2388448b262652a76b,1197706480,rename,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(237)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fsc:FileSetCheck(238)",TP,"Rename Variable fileSetCheck : FileSetCheck to fsc : FileSetCheck in method public process(aFiles File[]) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc(213)",d86a9de35b58eeed409ed9fc3cbef252fda4cb84,5d7063c660b241bce251f1a8c89394619f2791fb,1093527252,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(236)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(236)",TP,"Add Variable Modifier final in variable fileSetCheck : FileSetCheck in method public process(aFiles File[]) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Checker#process(List)$fsc(213)",54a09706ec1db32435b09e6b6910813325558f8d,abff1a2489ea8af10e1bc0a335551262d22f44e7,1037737306,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(197)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File[])$fileSetCheck:FileSetCheck(197)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$ex(108)",d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7,f65b17cbc30795247fef3077cce16a8bb53e9ffc,1449184604,rename,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,"src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$e:PatternSyntaxException(205)","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$ex:PatternSyntaxException(205)",TP,"Rename Variable e : PatternSyntaxException to ex : PatternSyntaxException in method public createPattern(pattern String, flags int) : Pattern from class com.puppycrawl.tools.checkstyle.utils.CommonUtils"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$ex(108)",2ba55edc4e35866afbb154e3ea03cf03e56ab9bc,f2c6263e151e8a7300755b36fbb41511c0a0cca1,1446178343,introduced,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,"src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$e:PatternSyntaxException(205)","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$e:PatternSyntaxException(205)",TP,"Extract Method public createPattern(pattern String, flags int) : Pattern extracted from public createPattern(pattern String) : Pattern in class com.puppycrawl.tools.checkstyle.utils.CommonUtils"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$flags(104)",2ba55edc4e35866afbb154e3ea03cf03e56ab9bc,f2c6263e151e8a7300755b36fbb41511c0a0cca1,1446178343,introduced,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,"src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$flags:int(201)","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$flags:int(201)",TP,"Extract Method public createPattern(pattern String, flags int) : Pattern extracted from public createPattern(pattern String) : Pattern in class com.puppycrawl.tools.checkstyle.utils.CommonUtils"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$pattern(104)",2ba55edc4e35866afbb154e3ea03cf03e56ab9bc,f2c6263e151e8a7300755b36fbb41511c0a0cca1,1446178343,introduced,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java,"src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$pattern:String(201)","src/main/java/com.puppycrawl.tools.checkstyle.utils.CommonUtils#createPattern(String, int)$pattern:String(201)",TP,"Extract Method public createPattern(pattern String, flags int) : Pattern extracted from public createPattern(pattern String) : Pattern in class com.puppycrawl.tools.checkstyle.utils.CommonUtils"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$ast(188)",b94bac0719851b65b59b4aafc5bd3ef029321ed7,bb1b29851f14bf7eaf5656e01c285c0f5f3b9000,1421677214,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$aAST:DetailAST(91)","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$ast:DetailAST(91)",TP,"Rename Parameter aAST : DetailAST to ast : DetailAST in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$ast(188)",753a3a0c9708a7c050efd1dad93c37b424cf5c73,0c717ef2abd068366612d44280633a1c7ac9efac,1063281707,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$aAST:DetailAST(94)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$aAST:DetailAST(94)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$candidate(226)",0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44,bf69cf167c9432daabc7b6e4a426fff33650a057,1459291652,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$candidate:Optional<FinalVariableCandidate>(212)","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$candidate:Optional<FinalVariableCandidate>(212)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$parentType(224)",753a3a0c9708a7c050efd1dad93c37b424cf5c73,0c717ef2abd068366612d44280633a1c7ac9efac,1063281707,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$parentType:int(115)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck#visitToken(DetailAST)$parentType:int(115)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedClassInfo(893)",fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa,bf9325be913ce46a1427232c455f4830b574ba44,1448157067,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:AbstractClassInfo(892)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedClassInfo:AbstractClassInfo(892)",TP,"Rename Variable documentedCI : AbstractClassInfo to documentedClassInfo : AbstractClassInfo in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedClassInfo(893)",0382b7907b54e95408344863915a847dabc37f12,eb5896a4a1d66552f5100046413f15d62b485b62,1434649920,type change,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:ClassInfo(869)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:AbstractClassInfo(869)",TP,"Change Variable Type documentedCI : ClassInfo to documentedCI : AbstractClassInfo in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedClassInfo(893)",f4a92dad02a3a36b5e2e988bba04debb1e2c9db9,35d1673788bbbac8263fdb69275dc6a63b095a24,1152243856,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:ClassInfo(749)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:ClassInfo(752)",TP,"Add Variable Modifier final in variable documentedCI : ClassInfo in method private checkThrowsTags(aTags List, aThrows List, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedClassInfo(893)",b95ced53e3c47c9a9db5022767a18e714fc3bebd,cbe38280adb03f058f89e8ea81bc0e3be2fc5b94,1123248811,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:ClassInfo(690)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedCI:ClassInfo(690)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$documentedEx(890)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$documentedEx:String(454)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$documentedEx:String(454)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$found(895)",8e168c23bde5fed98dea0141b0cdcf11a74a7454,6f1840f011cea3a523d9df1278d4a0af98e1d967,1440682229,modifier change,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$found:boolean(861)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$found:boolean(862)",TP,"Add Variable Modifier final in variable found : boolean in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$found(895)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$found:boolean(455)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$found:boolean(455)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$foundThrows(879)",4ebf621616e3c9ea2284e7109d19abbbe1a94efc,85a9c1f13f06baf70c00e62d8bb91507aeb3a72d,1197694270,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$foundThrows:Set(737)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$foundThrows:Set<String>(740)",TP,"Change Variable Type foundThrows : Set to foundThrows : Set<String> in method private checkThrowsTags(aTags List<JavadocTag>, aThrows List<ExceptionInfo>, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$foundThrows(879)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$foundThrows:Set(442)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$foundThrows:Set(442)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$reportExpectedTags(876)",d97a2df674716efb7deda50180ae933bdc46d68a,89a51ba032fd9126651fa9efad31baf10c006ddf,1421677262,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aReportExpectedTags:boolean(836)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$reportExpectedTags:boolean(836)",TP,"Rename Parameter aReportExpectedTags : boolean to reportExpectedTags : boolean in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$reportExpectedTags(876)",42d34c7e16ebc69b0a33febb73c9fa318351e212,72be23f288369fdd9e562999bb9b0e2ff646c897,1070909885,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aReportExpectedTags:boolean(578)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aReportExpectedTags:boolean(578)",TP,"Add Parameter aReportExpectedTags : boolean in method private checkThrowsTags(aTags List, aThrows List, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$reqd(900)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$reqd:boolean(468)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$reqd:boolean(468)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tag(882)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$tag:JavadocTag(445)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$tag:JavadocTag(445)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tagIt(880)",4ebf621616e3c9ea2284e7109d19abbbe1a94efc,85a9c1f13f06baf70c00e62d8bb91507aeb3a72d,1197694270,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tagIt:ListIterator(738)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tagIt:ListIterator<JavadocTag>(741)",TP,"Change Variable Type tagIt : ListIterator to tagIt : ListIterator<JavadocTag> in method private checkThrowsTags(aTags List<JavadocTag>, aThrows List<ExceptionInfo>, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tagIt(880)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$tagIt:ListIterator(443)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$tagIt:ListIterator(443)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tags(875)",d97a2df674716efb7deda50180ae933bdc46d68a,89a51ba032fd9126651fa9efad31baf10c006ddf,1421677262,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aTags:List<JavadocTag>(835)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tags:List<JavadocTag>(835)",TP,"Rename Parameter aTags : List<JavadocTag> to tags : List<JavadocTag> in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tags(875)",4ebf621616e3c9ea2284e7109d19abbbe1a94efc,85a9c1f13f06baf70c00e62d8bb91507aeb3a72d,1197694270,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aTags:List(733)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aTags:List<JavadocTag>(735)",TP,"Change Parameter Type aTags : List to aTags : List<JavadocTag> in method private checkThrowsTags(aTags List<JavadocTag>, aThrows List<ExceptionInfo>, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$tags(875)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$aTags:List(439)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$aTags:List(439)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$throwsList(876)",d97a2df674716efb7deda50180ae933bdc46d68a,89a51ba032fd9126651fa9efad31baf10c006ddf,1421677262,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aThrows:List<ExceptionInfo>(836)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$throwsList:List<ExceptionInfo>(836)",TP,"Rename Parameter aThrows : List<ExceptionInfo> to throwsList : List<ExceptionInfo> in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$throwsList(876)",4ebf621616e3c9ea2284e7109d19abbbe1a94efc,85a9c1f13f06baf70c00e62d8bb91507aeb3a72d,1197694270,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aThrows:List(733)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$aThrows:List<ExceptionInfo>(736)",TP,"Change Parameter Type aThrows : List to aThrows : List<ExceptionInfo> in method private checkThrowsTags(aTags List<JavadocTag>, aThrows List<ExceptionInfo>, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$throwsList(876)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$aThrows:List(439)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$aThrows:List(439)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token(891)",f4a92dad02a3a36b5e2e988bba04debb1e2c9db9,35d1673788bbbac8263fdb69275dc6a63b095a24,1152243856,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token:Token(747)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token:Token(750)",TP,"Add Variable Modifier final in variable token : Token in method private checkThrowsTags(aTags List, aThrows List, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token(891)",b95ced53e3c47c9a9db5022767a18e714fc3bebd,cbe38280adb03f058f89e8ea81bc0e3be2fc5b94,1123248811,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token:Token(688)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token:Token(688)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token(917)",ca7f7f855630cbc816e47637ef36ae433d0e745f,5f5142b2325051f9ed31130167c73d154d547211,1444185186,rename,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$fi:Token(916)","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token:Token(916)",TP,"Rename Variable fi : Token to token : Token in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token(917)",b95ced53e3c47c9a9db5022767a18e714fc3bebd,cbe38280adb03f058f89e8ea81bc0e3be2fc5b94,1123248811,type change,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$fi:FullIdent(724)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$fi:Token(732)",TP,"Change Variable Type fi : FullIdent to fi : Token in method private checkThrowsTags(aTags List, aThrows List, aReportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck#checkThrowsTags(List, List, boolean)$token(917)",f42953e35be5c7dc3831bdf6dbbfca7f7ccd7b97,c75f97dbc2123f550a1acc64886a8bebf4b888cf,1036501994,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$fi:FullIdent(494)","src/checkstyle/com.puppycrawl.tools.checkstyle.checks.JavadocMethodCheck#checkThrowsTags(List, List)$fi:FullIdent(494)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args(181)",6a9872d60c718b5d5770013f73523a55ff12cd6d,c0446a825514ea0279b8c22f633f2c4e3c73dc1f,1430353274,type change,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args:String[](55)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args:String...(55)",TP,"Change Parameter Type args : String[] to args : String... in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args(181)",58219b9bd31c8f7fbc4f4bba0eeb811851f276b3,b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1,1421678312,rename,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$aArgs:String[](71)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args:String[](71)",TP,"Rename Parameter aArgs : String[] to args : String[] in method public main(args String[]) : void from class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$args(181)",5f53a2a380e038e791af244b42f245b813dbc379,0fd69594a4c3e82f92f93f0371791da66938f8c3,993216264,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Main#main(String[])$aArgs:String[](34)","src/checkstyle/com.puppycrawl.tools.checkstyle.Main#main(String[])$aArgs:String[](34)",TP,"added with method"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$cliViolations(183)",d6272b70eb5ad61fd8ab34091e970c50b1f67386,1a2c318e22a0b2b22ccc76019217c0892fe2d59b,1430849532,rename,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$parseResult:boolean(63)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$cliViolations:boolean(68)",TP,"Rename Variable parseResult : boolean to cliViolations : boolean in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$cliViolations(183)",e380ac8df92c051d843d380d5e8a6fe90af9df9d,ab2f93f9bf61816d84154e636d32c81c05854e24,1429852725,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$parseResult:boolean(57)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$parseResult:boolean(57)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$commandLine(190)",d6272b70eb5ad61fd8ab34091e970c50b1f67386,1a2c318e22a0b2b22ccc76019217c0892fe2d59b,1430849532,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$commandLine:CommandLine(72)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$commandLine:CommandLine(72)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$errorCounter(182)",d6272b70eb5ad61fd8ab34091e970c50b1f67386,1a2c318e22a0b2b22ccc76019217c0892fe2d59b,1430849532,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#processCommandLine(CommandLine)$errorCounter:int(163)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$errorCounter:int(67)",TP,"Inline Method private processCommandLine(line CommandLine) : void inlined to public main(args String...) : void in class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$errorCounterMessage(234)",68b53038fd75daf24b467fd692091e8f823abb9f,dab682c2f0e2853858a6d24e1fe2c2088315a0cc,1499482554,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$errorCounterMessage:LocalizedMessage(230)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$errorCounterMessage:LocalizedMessage(230)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$ex(224)",d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7,f65b17cbc30795247fef3077cce16a8bb53e9ffc,1449184604,rename,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$e:CheckstyleException(132)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$ex:CheckstyleException(132)",TP,"Rename Variable e : CheckstyleException to ex : CheckstyleException in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$ex(224)",1eb344dc82079aaf47390f512440835f4087e45f,fe6db3ab8a864e11eebfb0496f6a41852bdee019,1433788956,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$e:CheckstyleException(104)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$e:CheckstyleException(104)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitStatus(186)",857b6c75f5d686e2bc69d2d90a6f46c5f54104bd,4299a4b408304cd0bcad6c25b4a322dbd94169a3,1434292672,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitStatus:int(70)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitStatus:int(70)",TP,"Extract Variable exitStatus : int in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitWithCliViolation(185)",857b6c75f5d686e2bc69d2d90a6f46c5f54104bd,4299a4b408304cd0bcad6c25b4a322dbd94169a3,1434292672,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitWithCliViolation:int(68)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$exitWithCliViolation:int(68)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$filesToProcess(199)",d46c2cf0e9df06bb5f424dbd7645574f082f7609,1b72b4905bf3520aa47697cc7d1bcdad8b7ad1e6,1455113230,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$filesToProcess:List<File>(108)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$filesToProcess:List<File>(108)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$messages(203)",d6272b70eb5ad61fd8ab34091e970c50b1f67386,1a2c318e22a0b2b22ccc76019217c0892fe2d59b,1430849532,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$messages:List<String>(81)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$messages:List<String>(81)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$pex(216)",d6272b70eb5ad61fd8ab34091e970c50b1f67386,1a2c318e22a0b2b22ccc76019217c0892fe2d59b,1430849532,introduced,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,src/main/java/com/puppycrawl/tools/checkstyle/Main.java,"src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$pex:ParseException(99)","src/main/java/com.puppycrawl.tools.checkstyle.Main#main(String[])$pex:ParseException(99)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$astWithComments(186)",59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88,a24df47cafeab03fd65cf72b460aad3d2fafce3d,1413609550,introduced,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$astWithComments:DetailAST(209)","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$astWithComments:DetailAST(209)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$contents(180)",01d27913a71c29d6a769ed98ca7dd4ba01fe31eb,4cbd709c019cf1b69796858506d673f7b66d37c7,1037161281,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$contents:FileContents(209)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$contents:FileContents(209)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$file(176)",58219b9bd31c8f7fbc4f4bba0eeb811851f276b3,b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1,1421678312,rename,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$aFile:File(191)","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$file:File(191)",TP,"Rename Parameter aFile : File to file : File in method protected processFiltered(file File, lines List<String>) : void from class com.puppycrawl.tools.checkstyle.TreeWalker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$file(176)",cb2862b73a3aa9192fad25015da2c2fed87f8a91,822384a711290170148b43b5ae390dd4e8cfaf4f,1037515736,rename,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$f:File(187)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File)$aFile:File(184)",TP,"Parameterize Variable f : File to aFile : File in method private process(aFile File) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$file(176)",cb2862b73a3aa9192fad25015da2c2fed87f8a91,822384a711290170148b43b5ae390dd4e8cfaf4f,1037515736,modifier change,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$f:File(187)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(File)$aFile:File(184)",TP,"Remove Variable Modifier final in variable f : File in method private process(aFileName String) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$file(176)",f34eba11cbd8559d4d06f96e19affa70abaf86ff,0e3fe5643667a53079dbd114e5b1e9aa91fde083,999188004,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$f:File(129)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$f:File(129)",TP,"Extract Variable f : File in method private process(aFileName String) : int from class com.puppycrawl.tools.checkstyle.Checker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$fileText(176)",9cd7b5508a1be8c3031b0b8511d93bb879776959,82979737c4201b4913ea30b9c9431e71783d1c02,1499372568,rename,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$text:FileText(176)","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$fileText:FileText(167)",TP,"Parameterize Variable text : FileText to fileText : FileText in method protected processFiltered(file File, fileText FileText) : void from class com.puppycrawl.tools.checkstyle.TreeWalker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$fileText(176)",9cd7b5508a1be8c3031b0b8511d93bb879776959,82979737c4201b4913ea30b9c9431e71783d1c02,1499372568,modifier change,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$text:FileText(176)","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$fileText:FileText(167)",TP,"Remove Variable Modifier final in variable text : FileText in method protected processFiltered(file File, lines List<String>) : void from class com.puppycrawl.tools.checkstyle.TreeWalker"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$fileText(176)",78a5fd3494e8f3fe6e5edd0925f46b43583451fe,3cd6646941eca3da7d3b9a221c88e4c1d214876e,1277730133,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$text:FileText(185)","src/checkstyle/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, List)$text:FileText(185)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$filteredMessages(193)",4c10bc55b4aea0f7e3b95b06d820eedb7c6a6fb2,6d9e8ece85007117e048fef55469623b830f9446,1500928695,introduced,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java,"src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$filteredMessages:SortedSet<LocalizedMessage>(212)","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$filteredMessages:SortedSet<LocalizedMessage>(212)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.TreeWalker#processFiltered(File, FileText)$rootAST(181)",01d27913a71c29d6a769ed98ca7dd4ba01fe31eb,4cbd709c019cf1b69796858506d673f7b66d37c7,1037161281,introduced,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java,"src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$rootAST:DetailAST(210)","src/checkstyle/com.puppycrawl.tools.checkstyle.Checker#process(String)$rootAST:DetailAST(210)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$ast(412)",ec426aa0db5829cd799814d5e0e61b4cd2e42a46,779aa37ffc447d1d85ea1b082759e4040657191d,1434344165,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$ast:DetailAST(389)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$ast:DetailAST(389)",TP,"Extract Method private isNotRelevantSituation(ast DetailAST, currentType int) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$colonOfCaseOrDefaultOrForEach(420)",e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1,904de34fcd984edce3d6042a5a17e2a969254588,1440827395,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$colonOfCaseOrDefaultOrForEach:boolean(404)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$colonOfCaseOrDefaultOrForEach:boolean(404)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$currentType(412)",ec426aa0db5829cd799814d5e0e61b4cd2e42a46,779aa37ffc447d1d85ea1b082759e4040657191d,1434344165,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$currentType:int(389)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$currentType:int(389)",TP,"Extract Method private isNotRelevantSituation(ast DetailAST, currentType int) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$emptyBlockOrType(423)",e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1,904de34fcd984edce3d6042a5a17e2a969254588,1440827395,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$emptyBlockOrType:boolean(407)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$emptyBlockOrType:boolean(407)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$parentType(413)",ec426aa0db5829cd799814d5e0e61b4cd2e42a46,779aa37ffc447d1d85ea1b082759e4040657191d,1434344165,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$parentType:int(390)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$parentType:int(390)",TP,"Extract Method private isNotRelevantSituation(ast DetailAST, currentType int) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$slistInsideCaseGroup(416)",e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1,904de34fcd984edce3d6042a5a17e2a969254588,1440827395,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$slistInsideCaseGroup:boolean(400)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$slistInsideCaseGroup:boolean(400)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImport(414)",e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1,904de34fcd984edce3d6042a5a17e2a969254588,1440827395,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImport:boolean(398)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImport:boolean(398)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImportOrSlistInsideCaseGroup(419)",e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1,904de34fcd984edce3d6042a5a17e2a969254588,1440827395,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImportOrSlistInsideCaseGroup:boolean(403)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#isNotRelevantSituation(DetailAST, int)$starImportOrSlistInsideCaseGroup:boolean(403)",TP,"new variable"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$ast(462)",f301f420bfe3ee5c6f1c690cf0f69511ece67d6c,e545ce56a19877ef98f367b3aa20fd6098bbeca9,1455132109,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$ast:DetailAST(449)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$ast:DetailAST(449)",TP,"Extract Method private shouldCheckSeparationFromNextToken(ast DetailAST, nextChar char) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
"https://github.com/checkstyle/checkstyle.git","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$nextChar(462)",f301f420bfe3ee5c6f1c690cf0f69511ece67d6c,e545ce56a19877ef98f367b3aa20fd6098bbeca9,1455132109,introduced,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java,"src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$nextChar:char(449)","src/main/java/com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck#shouldCheckSeparationFromNextToken(DetailAST, char)$nextChar:char(449)",TP,"Extract Method private shouldCheckSeparationFromNextToken(ast DetailAST, nextChar char) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$aField(1009)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$aField:int[](1007)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$aField:int[](1007)",TP,"Add Variable Modifier final in variable aField : int[] in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$aField(1009)",f3fbf1e4fa8df034c0fc56afbbd1ae981e3532b4,fab64bbdc726cf06c5993b7b8f50557882086002,1310322376,introduced,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$aField:int[](953)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$aField:int[](953)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$date(973)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$date:Date(971)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$date:Date(971)",TP,"Add Variable Modifier final in variable date : Date in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$date(973)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$date:Date(634)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$date:Date(634)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$done(975)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$done:boolean(636)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$done:boolean(636)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$element(1010)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$element:int(1008)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$element:int(1008)",TP,"Add Variable Modifier final in variable element : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$element(1010)",fab64bbdc726cf06c5993b7b8f50557882086002,14373ad1b11e5dc3a26457647ddee4e8ada97430,1310345344,introduced,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$element:int(954)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$element:int(954)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$field(958)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$field:int(956)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$field:int(956)",TP,"Add Parameter Modifier final in parameter field : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$field(958)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$field:int(195)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$field:int(195)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$max(1083)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$max:int(1079)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$max:int(1079)",TP,"Add Variable Modifier final in variable max : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$max(1083)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$max:int(257)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$max:int(257)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$millisecs(978)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$millisecs:int(976)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$millisecs:int(976)",TP,"Add Variable Modifier final in variable millisecs : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$millisecs(978)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$millisecs:int(639)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$millisecs:int(639)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$min(1082)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$min:int(1078)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$min:int(1078)",TP,"Add Variable Modifier final in variable min : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$min(1082)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$min:int(256)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$min:int(256)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$minutes(996)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$minutes:int(994)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$minutes:int(994)",TP,"Add Variable Modifier final in variable minutes : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$minutes(996)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$minutes:int(657)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$minutes:int(657)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType(958)",bc91bedd45c5f51175f8686332ed4c72fbe98652,52e854e3bda9f1b92471884888f430345f73eca2,1411830206,type change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$modType:int(963)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType:ModifyType(967)",TP,"Change Parameter Type modType : int to modType : ModifyType in method private modify(val Calendar, field int, modType ModifyType) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType(958)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$modType:int(956)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$modType:int(956)",TP,"Add Parameter Modifier final in parameter modType : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType(958)",784e93e61dc5ee66e5d47d8c8dd09294df6df145,49e68a3f962c0b8e0ac80743db5eecb1b493c9e6,1248031264,rename,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$round:boolean(765)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, int)$modType:int(869)",TP,"Rename Parameter round : boolean to modType : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType(958)",784e93e61dc5ee66e5d47d8c8dd09294df6df145,49e68a3f962c0b8e0ac80743db5eecb1b493c9e6,1248031264,type change,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$round:boolean(765)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, int)$modType:int(869)",TP,"Change Parameter Type round : boolean to modType : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$modType(958)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$round:boolean(195)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$round:boolean(195)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$offset(1046)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$offset:int(222)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$offset:int(222)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$offsetSet(1047)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$offsetSet:boolean(223)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$offsetSet:boolean(223)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$roundUp(1008)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$roundUp:boolean(196)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$roundUp:boolean(196)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$seconds(987)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$seconds:int(985)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$seconds:int(985)",TP,"Add Variable Modifier final in variable seconds : int in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$seconds(987)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$seconds:int(648)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$seconds:int(648)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$time(974)",c62bd307657aab6bf4be06e5c4c232195f6620f9,9cbf70d82285d7ebdd190f7cd59f2a9d82a09c61,1153460827,introduced,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,"src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$time:long(635)","src/java/org.apache.commons.lang.time.DateUtils#modify(Calendar, int, boolean)$time:long(635)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$val(958)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,"src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$val:Calendar(956)","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, int)$val:Calendar(956)",TP,"Add Parameter Modifier final in parameter val : Calendar in method private modify(val Calendar, field int, modType int) : void from class org.apache.commons.lang3.time.DateUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DateUtils#modify(Calendar, int, ModifyType)$val(958)",26c6a7c28f95231873661e5b0240392c0662b202,3d82f12dbdc8fbf971b61a360f2cd13c0a4fd8d5,1040075720,introduced,src/java/org/apache/commons/lang/CalendarUtils.java,src/java/org/apache/commons/lang/CalendarUtils.java,"src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$val:Calendar(195)","src/java/org.apache.commons.lang.CalendarUtils#modify(Calendar, int, boolean)$val:Calendar(195)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$days(304)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$days:int(234)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$days:int(234)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$end(296)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$end:Calendar(284)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$end:Calendar(284)",TP,"Add Variable Modifier final in variable end : Calendar in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$end(296)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$end:Calendar(223)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$end:Calendar(223)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$endMillis(279)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$endMillis:long(269)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$endMillis:long(269)",TP,"Add Parameter Modifier final in parameter endMillis : long in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$endMillis(279)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$endMillis:long(210)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$endMillis:long(210)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$format(279)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$format:String(269)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$format:String(269)",TP,"Add Parameter Modifier final in parameter format : String in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$format(279)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$format:String(210)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$format:String(210)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$hours(303)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$hours:int(239)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$hours:int(239)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$milliseconds(300)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$milliseconds:int(254)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$milliseconds:int(254)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$minutes(302)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$minutes:int(244)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$minutes:int(244)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$months(305)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$months:int(228)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$months:int(228)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$padWithZeros(279)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$padWithZeros:boolean(269)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$padWithZeros:boolean(269)",TP,"Add Parameter Modifier final in parameter padWithZeros : boolean in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$padWithZeros(279)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$padWithZeros:boolean(210)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$padWithZeros:boolean(210)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$seconds(301)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$seconds:int(249)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$seconds:int(249)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$start(294)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$start:Calendar(282)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$start:Calendar(282)",TP,"Add Variable Modifier final in variable start : Calendar in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$start(294)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$start:Calendar(221)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$start:Calendar(221)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$startMillis(279)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$startMillis:long(269)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$startMillis:long(269)",TP,"Add Parameter Modifier final in parameter startMillis : long in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$startMillis(279)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$startMillis:long(210)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$startMillis:long(210)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$target(348)",381ed0c0f6016993a81563edc857d3235daafea3,4f514d5eb3e80703012df9be190ae42d35d25bdc,1166595026,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$target:int(340)","src/java/org.apache.commons.lang.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$target:int(340)",TP,"Extract Variable target : int in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$timezone(280)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$timezone:TimeZone(270)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$timezone:TimeZone(270)",TP,"Add Parameter Modifier final in parameter timezone : TimeZone in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$timezone(280)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$timezone:TimeZone(210)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$timezone:TimeZone(210)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$tokens(290)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java,"src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$tokens:Token[](278)","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$tokens:Token[](278)",TP,"Add Variable Modifier final in variable tokens : Token[] in method public formatPeriod(startMillis long, endMillis long, format String, padWithZeros boolean, timezone TimeZone) : String from class org.apache.commons.lang3.time.DurationFormatUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$tokens(290)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$tokens:Token[](217)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$tokens:Token[](217)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.DurationFormatUtils#formatPeriod(long, long, String, boolean, TimeZone)$years(306)",fc447adfef826f1c27650c3d3129d40754fa4a89,177d40989f45197fd9f9669f4eeb6033b73bc16e,1096254855,introduced,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,"src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$years:int(227)","src/java/org.apache.commons.lang.time.DurationFormatUtils#format(long, long, String, boolean, TimeZone)$years:int(227)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$e(544)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$e:IllegalArgumentException(548)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$e:IllegalArgumentException(548)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhs(491)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhs:Object(502)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhs:Object(502)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhsClass(507)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhsClass:Class<?>(517)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$lhsClass:Class<?>(517)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhs(491)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhs:Object(502)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhs:Object(502)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhsClass(508)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhsClass:Class<?>(518)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$rhsClass:Class<?>(518)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$testClass(509)",9f89fd4626bbb4e34a905835e397bcffbad59307,0095d8adf26b9469115b1be0358cb09d1fcb5fd4,1479059248,introduced,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,"src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$testClass:Class<?>(519)","src/main/java/org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object, Object)$testClass:Class<?>(519)",TP,"Extract Method public reflectionAppend(lhs Object, rhs Object) : EqualsBuilder extracted from public reflectionEquals(lhs Object, rhs Object, testTransients boolean, reflectUpToClass Class<?>, excludeFields String...) : boolean in class org.apache.commons.lang3.builder.EqualsBuilder"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings(190)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings:String[](176)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings:String[](176)",TP,"Add Variable Modifier final in variable AmPmStrings : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings(190)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings:String[](176)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$AmPmStrings:String[](176)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs(185)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs:String[](171)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs:String[](171)",TP,"Add Variable Modifier final in variable ERAs : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs(185)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs:String[](171)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$ERAs:String[](171)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c(206)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c:char(192)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c:char(192)",TP,"Add Variable Modifier final in variable c : char in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c(206)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c:char(192)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$c:char(192)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$i(195)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$i:int(181)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$i:int(181)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef(193)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef:int[](179)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef:int[](179)",TP,"Add Variable Modifier final in variable indexRef : int[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef(193)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef:int[](179)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$indexRef:int[](179)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length(192)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length:int(178)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length:int(178)",TP,"Add Variable Modifier final in variable length : int in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length(192)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length:int(178)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$length:int(178)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months(186)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months:String[](172)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months:String[](172)",TP,"Add Variable Modifier final in variable months : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months(186)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months:String[](172)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$months:String[](172)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rule(205)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rule:Rule(191)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rule:Rule(191)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules(183)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules:List<Rule>(169)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules:List<Rule>(169)",TP,"Add Variable Modifier final in variable rules : List<Rule> in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules(183)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules:List<Rule>(169)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$rules:List<Rule>(169)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths(187)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths:String[](173)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths:String[](173)",TP,"Add Variable Modifier final in variable shortMonths : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths(187)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths:String[](173)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortMonths:String[](173)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays(189)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays:String[](175)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays:String[](175)",TP,"Add Variable Modifier final in variable shortWeekdays : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays(189)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays:String[](175)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$shortWeekdays:String[](175)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub(299)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub:String(273)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub:String(273)",TP,"Add Variable Modifier final in variable sub : String in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub(299)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub:String(273)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$sub:String(273)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols(182)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols:DateFormatSymbols(168)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols:DateFormatSymbols(168)",TP,"Add Variable Modifier final in variable symbols : DateFormatSymbols in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols(182)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols:DateFormatSymbols(168)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$symbols:DateFormatSymbols(168)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token(197)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token:String(183)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token:String(183)",TP,"Add Variable Modifier final in variable token : String in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token(197)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token:String(183)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$token:String(183)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen(200)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen:int(186)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen:int(186)",TP,"Add Variable Modifier final in variable tokenLen : int in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen(200)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen:int(186)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$tokenLen:int(186)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays(188)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays:String[](174)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays:String[](174)",TP,"Add Variable Modifier final in variable weekdays : String[] in method protected parsePattern() : List<Rule> from class org.apache.commons.lang3.time.FastDatePrinter"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays(188)",dfa6882a3b9ae6d17c386312ad5e5902d852fb4e,cc340ad2eb6a783f6abe8d02f2c32bb02b01505c,1327561226,introduced,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,"src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays:String[](174)","src/main/java/org.apache.commons.lang3.time.FastDatePrinter#parsePattern()$weekdays:String[](174)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch0(104)",bc255ccf5c239666ab54e5a31720d3f482ae78eb,4d46f014fb8ee44386feb5fec52509f35d0e36ea,1357193992,modifier change,src/main/java/org/apache/commons/lang3/LocaleUtils.java,src/main/java/org/apache/commons/lang3/LocaleUtils.java,"src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch0:char(96)","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch0:char(96)",TP,"Add Variable Modifier final in variable ch0 : char in method public toLocale(str String) : Locale from class org.apache.commons.lang3.LocaleUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch0(104)",b2da02296f79e4119b749522a1912f5be5ea4f8c,d1f5ebf4122aaf0675ef5547c2a6733f52a892d4,1127517451,introduced,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,"src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$ch0:char(97)","src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$ch0:char(97)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch1(109)",bc255ccf5c239666ab54e5a31720d3f482ae78eb,4d46f014fb8ee44386feb5fec52509f35d0e36ea,1357193992,modifier change,src/main/java/org/apache/commons/lang3/LocaleUtils.java,src/main/java/org/apache/commons/lang3/LocaleUtils.java,"src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch1:char(97)","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch1:char(101)",TP,"Add Variable Modifier final in variable ch1 : char in method public toLocale(str String) : Locale from class org.apache.commons.lang3.LocaleUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch1(109)",b2da02296f79e4119b749522a1912f5be5ea4f8c,d1f5ebf4122aaf0675ef5547c2a6733f52a892d4,1127517451,introduced,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,"src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$ch1:char(98)","src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$ch1:char(98)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch2(110)",bc255ccf5c239666ab54e5a31720d3f482ae78eb,4d46f014fb8ee44386feb5fec52509f35d0e36ea,1357193992,introduced,src/main/java/org/apache/commons/lang3/LocaleUtils.java,src/main/java/org/apache/commons/lang3/LocaleUtils.java,"src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch2:char(102)","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$ch2:char(102)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$len(100)",bc255ccf5c239666ab54e5a31720d3f482ae78eb,4d46f014fb8ee44386feb5fec52509f35d0e36ea,1357193992,modifier change,src/main/java/org/apache/commons/lang3/LocaleUtils.java,src/main/java/org/apache/commons/lang3/LocaleUtils.java,"src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$len:int(92)","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$len:int(92)",TP,"Add Variable Modifier final in variable len : int in method public toLocale(str String) : Locale from class org.apache.commons.lang3.LocaleUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$len(100)",b2da02296f79e4119b749522a1912f5be5ea4f8c,d1f5ebf4122aaf0675ef5547c2a6733f52a892d4,1127517451,introduced,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,"src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$len:int(93)","src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$len:int(93)",TP,"Extract Variable len : int in method public toLocale(str String) : Locale from class org.apache.commons.lang.LocaleUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$str(90)",bc255ccf5c239666ab54e5a31720d3f482ae78eb,4d46f014fb8ee44386feb5fec52509f35d0e36ea,1357193992,modifier change,src/main/java/org/apache/commons/lang3/LocaleUtils.java,src/main/java/org/apache/commons/lang3/LocaleUtils.java,"src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$str:String(88)","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$str:String(88)",TP,"Add Parameter Modifier final in parameter str : String in method public toLocale(str String) : Locale from class org.apache.commons.lang3.LocaleUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.LocaleUtils#toLocale(String)$str(90)",6811e7b373458f67a6dc12b05bd04cfc6843409c,04e1537d3c41646fdb56b60fae70a630ae177796,1124228486,introduced,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,"src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$str:String(65)","src/java/org.apache.commons.lang.LocaleUtils#toLocale(String)$str:String(65)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros(523)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros:boolean(509)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros:boolean(509)",TP,"Add Variable Modifier final in variable allZeros : boolean in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros(523)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$allZeros:boolean(257)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$allZeros:boolean(257)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros(597)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros:boolean(583)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros:boolean(583)",TP,"Add Variable Modifier final in variable allZeros : boolean in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$allZeros(597)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$allZeros:boolean(327)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$allZeros:boolean(327)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$b(607)",7fd021d82ff431fb31f42bc6c5c44a3b979cb426,8d6bc0ca625f3a1a98b486541fa613b2fac4b41c,1465730635,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$b:BigDecimal(607)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$b:BigDecimal(607)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d(556)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d:Double(542)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d:Double(542)",TP,"Add Variable Modifier final in variable d : Double in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d(556)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$d:Double(290)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$d:Double(290)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d(600)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d:Double(593)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d:Double(593)",TP,"Add Variable Modifier final in variable d : Double in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$d(600)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$d:Double(336)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$d:Double(336)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$dec(487)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$dec:String(225)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$dec:String(225)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$decPos(489)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$decPos:int(476)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$decPos:int(476)",TP,"Add Variable Modifier final in variable decPos : int in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$decPos(489)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$decPos:int(227)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$decPos:int(227)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$e(565)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$e:NumberFormatException(551)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$e:NumberFormatException(551)",TP,"Add Variable Modifier final in variable e : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$e(565)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$e:NumberFormatException(298)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$e:NumberFormatException(298)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$exp(488)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$exp:String(226)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$exp:String(226)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$expPos(490)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$expPos:int(477)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$expPos:int(477)",TP,"Add Variable Modifier final in variable expPos : int in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$expPos(490)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$expPos:int(228)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$expPos:int(228)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f(542)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f:Float(528)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f:Float(528)",TP,"Add Variable Modifier final in variable f : Float in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f(542)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$f:Float(277)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$f:Float(277)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f(599)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f:Float(585)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f:Float(585)",TP,"Add Variable Modifier final in variable f : Float in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$f(599)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$f:Float(329)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$f:Float(329)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$firstSigDigit(467)",396afc3e4693cfee182efe582455f2d97058c068,d1a45e9738de5b3e299bb51e987565dcce55fee6,1374800632,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$firstSigDigit:char(467)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$firstSigDigit:char(467)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits(476)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits:int(463)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits:int(463)",TP,"Add Variable Modifier final in variable hexDigits : int in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits(476)",2c6fa89aa47436c5909601490fd56a18f75a0bc4,c7adc7e86f118a92ac4eee5a3c6775eec11af115,1347484218,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits:int(460)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hexDigits:int(460)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hex_prefixes(458)",c1f9320476ab9e5f262fdf8a5b3e1ff70199aed8,d844d1eb5e5b530a82b77302f1f284fd2f924be3,1352770780,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hex_prefixes:String[](453)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$hex_prefixes:String[](453)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$i(468)",396afc3e4693cfee182efe582455f2d97058c068,d1a45e9738de5b3e299bb51e987565dcce55fee6,1374800632,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$i:int(468)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$i:int(468)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$lastChar(485)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$lastChar:char(472)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$lastChar:char(472)",TP,"Add Variable Modifier final in variable lastChar : char in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$lastChar(485)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$lastChar:char(223)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$lastChar:char(223)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$mant(486)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$mant:String(224)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$mant:String(224)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(532)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(532)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(549)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(549)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(560)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(560)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(585)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(585)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(590)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(590)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(613)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(518)",TP,"Add Variable Modifier final in variable nfe : NumberFormatException in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$nfe(613)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$nfe:NumberFormatException(267)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$numeric(522)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$numeric:String(508)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$numeric:String(508)",TP,"Add Variable Modifier final in variable numeric : String in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$numeric(522)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$numeric:String(256)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$numeric:String(256)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx(460)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx:String(456)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx:String(456)",TP,"Add Variable Modifier final in variable pfx : String in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx(460)",c1f9320476ab9e5f262fdf8a5b3e1ff70199aed8,d844d1eb5e5b530a82b77302f1f284fd2f924be3,1352770780,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx:String(455)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfx:String(455)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfxLen(459)",c1f9320476ab9e5f262fdf8a5b3e1ff70199aed8,d844d1eb5e5b530a82b77302f1f284fd2f924be3,1352770780,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfxLen:int(454)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$pfxLen:int(454)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$str(450)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$str:String(446)","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$str:String(446)",TP,"Add Parameter Modifier final in parameter str : String in method public createNumber(str String) : Number from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$str(450)",69756032f5cd94fa04084a30a071e7fcb5aa2970,af6aba957f4dc4d19d5f295172b4ddc941ca1681,1058717001,rename,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$val:String(209)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$str:String(218)",TP,"Rename Parameter val : String to str : String in method public createNumber(str String) : Number from class org.apache.commons.lang.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#createNumber(String)$str(450)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$val:String(206)","src/java/org.apache.commons.lang.math.NumberUtils#createNumber(String)$val:String(206)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$allowSigns(1406)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$allowSigns:boolean(1406)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$allowSigns:boolean(1406)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$chars(1402)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$chars:char[](1402)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$chars:char[](1402)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$foundDigit(1407)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$foundDigit:boolean(1407)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$foundDigit:boolean(1407)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasDecPoint(1405)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasDecPoint:boolean(1405)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasDecPoint:boolean(1405)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasExp(1404)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasExp:boolean(1404)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$hasExp:boolean(1404)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$start(1409)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$start:int(1410)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$start:int(1410)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$str(1398)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$str:String(1398)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$str:String(1398)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$sz(1403)",1a1fc65b04bcbe2e95d0fa300fce110e1224906e,c503d742f094dc2048b72c3f78f5e2e6070a44e1,1473555668,introduced,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$sz:int(1403)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isCreatable(String)$sz:int(1403)",TP,"Extract Method public isCreatable(str String) : boolean extracted from public isNumber(str String) : boolean in class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isNumber(String)$str(1372)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,"src/main/java/org.apache.commons.lang3.math.NumberUtils#isNumber(String)$str:String(1310)","src/main/java/org.apache.commons.lang3.math.NumberUtils#isNumber(String)$str:String(1310)",TP,"Add Parameter Modifier final in parameter str : String in method public isNumber(str String) : boolean from class org.apache.commons.lang3.math.NumberUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.math.NumberUtils#isNumber(String)$str(1372)",9949f090897b042dce8fa86830f40d11ac7701df,2d06a7ce861432fc702168fd4c94bc00ddfc39eb,1056489291,introduced,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,"src/java/org.apache.commons.lang.math.NumberUtils#isNumber(String)$str:String(803)","src/java/org.apache.commons.lang.math.NumberUtils#isNumber(String)$str:String(803)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",1f0dfc31b51a445eb2cfbee5321800cf51e10b67,88654b79c92386b7c411f064cc373e7698a49449,1508526146,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder:StringBuilder(385)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder:StringBuilder(385)",TP,"Add Variable Modifier final in variable builder : StringBuilder in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",ce1bd5785d05d3df324e1169aab4abd45f4281f7,30c85ad05363767deeefee577063c2c432b971d4,1487271541,type change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:StringBuffer(383)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder:StringBuilder(383)",TP,"Change Variable Type buffer : StringBuffer to builder : StringBuilder in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",ce1bd5785d05d3df324e1169aab4abd45f4281f7,30c85ad05363767deeefee577063c2c432b971d4,1487271541,rename,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:StringBuffer(383)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder:StringBuilder(383)",TP,"Rename Variable buffer : StringBuffer to builder : StringBuilder in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",f13d18cff3f0932e727dda04bf80008fc2fbbc70,f643b4fa939e89348618ddffae20a804f4461363,1481696824,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](382)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:StringBuffer(382)",TP,"Remove Variable Modifier final in variable buffer : char[] in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",f13d18cff3f0932e727dda04bf80008fc2fbbc70,f643b4fa939e89348618ddffae20a804f4461363,1481696824,type change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](382)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:StringBuffer(382)",TP,"Change Variable Type buffer : char[] to buffer : StringBuffer in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](251)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](251)",TP,"Add Variable Modifier final in variable buffer : char[] in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$builder(385)",b0082bc60670ee42eaa135e8d89be2eb696103b2,c79adcc3f0b99cb838155909a989fbd7bd71e600,1126346861,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](234)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$buffer:char[](234)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars(349)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars:char[](224)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars:char[](224)",TP,"Add Parameter Modifier final in parameter chars : char[] in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars(349)",6d98f1d5f37dc5d46f6d2e27d50fa0a9b6e6a078,43db5237ab2a2dbc3a79daed10499bb4dbf92a4e,1059693875,rename,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$set:char[](252)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars:char[](252)",TP,"Rename Parameter set : char[] to chars : char[] in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$chars(349)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$set:char[](250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$set:char[](250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$codePoint(389)",f13d18cff3f0932e727dda04bf80008fc2fbbc70,f643b4fa939e89348618ddffae20a804f4461363,1481696824,type change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$ch:char(386)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$codePoint:int(386)",TP,"Change Variable Type ch : char to codePoint : int in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$codePoint(389)",f13d18cff3f0932e727dda04bf80008fc2fbbc70,f643b4fa939e89348618ddffae20a804f4461363,1481696824,rename,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$ch:char(386)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$codePoint:int(386)",TP,"Rename Variable ch : char to codePoint : int in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$codePoint(389)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$ch:char(264)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$ch:char(264)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$count(348)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$count:int(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$count:int(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$end(348)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$end:int(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$end:int(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$first_letter_ascii(377)",b0bcf4f60a1e92480d78e44e3fda6e42cfc1b207,695342cb1cef42f30fd1a8496f181c92b21ae82d,1479484283,introduced,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$first_letter_ascii:int(372)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$first_letter_ascii:int(372)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap(386)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap:int(252)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap:int(252)",TP,"Add Variable Modifier final in variable gap : int in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap(386)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap:int(261)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$gap:int(261)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters(348)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters:boolean(223)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters:boolean(223)",TP,"Add Parameter Modifier final in parameter letters : boolean in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters(348)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters:boolean(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$letters:boolean(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numberOfChars(405)",f13d18cff3f0932e727dda04bf80008fc2fbbc70,f643b4fa939e89348618ddffae20a804f4461363,1481696824,introduced,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numberOfChars:int(402)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numberOfChars:int(402)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers(348)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers:boolean(223)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers:boolean(223)",TP,"Add Parameter Modifier final in parameter numbers : boolean in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers(348)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers:boolean(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$numbers:boolean(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random(349)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random:Random(224)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random:Random(224)",TP,"Add Parameter Modifier final in parameter random : Random in method public random(count int, start int, end int, letters boolean, numbers boolean, chars char[], random Random) : String from class org.apache.commons.lang3.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random(349)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random:Random(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$random:Random(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$start(348)",0c7e480658f634a69fa6cff97783e1e1de2edc77,d9bc18e804bf754b8cc11c4ce61a5dc1b9cda242,1044157573,introduced,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,"src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$start:int(250)","src/java/org.apache.commons.lang.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$start:int(250)",TP,"Extract Method public random(count int, start int, end int, letters boolean, numbers boolean, set char[], random Random) : String extracted from public random(count int, start int, end int, letters boolean, numbers boolean, set char[]) : String in class org.apache.commons.lang.RandomStringUtils"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$zero_digit_ascii(376)",b0bcf4f60a1e92480d78e44e3fda6e42cfc1b207,695342cb1cef42f30fd1a8496f181c92b21ae82d,1479484283,introduced,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,"src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$zero_digit_ascii:int(371)","src/main/java/org.apache.commons.lang3.RandomStringUtils#random(int, int, int, boolean, boolean, char[], Random)$zero_digit_ascii:int(371)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$altered(766)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$altered:boolean(397)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$altered:boolean(397)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf(758)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf:StrBuilder(578)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf:StrBuilder(578)",TP,"Add Parameter Modifier final in parameter buf : StrBuilder in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf(758)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf:StrBuilder(391)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$buf:StrBuilder(391)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufEnd(769)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufEnd:int(400)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufEnd:int(400)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName(816)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName:StrBuilder(630)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName:StrBuilder(630)",TP,"Add Variable Modifier final in variable bufName : StrBuilder in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName(816)",790140111daf2c9721d7e30c662bc3a2ab975a2a,6f6eddbf3a41fa2838f062fee7724a69b86206df,1286565451,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName:StrBuilder(628)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$bufName:StrBuilder(628)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$change(865)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$change:int(447)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$change:int(447)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$chars(768)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$chars:char[](399)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$chars:char[](399)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endMatchLen(793)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endMatchLen:int(419)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endMatchLen:int(419)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos(821)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos:int(635)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos:int(635)",TP,"Add Variable Modifier final in variable endPos : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos(821)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos:int(428)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$endPos:int(428)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape(761)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape:char(581)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape:char(581)",TP,"Add Variable Modifier final in variable escape : char in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape(761)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape:char(394)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$escape:char(394)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$i(829)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$i:int(805)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$i:int(805)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length(758)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length:int(578)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length:int(578)",TP,"Add Parameter Modifier final in parameter length : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length(758)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length:int(391)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$length:int(391)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$lengthChange(767)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$lengthChange:int(398)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$lengthChange:int(398)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$nestedVarCount(794)",790140111daf2c9721d7e30c662bc3a2ab975a2a,6f6eddbf3a41fa2838f062fee7724a69b86206df,1286565451,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$nestedVarCount:int(606)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$nestedVarCount:int(606)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset(758)",adfcc014bd6fd24ae76425f203ae5cc1888ee33f,5bd622dab027ef37001a630a7c825c5b8c19d1db,1358838462,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset:int(578)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset:int(578)",TP,"Add Parameter Modifier final in parameter offset : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset(758)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset:int(391)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$offset:int(391)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pfxMatcher(759)",4be45b6dccccc9b536b5258f940be93a585e5677,1d97f23c08d8dbf889e976f9248d37173dbadb95,1382114955,rename,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$prefixMatcher:StrMatcher(741)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pfxMatcher:StrMatcher(741)",TP,"Rename Variable prefixMatcher : StrMatcher to pfxMatcher : StrMatcher in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pfxMatcher(759)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$prefixMatcher:StrMatcher(579)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$prefixMatcher:StrMatcher(579)",TP,"Add Variable Modifier final in variable prefixMatcher : StrMatcher in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pfxMatcher(759)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$prefixMatcher:StrMatcher(392)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$prefixMatcher:StrMatcher(392)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pos(770)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pos:int(401)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$pos:int(401)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables(758)",950def5b6f5fa146ea6035229f3751f224981f5e,654fb75d80a63fa551ced73c3b652f4120573590,1237174520,type change,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables:List(536)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables:List<String>(536)",TP,"Change Parameter Type priorVariables : List to priorVariables : List<String> in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables(758)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables:List(391)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$priorVariables:List(391)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen(772)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen:int(590)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen:int(590)",TP,"Add Variable Modifier final in variable startMatchLen : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen(772)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen:int(403)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startMatchLen:int(403)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos(791)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos:int(605)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos:int(605)",TP,"Add Variable Modifier final in variable startPos : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos(791)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos:int(417)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$startPos:int(417)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$substitutionInVariablesEnabled(763)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$substitutionInVariablesEnabled:boolean(743)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$substitutionInVariablesEnabled:boolean(743)",TP,"Extract Variable substitutionInVariablesEnabled : boolean in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffMatcher(760)",4be45b6dccccc9b536b5258f940be93a585e5677,1d97f23c08d8dbf889e976f9248d37173dbadb95,1382114955,rename,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffixMatcher:StrMatcher(742)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffMatcher:StrMatcher(742)",TP,"Rename Variable suffixMatcher : StrMatcher to suffMatcher : StrMatcher in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffMatcher(760)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffixMatcher:StrMatcher(580)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffixMatcher:StrMatcher(580)",TP,"Add Variable Modifier final in variable suffixMatcher : StrMatcher in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffMatcher(760)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffixMatcher:StrMatcher(393)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$suffixMatcher:StrMatcher(393)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top(765)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top:boolean(583)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top:boolean(583)",TP,"Add Variable Modifier final in variable top : boolean in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top(765)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top:boolean(396)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$top:boolean(396)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimMatcher(762)",4be45b6dccccc9b536b5258f940be93a585e5677,1d97f23c08d8dbf889e976f9248d37173dbadb95,1382114955,rename,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatcher:StrMatcher(744)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimMatcher:StrMatcher(744)",TP,"Rename Variable valueDelimiterMatcher : StrMatcher to valueDelimMatcher : StrMatcher in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimMatcher(762)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatcher:StrMatcher(742)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatcher:StrMatcher(742)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatchLen(828)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatchLen:int(804)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$valueDelimiterMatchLen:int(804)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varDefaultValue(824)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varDefaultValue:String(800)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varDefaultValue:String(800)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen(862)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen:int(653)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen:int(653)",TP,"Add Variable Modifier final in variable varLen : int in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen(862)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen:int(444)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varLen:int(444)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varName(823)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varName:String(426)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varName:String(426)",TP,"added with method"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExpr(812)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExpr:String(788)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExpr:String(788)",TP,"Extract Variable varNameExpr : String in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExprChars(827)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,introduced,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExprChars:char[](803)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varNameExprChars:char[](803)",TP,"new variable"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue(855)",11def3cc7ec738759f4808e591c0b8cce60f1784,abc5dda962fe00fba27f98807ca70439a37a3746,1379532916,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(731)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(831)",TP,"Remove Variable Modifier final in variable varValue : String in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue(855)",5bd622dab027ef37001a630a7c825c5b8c19d1db,5292526e476ffbb19c6613a98464054236c86ace,1358838585,modifier change,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,"src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(649)","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(649)",TP,"Add Variable Modifier final in variable varValue : String in method private substitute(buf StrBuilder, offset int, length int, priorVariables List<String>) : int from class org.apache.commons.lang3.text.StrSubstitutor"
"https://github.com/apache/commons-lang.git","src/main/java/org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue(855)",8b2b1ba0f254abddd2e0587ee6c4098339ea8db8,4bfa1f6cb94c368ffa4febc3a2236886ced2290f,1153702837,introduced,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,"src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(441)","src/java/org.apache.commons.lang.text.StrSubstitutor#substitute(StrBuilder, int, int, List)$varValue:String(441)",TP,"added with method"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint(745)",add3765d1626a04fb98b8f36cb725eb32806d8b6,0c42d258e9d9d30eeeee7d0f1487ef0ac8b90fa4,1481295943,modifier change,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint:PendingCheckpoint(625)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint:PendingCheckpoint(631)",TP,"Add Variable Modifier final in variable checkpoint : PendingCheckpoint in method public receiveAcknowledgeMessage(message AcknowledgeCheckpoint) : boolean from class org.apache.flink.runtime.checkpoint.CheckpointCoordinator"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint(745)",b1af2df81f2685ada49eada19b342306306c5e3a,7f0ce1428bc32181d6d79ca6f1226b9e2e3d93be,1430297241,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint:PendingCheckpoint(282)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpoint:PendingCheckpoint(282)",TP,"added with method"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpointId(736)",b1af2df81f2685ada49eada19b342306306c5e3a,7f0ce1428bc32181d6d79ca6f1226b9e2e3d93be,1430297241,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpointId:long(272)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$checkpointId:long(272)",TP,"added with method"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$message(726)",b1af2df81f2685ada49eada19b342306306c5e3a,7f0ce1428bc32181d6d79ca6f1226b9e2e3d93be,1430297241,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$message:AcknowledgeCheckpoint(263)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$message:AcknowledgeCheckpoint(263)",TP,"added with method"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$wasPendingCheckpoint(788)",add3765d1626a04fb98b8f36cb725eb32806d8b6,0c42d258e9d9d30eeeee7d0f1487ef0ac8b90fa4,1481295943,rename,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$isPendingCheckpoint:boolean(629)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$wasPendingCheckpoint:boolean(674)",TP,"Rename Variable isPendingCheckpoint : boolean to wasPendingCheckpoint : boolean in method public receiveAcknowledgeMessage(message AcknowledgeCheckpoint) : boolean from class org.apache.flink.runtime.checkpoint.CheckpointCoordinator"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$wasPendingCheckpoint(788)",6bdf9d07cc93ba5f3a193ceafc0e13d35353316b,d739ee2532e0fd49ef37508b1c2e4a355473aaa5,1452526243,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java,"flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$isPendingCheckpoint:boolean(534)","flink-runtime/src/main/java/org.apache.flink.runtime.checkpoint.CheckpointCoordinator#receiveAcknowledgeMessage(AcknowledgeCheckpoint)$isPendingCheckpoint:boolean(534)",TP,"new variable"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$coMapper(226)",51fc298128405d4ce0e047185ac1c6e5b1753546,a922473c0835a757e7108c79ad52f103ace86030,1456778239,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedStreams.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedStreams.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$coMapper:CoMapFunction<IN1,IN2,OUT>(200)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$coMapper:CoMapFunction<IN1,IN2,R>(200)",TP,"Change Parameter Type coMapper : CoMapFunction<IN1,IN2,OUT> to coMapper : CoMapFunction<IN1,IN2,R> in method public map(coMapper CoMapFunction<IN1,IN2,R>) : SingleOutputStreamOperator<R> from class org.apache.flink.streaming.api.datastream.ConnectedStreams"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$coMapper(226)",e73ea29593cdb8b4d9a11137b2188ca72673e98c,d56d48f1a1933f138f5d97f42b71aa64fad6bc6f,1408371796,introduced,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/CoDataStream.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/CoDataStream.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.CoDataStream#map(CoMapFunction)$coMapper:CoMapFunction<IN1,IN2,OUT>(92)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.CoDataStream#map(CoMapFunction)$coMapper:CoMapFunction<IN1,IN2,OUT>(92)",TP,"added with method"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$outTypeInfo(228)",51fc298128405d4ce0e047185ac1c6e5b1753546,a922473c0835a757e7108c79ad52f103ace86030,1456778239,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedStreams.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedStreams.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$outTypeInfo:TypeInformation<OUT>(202)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$outTypeInfo:TypeInformation<R>(202)",TP,"Change Variable Type outTypeInfo : TypeInformation<OUT> to outTypeInfo : TypeInformation<R> in method public map(coMapper CoMapFunction<IN1,IN2,R>) : SingleOutputStreamOperator<R> from class org.apache.flink.streaming.api.datastream.ConnectedStreams"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedStreams#map(CoMapFunction)$outTypeInfo(228)",94c8e3fa9086d847aac0cd75fddbc3b5a797b474,51c1f67791307c2b9355171f7398d104befc8de5,1418214458,introduced,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedDataStream.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedDataStream.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedDataStream#map(CoMapFunction)$outTypeInfo:TypeInformation<OUT>(404)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.ConnectedDataStream#map(CoMapFunction)$outTypeInfo:TypeInformation<OUT>(404)",TP,"Merge Variable [in1TypeWrapper : FunctionTypeWrapper<IN1>, in2TypeWrapper : FunctionTypeWrapper<IN2>, outTypeWrapper : FunctionTypeWrapper<OUT>] to outTypeInfo : TypeInformation<OUT> in method public map(coMapper CoMapFunction<IN1,IN2,OUT>) : SingleOutputStreamOperator<OUT,?> from class org.apache.flink.streaming.api.datastream.ConnectedDataStream"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter(685)",baaa3dacabdfa87c3c11882810e05dc384f24038,bac21bf5d77c8e15c608ecbf006d29e7af1dd68a,1439999584,type change,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java,"flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter:FilterFunction<OUT>(719)","flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(645)",TP,"Change Parameter Type filter : FilterFunction<OUT> to filter : FilterFunction<T> in method public filter(filter FilterFunction<T>) : SingleOutputStreamOperator<T,?> from class org.apache.flink.streaming.api.datastream.DataStream"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter(685)",e73ea29593cdb8b4d9a11137b2188ca72673e98c,d56d48f1a1933f138f5d97f42b71aa64fad6bc6f,1408371796,type change,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(440)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter:FilterFunction<OUT>(344)",TP,"Change Parameter Type filter : FilterFunction<T> to filter : FilterFunction<OUT> in method public filter(filter FilterFunction<OUT>) : SingleOutputStreamOperator<OUT,?> from class org.apache.flink.streaming.api.datastream.DataStream"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter(685)",fed03a2fe22ec33c81bcad0ad4ffb112d6277bbc,776bd3f6dbfd85db978ff4d5785935a19f43d77b,1408371770,type change,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(413)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.DataStream#filter(RichFilterFunction)$filter:RichFilterFunction<T>(422)",TP,"Change Parameter Type filter : FilterFunction<T> to filter : RichFilterFunction<T> in method public filter(filter RichFilterFunction<T>) : StreamOperator<T,T> from class org.apache.flink.streaming.api.DataStream"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter(685)",0465d300cbc6cf6c69dc4da2b64cecefaa2d77db,e73ea29593cdb8b4d9a11137b2188ca72673e98c,1408371770,type change,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.DataStream#filter(RichFilterFunction)$filter:RichFilterFunction<T>(424)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(440)",TP,"Change Parameter Type filter : RichFilterFunction<T> to filter : FilterFunction<T> in method public filter(filter FilterFunction<T>) : StreamOperator<T> from class org.apache.flink.streaming.api.DataStream"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.datastream.DataStream#filter(FilterFunction)$filter(685)",cde1d46344741ff8c87d2bad62d2f49e05fe3fe8,f8425f1d1e9c6846a684bd2745623b14b11ddd51,1408370221,introduced,flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java,flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java,"flink-addons/flink-streaming/src/main/java/eu.stratosphere.streaming.api.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(102)","flink-addons/flink-streaming/src/main/java/eu.stratosphere.streaming.api.DataStream#filter(FilterFunction)$filter:FilterFunction<T>(102)",TP,"added with method"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$e(111)",ab8e9bdb8428b8c9b2c7a72ccd3f9e7b6e2dad58,ec752138b0d1352c6a18e116fd469bcc1ca4dd42,1519057653,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$e:FlinkException(122)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$e:FlinkException(122)",TP,"new variable"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers(84)",5b65ca80802a5fdf4e2e77994438d8cf908ae442,0e3027d4b87cb5aff5c640ec809f2968b64be732,1513200872,type change,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers:ArrayList<Tuple2<RestHandlerSpecification,ChannelInboundHandler>>(148)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers:List<Tuple2<RestHandlerSpecification,ChannelInboundHandler>>(68)",TP,"Change Variable Type handlers : ArrayList<Tuple2<RestHandlerSpecification,ChannelInboundHandler>> to handlers : List<Tuple2<RestHandlerSpecification,ChannelInboundHandler>> in method protected initializeHandlers(restAddressFuture CompletableFuture<String>) : List<Tuple2<RestHandlerSpecification,ChannelInboundHandler>> from class org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers(84)",55b76d54f0dcc4bdaa96eaa463ce0bfcad23d239,dbabdb1cc2c122dbf1e83ffb9960491eaf4914bb,1505922627,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers:ArrayList<Tuple2<RestHandlerSpecification,ChannelInboundHandler>>(73)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$handlers:ArrayList<Tuple2<RestHandlerSpecification,ChannelInboundHandler>>(73)",TP,"new variable"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$jobSubmitHandler(90)",629953306ba0fe879bfd035911ca26b5275f3a25,ad380463d3d44cdd98302bf072bc5deba8696b5b,1507569104,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$jobSubmitHandler:JobSubmitHandler(200)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$jobSubmitHandler:JobSubmitHandler(200)",TP,"new variable"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$restAddressFuture(83)",2cb37cb937c6f225ad7afe829a28a6eda043ffc1,55b76d54f0dcc4bdaa96eaa463ce0bfcad23d239,1505896530,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$restAddressFuture:CompletableFuture<String>(63)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$restAddressFuture:CompletableFuture<String>(63)",TP,"Add Parameter restAddressFuture : CompletableFuture<String> in method protected initializeHandlers(restAddressFuture CompletableFuture<String>) : Collection<Tuple2<RestHandlerSpecification,ChannelInboundHandler>> from class org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint"
"https://github.com/apache/flink.git","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$timeout(88)",dbabdb1cc2c122dbf1e83ffb9960491eaf4914bb,c6243b8b1de6117623d3c4255f47f062d10c4602,1505979050,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint.java,"flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$timeout:Time(76)","flink-runtime/src/main/java/org.apache.flink.runtime.dispatcher.DispatcherRestEndpoint#initializeHandlers(CompletableFuture)$timeout:Time(76)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$cached(377)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$cached:FileSystem(364)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$cached:FileSystem(364)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$defaultUri(334)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$defaultUri:URI(321)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$defaultUri:URI(321)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory(392)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,type change,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsClass:String(374)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory:FileSystemFactory(372)",FP,"Change Variable Type fsClass : String to factory : FileSystemFactory in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory(392)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,modifier change,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsClass:String(374)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory:FileSystemFactory(372)",FP,"Add Variable Modifier final in variable factory : FileSystemFactory in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory(392)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,rename,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsClass:String(374)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory:FileSystemFactory(372)",FP,"Rename Variable fsClass : String to factory : FileSystemFactory in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory(392)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory:FileSystemFactory(372)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory:FileSystemFactory(372)",FN,"null"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$factory(392)",c590912c93a4059b40452dfa6cffbdd4d58cac13,ba8ed263695d16eacb4bdfdf195dd22c83bb53ed,1479853012,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsClass:String(328)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsClass:String(328)",FP,"Extract Method public getUnguardedFileSystem(uri URI) : FileSystem extracted from public get(uri URI) : FileSystem in class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs(391)",84a07a34ac22af14f2dd0319447ca5f45de6d0bb,3b786844dd9c0ce176eac98c8a05ebe50cb1ebe7,1507223685,modifier change,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs:FileSystem(288)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs:FileSystem(349)",TP,"Add Variable Modifier final in variable fs : FileSystem in method public getUnguardedFileSystem(uri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs(391)",c590912c93a4059b40452dfa6cffbdd4d58cac13,ba8ed263695d16eacb4bdfdf195dd22c83bb53ed,1479853012,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs:FileSystem(256)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fs:FileSystem(256)",TP,"Extract Method public getUnguardedFileSystem(uri URI) : FileSystem extracted from public get(uri URI) : FileSystem in class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri(322)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,modifier change,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(300)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri:URI(309)",FN,"Add Parameter Modifier final in parameter fsUri : URI in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri(322)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,rename,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(300)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri:URI(309)",FN,"Rename Parameter uri : URI to fsUri : URI in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri(322)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri:URI(309)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri:URI(309)",FP,"Add Parameter fsUri : URI in method public getUnguardedFileSystem(fsUri URI) : FileSystem from class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$fsUri(322)",c590912c93a4059b40452dfa6cffbdd4d58cac13,ba8ed263695d16eacb4bdfdf195dd22c83bb53ed,1479853012,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(255)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(255)",FN,"Extract Method public getUnguardedFileSystem(uri URI) : FileSystem extracted from public get(uri URI) : FileSystem in class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$ignored(349)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$ignored:URISyntaxException(336)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$ignored:URISyntaxException(336)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$key(373)",c590912c93a4059b40452dfa6cffbdd4d58cac13,ba8ed263695d16eacb4bdfdf195dd22c83bb53ed,1479853012,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$key:FSKey(296)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$key:FSKey(296)",TP,"Extract Method public getUnguardedFileSystem(uri URI) : FileSystem extracted from public get(uri URI) : FileSystem in class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$rewrittenUri(335)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$rewrittenUri:URI(322)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$rewrittenUri:URI(322)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$supposedUri(367)",c590912c93a4059b40452dfa6cffbdd4d58cac13,ba8ed263695d16eacb4bdfdf195dd22c83bb53ed,1479853012,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$supposedUri:String(290)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$supposedUri:String(290)",TP,"Extract Method public getUnguardedFileSystem(uri URI) : FileSystem extracted from public get(uri URI) : FileSystem in class org.apache.flink.core.fs.FileSystem"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri(327)",a5ef09bb601cdd77fcb94e9ce633fdf979031aaf,536675b03a5050fda9c3e1fd403818cb50dcc6ff,1507281370,introduced,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java,"flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(314)","flink-core/src/main/java/org.apache.flink.core.fs.FileSystem#getUnguardedFileSystem(URI)$uri:URI(314)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(440)",c923fb3c1c1d61462e1079198ae9fb735bb0acf2,2cc5d98c690c1b1b1ff1f48628ca58b1b4f0c932,1442313211,rename,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Class<?extendsSerializer<?>>>(270)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry:Map.Entry<Class<?>,ExecutionConfig.SerializableSerializer<?>>(268)",TP,"Rename Variable serializer : ExecutionConfig.Entry<Class<?>,Class<? extends Serializer<?>>> to entry : Map.Entry<Class<?>,ExecutionConfig.SerializableSerializer<?>> in method private checkKryoInitialized() : void from class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(440)",c923fb3c1c1d61462e1079198ae9fb735bb0acf2,2cc5d98c690c1b1b1ff1f48628ca58b1b4f0c932,1442313211,type change,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Class<?extendsSerializer<?>>>(270)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry:Map.Entry<Class<?>,ExecutionConfig.SerializableSerializer<?>>(268)",TP,"Change Variable Type serializer : ExecutionConfig.Entry<Class<?>,Class<? extends Serializer<?>>> to entry : Map.Entry<Class<?>,ExecutionConfig.SerializableSerializer<?>> in method private checkKryoInitialized() : void from class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(440)",5015ab490f89d384ac93752c22caf201ceb43776,354efec0f9da0fa03ea9b337b02a1a2a03a9ac16,1424271128,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Class<?extendsSerializer<?>>>(269)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Class<?extendsSerializer<?>>>(269)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(444)",c923fb3c1c1d61462e1079198ae9fb735bb0acf2,2cc5d98c690c1b1b1ff1f48628ca58b1b4f0c932,1442313211,rename,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Serializer<?>>(267)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry:Map.Entry<Class<?>,Class<?extendsSerializer<?>>>(272)",TP,"Rename Variable serializer : ExecutionConfig.Entry<Class<?>,Serializer<?>> to entry : Map.Entry<Class<?>,Class<? extends Serializer<?>>> in method private checkKryoInitialized() : void from class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(444)",c923fb3c1c1d61462e1079198ae9fb735bb0acf2,2cc5d98c690c1b1b1ff1f48628ca58b1b4f0c932,1442313211,type change,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Serializer<?>>(267)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry:Map.Entry<Class<?>,Class<?extendsSerializer<?>>>(272)",TP,"Change Variable Type serializer : ExecutionConfig.Entry<Class<?>,Serializer<?>> to entry : Map.Entry<Class<?>,Class<? extends Serializer<?>>> in method private checkKryoInitialized() : void from class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$entry(444)",5015ab490f89d384ac93752c22caf201ceb43776,354efec0f9da0fa03ea9b337b02a1a2a03a9ac16,1424271128,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Serializer<?>>(266)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer#checkKryoInitialized()$serializer:ExecutionConfig.Entry<Class<?>,Serializer<?>>(266)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$host(76)",028fcf55c41f4b2a7677eb31d0ead3973e457efc,c32569aed12ffa968e2c2289c2d56db262c0eba4,1411236168,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,"flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$host:String(66)","flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$host:String(66)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$isw(133)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,introduced,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$isw:LocatableInputSplitWithCount(131)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$isw:LocatableInputSplitWithCount(131)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$localSplits(111)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,type change,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$localSplits:List<LocatableInputSplit>(95)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$localSplits:LocatableInputSplitChooser(109)",TP,"Change Variable Type localSplits : List<LocatableInputSplit> to localSplits : LocatableInputSplitChooser in method public getNextInputSplit(host String) : LocatableInputSplit from class org.apache.flink.api.common.io.LocatableInputSplitAssigner"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$localSplits(111)",028fcf55c41f4b2a7677eb31d0ead3973e457efc,c32569aed12ffa968e2c2289c2d56db262c0eba4,1411236168,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,"flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$localSplits:List<LocatableInputSplit>(94)","flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$localSplits:List<LocatableInputSplit>(94)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$prior(119)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,type change,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$prior:List<LocatableInputSplit>(103)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$prior:LocatableInputSplitChooser(117)",TP,"Change Variable Type prior : List<LocatableInputSplit> to prior : LocatableInputSplitChooser in method public getNextInputSplit(host String) : LocatableInputSplit from class org.apache.flink.api.common.io.LocatableInputSplitAssigner"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$prior(119)",028fcf55c41f4b2a7677eb31d0ead3973e457efc,c32569aed12ffa968e2c2289c2d56db262c0eba4,1411236168,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,"flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$prior:List<LocatableInputSplit>(102)","flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$prior:List<LocatableInputSplit>(102)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$remaining(128)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,type change,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$remaining:LocatableInputSplit[](112)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$remaining:LocatableInputSplitWithCount[](126)",TP,"Change Variable Type remaining : LocatableInputSplit[] to remaining : LocatableInputSplitWithCount[] in method public getNextInputSplit(host String) : LocatableInputSplit from class org.apache.flink.api.common.io.LocatableInputSplitAssigner"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$remaining(128)",028fcf55c41f4b2a7677eb31d0ead3973e457efc,c32569aed12ffa968e2c2289c2d56db262c0eba4,1411236168,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,"flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$remaining:LocatableInputSplit[](111)","flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$remaining:LocatableInputSplit[](111)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$split(83)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,introduced,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(81)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(81)",FN,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$split(83)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,type change,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplit(141)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(81)",FP,"Change Variable Type split : LocatableInputSplit to split : LocatableInputSplitWithCount in method public getNextInputSplit(host String) : LocatableInputSplit from class org.apache.flink.api.common.io.LocatableInputSplitAssigner"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$split(83)",028fcf55c41f4b2a7677eb31d0ead3973e457efc,c32569aed12ffa968e2c2289c2d56db262c0eba4,1411236168,introduced,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner.java,"flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplit(139)","flink-runtime/src/main/java/org.apache.flink.runtime.jobmanager.splitassigner.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplit(139)",FP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$split(159)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,introduced,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(157)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(157)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$split(180)",3799560e1c5bca07fef165fb4b05ddd7a1a937b7,e0a4ee07084bc6ab56a20fbc4a18863462da93eb,1418395997,introduced,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(178)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String)$split:LocatableInputSplitWithCount(178)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$taskId(76)",27a479fed3a58c2377220a292eda965b78241907,7452802bc25c0915b7347d4faf2d60adcfc27644,1423131483,introduced,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,flink-core/src/main/java/org/apache/flink/api/common/io/LocatableInputSplitAssigner.java,"flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$taskId:int(74)","flink-core/src/main/java/org.apache.flink.api.common.io.LocatableInputSplitAssigner#getNextInputSplit(String, int)$taskId:int(74)",TP,"Add Parameter taskId : int in method public getNextInputSplit(host String, taskId int) : LocatableInputSplit from class org.apache.flink.api.common.io.LocatableInputSplitAssigner"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$actualSubclass(377)",6b402f43d01495fd9a6bea1c80b2b2b50393b92d,7407076d3990752eb5fa4072cd036efd2f656cbc,1423570503,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$actualSubclass:Class<?>(390)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$actualSubclass:Class<?>(390)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$field(411)",ea4c8828c0d0170ccfe493494f06e6eb86ffdaf7,76d4a75e823c31a899f2143fb6be185b90e55532,1412082638,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$field:Object(201)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$field:Object(201)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$flags(370)",6b402f43d01495fd9a6bea1c80b2b2b50393b92d,7407076d3990752eb5fa4072cd036efd2f656cbc,1423570503,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$flags:int(383)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$flags:int(383)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$i(404)",ea4c8828c0d0170ccfe493494f06e6eb86ffdaf7,76d4a75e823c31a899f2143fb6be185b90e55532,1412082638,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$i:int(200)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$i:int(200)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$isNull(405)",ec82d973d2e2c6f03d147fb87ecb7402da1776fa,926f835adb9cb77bcda19e4ed009cc07c89cea74,1412761141,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$isNull:boolean(202)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$isNull:boolean(202)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$source(369)",ea4c8828c0d0170ccfe493494f06e6eb86ffdaf7,76d4a75e823c31a899f2143fb6be185b90e55532,1412082638,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$source:DataInputView(190)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$source:DataInputView(190)",TP,"added with method"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassName(381)",6b402f43d01495fd9a6bea1c80b2b2b50393b92d,7407076d3990752eb5fa4072cd036efd2f656cbc,1423570503,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassName:String(394)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassName:String(394)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassSerializer(378)",6b402f43d01495fd9a6bea1c80b2b2b50393b92d,7407076d3990752eb5fa4072cd036efd2f656cbc,1423570503,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassSerializer:TypeSerializer(391)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassSerializer:TypeSerializer(391)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassTag(393)",6b402f43d01495fd9a6bea1c80b2b2b50393b92d,7407076d3990752eb5fa4072cd036efd2f656cbc,1423570503,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassTag:int(406)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$subclassTag:int(406)",TP,"new variable"
"https://github.com/apache/flink.git","flink-core/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$target(375)",ea4c8828c0d0170ccfe493494f06e6eb86ffdaf7,76d4a75e823c31a899f2143fb6be185b90e55532,1412082638,introduced,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java,"flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$target:T(191)","flink-java/src/main/java/org.apache.flink.api.java.typeutils.runtime.PojoSerializer#deserialize(DataInputView)$target:T(191)",TP,"added with method"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client(204)",5017cb48c71af51c919e6111d85ba79408b1b1ab,facf2ac67ae3ffd4cffd7c6f8536fd7953795fb9,1519249744,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:StandaloneClusterClient(201)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:ClusterClient<?>(204)",TP,"Change Variable Type client : StandaloneClusterClient to client : ClusterClient<?> in method protected executeRemotely(streamGraph StreamGraph, jarFiles List<URL>) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client(204)",5017cb48c71af51c919e6111d85ba79408b1b1ab,facf2ac67ae3ffd4cffd7c6f8536fd7953795fb9,1519249744,modifier change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:StandaloneClusterClient(201)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:ClusterClient<?>(204)",TP,"Add Variable Modifier final in variable client : ClusterClient<?> in method protected executeRemotely(streamGraph StreamGraph, jarFiles List<URL>) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client(204)",2ce64e791b3a2e2b8a8e4ac774f2ca45da5660dc,38d3720863c6187153174d0df57fc414b0cf8e96,1515770044,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:ClusterClient(202)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:StandaloneClusterClient(201)",TP,"Change Variable Type client : ClusterClient to client : StandaloneClusterClient in method protected executeRemotely(streamGraph StreamGraph, jarFiles List<URL>) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client(204)",efc344a4e2ef8ea3e0b1e4da621196e9afeb75cc,f9b52a3114a2114e6846091acf3abb294a49615b,1466152678,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:Client(198)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client:ClusterClient(199)",TP,"Change Variable Type client : Client to client : ClusterClient in method protected executeRemotely(streamGraph StreamGraph, jarFiles List<URL>) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$client(204)",70464bb0a44f682c155fdfdd2a6b0a6cc1203663,076223cb9540c973eaba7d24e50c0e1f3eb80308,1411585633,introduced,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$client:Client(106)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$client:Client(106)",TP,"Extract Method private executeRemotely(jobGraph JobGraph) : void extracted from public execute() : void in class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$configuration(198)",70464bb0a44f682c155fdfdd2a6b0a6cc1203663,076223cb9540c973eaba7d24e50c0e1f3eb80308,1411585633,introduced,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$configuration:Configuration(105)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$configuration:Configuration(105)",TP,"Extract Method private executeRemotely(jobGraph JobGraph) : void extracted from public execute() : void in class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$jarFiles(190)",0ee7c79a32f3aa39f740bdecbf53487f39f6591f,7498d3e35a29449270a88a30eb32b7de74887f5b,1461599432,introduced,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$jarFiles:List<URL>(184)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$jarFiles:List<URL>(184)",TP,"Add Parameter jarFiles : List<URL> in method protected executeRemotely(streamGraph StreamGraph, jarFiles List<URL>) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$streamGraph(190)",7fdaa4e2fb88169539cfe314b46e6ee7cdb108b3,bf29de981c2bcd5cb5d33c68b158c95c8820f43d,1446400804,type change,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$jobGraph:JobGraph(181)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph)$streamGraph:StreamGraph(180)",TP,"Change Parameter Type jobGraph : JobGraph to streamGraph : StreamGraph in method private executeRemotely(streamGraph StreamGraph) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$streamGraph(190)",7fdaa4e2fb88169539cfe314b46e6ee7cdb108b3,bf29de981c2bcd5cb5d33c68b158c95c8820f43d,1446400804,rename,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$jobGraph:JobGraph(181)","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph)$streamGraph:StreamGraph(180)",TP,"Rename Parameter jobGraph : JobGraph to streamGraph : StreamGraph in method private executeRemotely(streamGraph StreamGraph) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$streamGraph(190)",70464bb0a44f682c155fdfdd2a6b0a6cc1203663,076223cb9540c973eaba7d24e50c0e1f3eb80308,1411585633,introduced,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$jobGraph:JobGraph(90)","flink-addons/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$jobGraph:JobGraph(90)",TP,"Extract Method private executeRemotely(jobGraph JobGraph) : void extracted from public execute() : void in class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$term(226)",b70431239a5e18555866addb41ee6edf2b79ff60,2b8db40ac40d70027ce331f3a04c6ca7aa562a84,1429705186,introduced,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$term:String(137)","flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$term:String(137)",TP,"new variable"
"https://github.com/apache/flink.git","flink-streaming-java/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(StreamGraph, List)$usercodeClassLoader(195)",b70431239a5e18555866addb41ee6edf2b79ff60,2b8db40ac40d70027ce331f3a04c6ca7aa562a84,1429705186,introduced,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/RemoteStreamEnvironment.java,"flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$usercodeClassLoader:ClassLoader(116)","flink-staging/flink-streaming/flink-streaming-core/src/main/java/org.apache.flink.streaming.api.environment.RemoteStreamEnvironment#executeRemotely(JobGraph)$usercodeClassLoader:ClassLoader(116)",TP,"Extract Variable usercodeClassLoader : ClassLoader in method private executeRemotely(jobGraph JobGraph) : JobExecutionResult from class org.apache.flink.streaming.api.environment.RemoteStreamEnvironment"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$catalog(592)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$catalog:String(445)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$catalog:String(445)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$checkAnn(641)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$checkAnn:Check(570)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$checkAnn:Check(570)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$classGenerators(776)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$classGenerators:HashMap<String,IdGenerator>(772)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$classGenerators:HashMap<String,IdentifierGeneratorDefinition>(812)",TP,"Change Variable Type classGenerators : HashMap<String,IdGenerator> to classGenerators : HashMap<String,IdentifierGeneratorDefinition> in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, context MetadataBuildingContext) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$classGenerators(776)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$classGenerators:HashMap<String,IdGenerator>(664)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$classGenerators:HashMap<String,IdGenerator>(664)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$classType(537)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$classType:AnnotatedClassType(399)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$classType:AnnotatedClassType(399)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$clazzToProcess(525)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$clazzToProcess:XClass(395)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$clazzToProcess:XClass(395)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$constraints(642)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$constraints:String(571)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$constraints:String(571)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context(527)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,rename,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$mappings:Mappings(577)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context:MetadataBuildingContext(590)",TP,"Rename Parameter mappings : Mappings to context : MetadataBuildingContext in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, context MetadataBuildingContext) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context(527)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$mappings:Mappings(577)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context:MetadataBuildingContext(590)",TP,"Change Parameter Type mappings : Mappings to context : MetadataBuildingContext in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, context MetadataBuildingContext) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context(527)",74eb608be6e926bc77bb60b7279b08f9c67c691e,f0f82e4f1ba7416ef010d5d71914a2bbde7fc22f,1281640428,type change,core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$mappings:ExtendedMappings(506)","core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$mappings:Mappings(505)",TP,"Change Parameter Type mappings : ExtendedMappings to mappings : Mappings in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings Mappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$context(527)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$mappings:ExtendedMappings(395)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$mappings:ExtendedMappings(395)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$denormalizedTableXref(646)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,introduced,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$denormalizedTableXref:EntityTableXref(701)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$denormalizedTableXref:EntityTableXref(701)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$discriminatorColumn(610)",e64e89b2cc6285bb624747a57377414b4f93e0db,5329bba1ea724eabf5783c71e5127b8f84ad0fcc,1386917867,modifier change,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$discriminatorColumn:Ejb3DiscriminatorColumn(638)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$discriminatorColumn:Ejb3DiscriminatorColumn(641)",TP,"Add Variable Modifier final in variable discriminatorColumn : Ejb3DiscriminatorColumn in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings Mappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$discriminatorColumn(610)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$discriminatorColumn:Ejb3DiscriminatorColumn(448)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$discriminatorColumn:Ejb3DiscriminatorColumn(448)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$elementsToProcess(778)",c57ab61dcf1c6c546260c45081ab8d76cdd2620b,5ee9ba361c96c29b06542720cb8b01e1034d8544,1264510621,type change,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elementsToProcess:ElementsToProcess(628)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elementsToProcess:InheritanceState.ElementsToProcess(627)",TP,"Change Variable Type elementsToProcess : ElementsToProcess to elementsToProcess : InheritanceState.ElementsToProcess in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$elementsToProcess(778)",671d9db8e2150111ec279c7ec35f1eaa82370412,d00f7efb308fab613b4918f9b8831f07602c6bd0,1264439945,type change,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elements:List<PropertyData>(628)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elementsToProcess:ElementsToProcess(628)",TP,"Change Variable Type elements : List<PropertyData> to elementsToProcess : ElementsToProcess in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$elementsToProcess(778)",671d9db8e2150111ec279c7ec35f1eaa82370412,d00f7efb308fab613b4918f9b8831f07602c6bd0,1264439945,modifier change,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elements:List<PropertyData>(628)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elementsToProcess:ElementsToProcess(628)",TP,"Add Variable Modifier final in variable elementsToProcess : ElementsToProcess in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$elementsToProcess(778)",671d9db8e2150111ec279c7ec35f1eaa82370412,d00f7efb308fab613b4918f9b8831f07602c6bd0,1264439945,rename,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elements:List<PropertyData>(628)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elementsToProcess:ElementsToProcess(628)",TP,"Rename Variable elements : List<PropertyData> to elementsToProcess : ElementsToProcess in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$elementsToProcess(778)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elements:List<PropertyData>(667)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$elements:List<PropertyData>(667)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$entityAnn(571)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$entityAnn:Entity(541)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$entityAnn:Entity(541)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$entityBinder(575)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$entityBinder:EntityBinder(548)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$entityBinder:EntityBinder(548)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$fk(702)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$fk:ForeignKey(615)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$fk:ForeignKey(615)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$hasSubclasses(694)",e64e89b2cc6285bb624747a57377414b4f93e0db,5329bba1ea724eabf5783c71e5127b8f84ad0fcc,1386917867,introduced,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$hasSubclasses:boolean(708)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$hasSubclasses:boolean(708)",TP,"Extract Variable hasSubclasses : boolean in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings Mappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$hibEntityAnn(572)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$hibEntityAnn:Entity(542)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$hibEntityAnn:Entity(542)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$idPropertiesIfIdClass(783)",ccad83c774f68120a06d30c24a9ddb8c10fd18b2,8478d5b44b6c8d72b386d7a1a2841bfe7b37fb08,1265412808,rename,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$idProperties:Set<String>(687)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$idPropertiesIfIdClass:Set<String>(686)",TP,"Rename Variable idProperties : Set<String> to idPropertiesIfIdClass : Set<String> in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$idPropertiesIfIdClass(783)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$idProperties:Set<String>(677)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$idProperties:Set<String>(677)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$inheritanceJoinedColumns(603)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceJoinedColumns:Ejb3JoinColumn[](449)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceJoinedColumns:Ejb3JoinColumn[](449)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$inheritanceState(536)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceState:InheritanceState(398)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceState:InheritanceState(398)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$inheritanceStatePerClass(526)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceStatePerClass:Map<XClass,InheritanceState>(395)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$inheritanceStatePerClass:Map<XClass,InheritanceState>(395)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$isIdClass(784)",ccad83c774f68120a06d30c24a9ddb8c10fd18b2,8478d5b44b6c8d72b386d7a1a2841bfe7b37fb08,1265412808,introduced,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$isIdClass:boolean(687)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$isIdClass:boolean(687)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$isInheritanceRoot(693)",e64e89b2cc6285bb624747a57377414b4f93e0db,5329bba1ea724eabf5783c71e5127b8f84ad0fcc,1386917867,introduced,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$isInheritanceRoot:boolean(707)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, Mappings)$isInheritanceRoot:boolean(707)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$jsc(699)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$jsc:JoinedSubclass(609)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$jsc:JoinedSubclass(609)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$key(700)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$key:SimpleValue(613)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$key:SimpleValue(613)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$onDeleteAnn(689)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$onDeleteAnn:OnDelete(605)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$onDeleteAnn:OnDelete(605)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$onDeleteAppropriate(690)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$onDeleteAppropriate:boolean(606)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$onDeleteAppropriate:boolean(606)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$persistentClass(570)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$persistentClass:PersistentClass(521)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$persistentClass:PersistentClass(521)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumn(707)",4afa8fb57d097596a1934c4be5c577e14b249e10,2ea122aedd0c32e5ab1c68e90dd8dd4ed33d2021,1465862312,introduced,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumn:PrimaryKeyJoinColumn(659)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumn:PrimaryKeyJoinColumn(659)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumns(708)",15b0a683f2423d355fe85eb31435a62837a2550f,aeb3aee62603f4e3613ed4037f2727c817a11016,1487160489,introduced,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumns:PrimaryKeyJoinColumns(660)","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$pkJoinColumns:PrimaryKeyJoinColumns(660)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$propertyHolder(673)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$propertyHolder:PropertyHolder(591)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$propertyHolder:PropertyHolder(591)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$rootClass(812)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$rootClass:RootClass(782)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$rootClass:RootClass(782)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$schema(590)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$schema:String(443)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$schema:String(443)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$secTabAnn(681)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$secTabAnn:SecondaryTable(597)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$secTabAnn:SecondaryTable(597)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$secTabsAnn(684)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$secTabsAnn:SecondaryTables(600)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$secTabsAnn:SecondaryTables(600)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$subclassAndSingleTableStrategy(781)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$subclassAndSingleTableStrategy:boolean(674)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$subclassAndSingleTableStrategy:boolean(674)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$superEntity(554)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$superEntity:PersistentClass(424)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$superEntity:PersistentClass(424)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$tabAnn(594)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$tabAnn:Table(452)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$tabAnn:Table(452)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$table(591)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$table:String(444)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$table:String(444)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$uniqueConstraints(593)",ecb103cf5512cf3f940ca3567d5414bdc0804bdd,a2bf14ae7c2ed7b2b0a6eb558dad08bcfc69c489,1260138058,type change,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$uniqueConstraints:List<String[]>(488)","annotations/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$uniqueConstraints:List<UniqueConstraintHolder>(489)",TP,"Change Variable Type uniqueConstraints : List<String[]> to uniqueConstraints : List<UniqueConstraintHolder> in method public bindClass(clazzToProcess XClass, inheritanceStatePerClass Map<XClass,InheritanceState>, mappings ExtendedMappings) : void from class org.hibernate.cfg.AnnotationBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, MetadataBuildingContext)$uniqueConstraints(593)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,annotations/src/java/org/hibernate/cfg/AnnotationBinder.java,"annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$uniqueConstraints:List<String[]>(447)","annotations/src/java/org.hibernate.cfg.AnnotationBinder#bindClass(XClass, Map, ExtendedMappings)$uniqueConstraints:List<String[]>(447)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$binder(532)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$binder:PropertyBinder(442)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$binder:PropertyBinder(442)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$collectionType(500)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$collectionType:XClass(417)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$collectionType:XClass(417)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$includeInOptimisticLockChecks(426)",94e79944b812e3443052a33741c773c9272639e0,05c36793730fb1b4e3d08c731998c7649c9b34ef,1331174442,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$includeInOptimisticLockChecks:boolean(444)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$includeInOptimisticLockChecks:boolean(444)",TP,"Extract Variable includeInOptimisticLockChecks : boolean in method public bind() : void from class org.hibernate.cfg.annotations.CollectionBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$isMappedBy(423)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$isMappedBy:boolean(409)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$isMappedBy:boolean(409)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lazyGroupAnnotation(540)",6afc759bf364dc58c87a1aece6ae5805ef260d82,1e44e7420b7af10adc9547a461f02a6d979624f1,1447710191,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lazyGroupAnnotation:LazyGroup(529)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lazyGroupAnnotation:LazyGroup(529)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$loader(449)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$loader:Loader(382)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$loader:Loader(382)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn(425)",94e79944b812e3443052a33741c773c9272639e0,05c36793730fb1b4e3d08c731998c7649c9b34ef,1331174442,modifier change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn:OptimisticLock(439)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn:OptimisticLock(443)",TP,"Add Variable Modifier final in variable lockAnn : OptimisticLock in method public bind() : void from class org.hibernate.cfg.annotations.CollectionBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn(425)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn:OptimisticLock(335)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$lockAnn:OptimisticLock(335)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message(479)",99e43e9d14845367af4ee58d2563beda0ee45cda,658df91a5e308fd1d97cec62acf6110143012592,1262798903,introduced,annotations/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message:String(472)","annotations/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message:String(472)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message(488)",1392b43852f82cbf5a11a7889ef19863fca996fb,7c2a58861341f1404b4974f1ed9809f40c1da8f6,1505725434,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message:String(488)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$message:String(488)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$persisterAnn(431)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$persisterAnn:Persister(337)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$persisterAnn:Persister(337)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$prop(548)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$prop:Property(453)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$prop:Property(453)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$role(388)",126592a55d61195d55c73f36f8427badb79a713f,a9b1425f3f07021dae556e710b2bdfdc3812661b,1295386549,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$role:String(378)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$role:String(378)",TP,"Extract Variable role : String in method public bind() : void from class org.hibernate.cfg.annotations.CollectionBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sp(502)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sp:SecondPass(418)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sp:SecondPass(418)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDelete(447)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDelete:SQLDelete(380)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDelete:SQLDelete(380)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDeleteAll(448)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDeleteAll:SQLDeleteAll(381)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlDeleteAll:SQLDeleteAll(381)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlInsert(445)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlInsert:SQLInsert(378)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlInsert:SQLInsert(378)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlUpdate(446)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,annotations/src/java/org/hibernate/cfg/annotations/CollectionBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlUpdate:SQLUpdate(379)","annotations/src/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$sqlUpdate:SQLUpdate(379)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef(405)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef:TypeDef(417)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef:TypeDefinition(417)",TP,"Change Variable Type typeDef : TypeDef to typeDef : TypeDefinition in method public bind() : void from class org.hibernate.cfg.annotations.CollectionBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef(405)",0732db14b85334f799223071a7f5664952e62ab7,d7d9f0dfb207cb8238ea2962fee81708942fa368,1330715834,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef:TypeDef(407)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.CollectionBinder#bind()$typeDef:TypeDef(407)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache(155)",24a078732c25c9dec92fe7ff3e1c40f19fb5ecfa,f432ecea687ce606144c8fca1f4fc7f1937e1c2a,1521743112,type change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache:EntityRegionAccessStrategy(155)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache:EntityDataAccess(155)",TP,"Change Variable Type cache : EntityRegionAccessStrategy to cache : EntityDataAccess in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache(155)",9ac0a343ac2799d0addbca33f9e004b705c6318b,16ae00a53a9c58c841eb1dea8eb36354d5f3ff0f,1435779771,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache:EntityRegionAccessStrategy(140)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$cache:EntityRegionAccessStrategy(140)",TP,"Extract Variable cache : EntityRegionAccessStrategy in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck(156)",a68a6c677052c6b1adb0cd0c78ff05ac2d53c261,cbdab9d87f05b4255c7930a32fe995f87f0f3e0b,1459935647,modifier change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:Object(140)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:Object(151)",TP,"Add Variable Modifier final in variable ck : Object in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck(156)",16ae00a53a9c58c841eb1dea8eb36354d5f3ff0f,cffe71aeba38977f526b5ce7e870609ea419471c,1435788853,type change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:EntityCacheKey(141)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:Object(140)",TP,"Change Variable Type ck : EntityCacheKey to ck : Object in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck(156)",9ac0a343ac2799d0addbca33f9e004b705c6318b,16ae00a53a9c58c841eb1dea8eb36354d5f3ff0f,1435779771,modifier change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:CacheKey(139)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:EntityCacheKey(141)",TP,"Remove Variable Modifier final in variable ck : CacheKey in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck(156)",9ac0a343ac2799d0addbca33f9e004b705c6318b,16ae00a53a9c58c841eb1dea8eb36354d5f3ff0f,1435779771,type change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:CacheKey(139)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:EntityCacheKey(141)",TP,"Change Variable Type ck : CacheKey to ck : EntityCacheKey in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck(156)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:CacheKey(108)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$ck:CacheKey(108)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$currentLockMode(181)",712bc4af8968071f91ae38b34fb33d53ca1427f9,a286232da374cbccefddbf406830dbb598b6c824,1524768403,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$currentLockMode:LockMode(177)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$currentLockMode:LockMode(177)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$e(80)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$e:EntityEntry(60)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$e:EntityEntry(60)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$event(56)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$event:RefreshEvent(47)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$event:RefreshEvent(47)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$id(82)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$id:Serializable(62)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$id:Serializable(62)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$isTransient(59)",4ec26fa4cf59dad8bf938f7a6f86aa8dba9eabbb,b40cfb58dbe4606609c3fa2b1e5e210466c593df,1264584402,introduced,core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$isTransient:boolean(74)","core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$isTransient:boolean(74)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key(99)",d42d52b8f1ecb044fc116461bee8d6d23c7a5843,fe8c7183d172946a03818be2cec1c9c2fc819316,1301148693,modifier change,hibernate-core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(97)","hibernate-core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(99)",TP,"Add Variable Modifier final in variable key : EntityKey in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.def.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key(99)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(73)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(73)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key(140)",d42d52b8f1ecb044fc116461bee8d6d23c7a5843,fe8c7183d172946a03818be2cec1c9c2fc819316,1301148693,modifier change,hibernate-core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(122)","hibernate-core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(124)",TP,"Add Variable Modifier final in variable key : EntityKey in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.def.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key(140)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(102)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$key:EntityKey(102)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lock(162)",a68a6c677052c6b1adb0cd0c78ff05ac2d53c261,cbdab9d87f05b4255c7930a32fe995f87f0f3e0b,1459935647,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lock:SoftLock(157)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lock:SoftLock(157)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lockOptionsToUse(175)",712bc4af8968071f91ae38b34fb33d53ca1427f9,a286232da374cbccefddbf406830dbb598b6c824,1524768403,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lockOptionsToUse:LockOptions(178)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$lockOptionsToUse:LockOptions(178)",TP,"Extract Variable lockOptionsToUse : LockOptions in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$object(73)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$object:Object(53)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$object:Object(53)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$persister(81)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$persister:EntityPersister(61)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$persister:EntityPersister(61)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$postRefreshLockMode(178)",a286232da374cbccefddbf406830dbb598b6c824,12b79a59383d1b647c9957815ef53861f0752dad,1524768403,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$postRefreshLockMode:LockMode(178)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$postRefreshLockMode:LockMode(178)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousFetchProfile(169)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousFetchProfile:String(120)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousFetchProfile:String(120)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousVersion(148)",a68a6c677052c6b1adb0cd0c78ff05ac2d53c261,cbdab9d87f05b4255c7930a32fe995f87f0f3e0b,1459935647,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousVersion:Object(143)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$previousVersion:Object(143)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$refreshedAlready(56)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$refreshedAlready:Map(47)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$refreshedAlready:Map(47)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$requestedLockMode(177)",a286232da374cbccefddbf406830dbb598b6c824,12b79a59383d1b647c9957815ef53861f0752dad,1524768403,introduced,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$requestedLockMode:LockMode(177)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$requestedLockMode:LockMode(177)",TP,"Extract Variable requestedLockMode : LockMode in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result(205)",a286232da374cbccefddbf406830dbb598b6c824,12b79a59383d1b647c9957815ef53861f0752dad,1524768403,modifier change,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,hibernate-core/src/main/java/org/hibernate/event/internal/DefaultRefreshEventListener.java,"hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result:Object(183)","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result:Object(205)",TP,"Add Variable Modifier final in variable result : Object in method public onRefresh(event RefreshEvent, refreshedAlready Map) : void from class org.hibernate.event.internal.DefaultRefreshEventListener"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result(205)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result:Object(122)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$result:Object(122)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.event.internal.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$source(58)",41e94b3cf8192f0f3b4d2948f26760ac412745a0,d8d6d82e30960e0c255950eaf875ad48831b12b0,1183145025,introduced,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,code/core/src/main/java/org/hibernate/event/def/DefaultRefreshEventListener.java,"code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$source:EventSource(49)","code/core/src/main/java/org.hibernate.event.def.DefaultRefreshEventListener#onRefresh(RefreshEvent, Map)$source:EventSource(49)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$builder(99)",6cda7dc5777307cd5c66c8f4231923bdafbb3bf1,31f43e3321f5c286a7eae492a9885f4185767278,1362580317,introduced,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$builder:NamedSQLQueryDefinitionBuilder(121)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$builder:NamedSQLQueryDefinitionBuilder(121)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context(88)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,rename,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$mappings:Mappings(99)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context:MetadataBuildingContext(105)",TP,"Rename Parameter mappings : Mappings to context : MetadataBuildingContext in method public bindNativeQuery(queryAnn NamedNativeQuery, context MetadataBuildingContext, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context(88)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$mappings:Mappings(99)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context:MetadataBuildingContext(105)",TP,"Change Parameter Type mappings : Mappings to context : MetadataBuildingContext in method public bindNativeQuery(queryAnn NamedNativeQuery, context MetadataBuildingContext, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context(88)",74eb608be6e926bc77bb60b7279b08f9c67c691e,f0f82e4f1ba7416ef010d5d71914a2bbde7fc22f,1281640428,type change,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(90)","core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$mappings:Mappings(90)",TP,"Change Parameter Type mappings : ExtendedMappings to mappings : Mappings in method public bindNativeQuery(queryAnn NamedNativeQuery, mappings Mappings, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$context(88)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(68)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(68)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$entityQueryReturn(121)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$entityQueryReturn:NativeSQLQueryRootReturn(99)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$entityQueryReturn:NativeSQLQueryRootReturn(99)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$hints(96)",ce77f159740b325c361e37b1cc8c62f5a78cd22d,a03d44f290deb8ccddc0827834e49e03fc8da275,1369107436,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$hints:QueryHint[](119)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings, boolean)$hints:QueryHintDefinition(105)",TP,"Change Variable Type hints : QueryHint[] to hints : QueryHintDefinition in method public bindNativeQuery(queryAnn NamedNativeQuery, mappings Mappings, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$hints(96)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$hints:QueryHint[](76)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$hints:QueryHint[](76)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$isDefault(89)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$isDefault:boolean(68)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$isDefault:boolean(68)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$query(129)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$query:NamedSQLQueryDefinition(74)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$query:NamedSQLQueryDefinition(74)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$queryAnn(87)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$queryAnn:NamedNativeQuery(68)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$queryAnn:NamedNativeQuery(68)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$queryName(97)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$queryName:String(77)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$queryName:String(77)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext, boolean)$resultSetMapping(95)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$resultSetMapping:String(75)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings, boolean)$resultSetMapping:String(75)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context(144)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,rename,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings)$mappings:Mappings(152)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context:MetadataBuildingContext(161)",TP,"Rename Parameter mappings : Mappings to context : MetadataBuildingContext in method public bindNativeQuery(queryAnn NamedNativeQuery, context MetadataBuildingContext) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context(144)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings)$mappings:Mappings(152)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context:MetadataBuildingContext(161)",TP,"Change Parameter Type mappings : Mappings to context : MetadataBuildingContext in method public bindNativeQuery(queryAnn NamedNativeQuery, context MetadataBuildingContext) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context(144)",74eb608be6e926bc77bb60b7279b08f9c67c691e,f0f82e4f1ba7416ef010d5d71914a2bbde7fc22f,1281640428,type change,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$mappings:ExtendedMappings(151)","core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, Mappings)$mappings:Mappings(151)",TP,"Change Parameter Type mappings : ExtendedMappings to mappings : Mappings in method public bindNativeQuery(queryAnn NamedNativeQuery, mappings Mappings) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$context(144)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$mappings:ExtendedMappings(129)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$mappings:ExtendedMappings(129)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$entityQueryReturn(181)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$entityQueryReturn:NativeSQLQueryRootReturn(158)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$entityQueryReturn:NativeSQLQueryRootReturn(158)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$query(154)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$query:NamedSQLQueryDefinition(135)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$query:NamedSQLQueryDefinition(135)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$queryAnn(143)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$queryAnn:NamedNativeQuery(129)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$queryAnn:NamedNativeQuery(129)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, MetadataBuildingContext)$resultSetMapping(155)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$resultSetMapping:String(136)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindNativeQuery(NamedNativeQuery, ExtendedMappings)$resultSetMapping:String(136)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context(49)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,rename,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$mappings:Mappings(64)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context:MetadataBuildingContext(66)",TP,"Rename Parameter mappings : Mappings to context : MetadataBuildingContext in method public bindQuery(queryAnn NamedQuery, context MetadataBuildingContext, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context(49)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$mappings:Mappings(64)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context:MetadataBuildingContext(66)",TP,"Change Parameter Type mappings : Mappings to context : MetadataBuildingContext in method public bindQuery(queryAnn NamedQuery, context MetadataBuildingContext, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context(49)",74eb608be6e926bc77bb60b7279b08f9c67c691e,f0f82e4f1ba7416ef010d5d71914a2bbde7fc22f,1281640428,type change,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(60)","core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$mappings:Mappings(60)",TP,"Change Parameter Type mappings : ExtendedMappings to mappings : Mappings in method public bindQuery(queryAnn NamedQuery, mappings Mappings, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$context(49)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(38)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$mappings:ExtendedMappings(38)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$hints(56)",ce77f159740b325c361e37b1cc8c62f5a78cd22d,a03d44f290deb8ccddc0827834e49e03fc8da275,1369107436,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$hints:QueryHint[](73)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$hints:QueryHintDefinition(69)",TP,"Change Variable Type hints : QueryHint[] to hints : QueryHintDefinition in method public bindQuery(queryAnn NamedQuery, mappings Mappings, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$hints(56)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$hints:QueryHint[](44)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$hints:QueryHint[](44)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$isDefault(50)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$isDefault:boolean(38)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$isDefault:boolean(38)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$queryAnn(48)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$queryAnn:NamedQuery(38)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$queryAnn:NamedQuery(38)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$queryDefinition(58)",00059fee2f3fca3f0437db94c86f1bd3de85df14,3edb72db4844c10aa8490472c4b1af05d75076ab,1342648352,rename,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$query:NamedQueryDefinition(68)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings, boolean)$queryDefinition:NamedQueryDefinition(74)",TP,"Rename Variable query : NamedQueryDefinition to queryDefinition : NamedQueryDefinition in method public bindQuery(queryAnn NamedQuery, mappings Mappings, isDefault boolean) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$queryDefinition(58)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$query:NamedQueryDefinition(46)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$query:NamedQueryDefinition(46)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext, boolean)$queryName(57)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$queryName:String(45)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings, boolean)$queryName:String(45)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context(249)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,rename,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings)$mappings:Mappings(239)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context:MetadataBuildingContext(266)",TP,"Rename Parameter mappings : Mappings to context : MetadataBuildingContext in method public bindQuery(queryAnn NamedQuery, context MetadataBuildingContext) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context(249)",aa31b26d322989276b978c4a8c511a70bc2a0fc8,9caca0ce37d5a2763d476c6fa2471addcca710ca,1426024431,type change,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,hibernate-core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings)$mappings:Mappings(239)","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context:MetadataBuildingContext(266)",TP,"Change Parameter Type mappings : Mappings to context : MetadataBuildingContext in method public bindQuery(queryAnn NamedQuery, context MetadataBuildingContext) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context(249)",74eb608be6e926bc77bb60b7279b08f9c67c691e,f0f82e4f1ba7416ef010d5d71914a2bbde7fc22f,1281640428,type change,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,core/src/main/java/org/hibernate/cfg/annotations/QueryBinder.java,"core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$mappings:ExtendedMappings(228)","core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, Mappings)$mappings:Mappings(228)",TP,"Change Parameter Type mappings : ExtendedMappings to mappings : Mappings in method public bindQuery(queryAnn NamedQuery, mappings Mappings) : void from class org.hibernate.cfg.annotations.QueryBinder"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$context(249)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$mappings:ExtendedMappings(206)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$mappings:ExtendedMappings(206)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$flushMode(258)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$flushMode:FlushMode(212)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$flushMode:FlushMode(212)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$query(261)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$query:NamedQueryDefinition(215)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$query:NamedQueryDefinition(215)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, MetadataBuildingContext)$queryAnn(248)",53deb4b357384f32819f70c497ef04885171c399,7337743c93574823424ed6c399cfcf6bd75614f8,1225219270,introduced,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,annotations/src/java/org/hibernate/cfg/annotations/QueryBinder.java,"annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$queryAnn:NamedQuery(206)","annotations/src/java/org.hibernate.cfg.annotations.QueryBinder#bindQuery(NamedQuery, ExtendedMappings)$queryAnn:NamedQuery(206)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$clazz(304)",c1312db93432f748ab02382b9e27c8b6a9a67636,a94515206db0eee8867d399bee6a87aa9e8cb074,1225455807,type change,envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$clazz:YClass(166)","envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$clazz:XClass(166)",TP,"Change Variable Type clazz : YClass to clazz : XClass in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$clazz(304)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$clazz:YClass(161)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$clazz:YClass(161)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$e(308)",212f61a24cc4054b55a668f73a9127ccdd8bc9a1,410a785dfe40ae030bec31c4c06a5a7998f1feeb,1427744217,type change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$e:ClassNotFoundException(324)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$e:ClassLoadingException(325)",TP,"Change Variable Type e : ClassNotFoundException to e : ClassLoadingException in method public configure(metadata MetadataImplementor, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$e(308)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$e:ClassNotFoundException(164)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$e:ClassNotFoundException(164)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$metadata(296)",8a42f8a8ae8f561cfc309c6f93b275b1326547e7,63a0f03c5ae773f96c92c02fba9d13133d02485b,1426728146,rename,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$cfg:Configuration(314)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$metadata:MetadataImplementor(313)",TP,"Rename Parameter cfg : Configuration to metadata : MetadataImplementor in method public configure(metadata MetadataImplementor, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$metadata(296)",8a42f8a8ae8f561cfc309c6f93b275b1326547e7,63a0f03c5ae773f96c92c02fba9d13133d02485b,1426728146,type change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$cfg:Configuration(314)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$metadata:MetadataImplementor(313)",TP,"Change Parameter Type cfg : Configuration to metadata : MetadataImplementor in method public configure(metadata MetadataImplementor, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$metadata(296)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$cfg:Configuration(152)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$cfg:Configuration(152)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$modifiedEntityNamesFound(327)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(282)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(345)",TP,"Add Variable Modifier final in variable modifiedEntityNamesFound : MutableBoolean in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$modifiedEntityNamesFound(327)",05f2d8b4512fb46387bdc6408a437cd6f06ea13f,13c9fd4f9d177fb7d022c72d674f1a23b909c443,1307879700,rename,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityTypesFound:MutableBoolean(268)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(274)",TP,"Rename Variable modifiedEntityTypesFound : MutableBoolean to modifiedEntityNamesFound : MutableBoolean in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$modifiedEntityNamesFound(327)",dd55a99b00c447e53fe97bdbc423f3e6d7d59557,1878b238503f3b52a6e7b31f849d7253206c7465,1305566310,rename,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(256)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityTypesFound:MutableBoolean(256)",TP,"Rename Variable modifiedEntityNamesFound : MutableBoolean to modifiedEntityTypesFound : MutableBoolean in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$modifiedEntityNamesFound(327)",86c15fd21234381e2cc713d07e9652f01078613d,98342a7e2dd54df9b7fcb8e7b63ebd5441bd2217,1303940962,introduced,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(254)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$modifiedEntityNamesFound:MutableBoolean(254)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$persistentClass(301)",8a42f8a8ae8f561cfc309c6f93b275b1326547e7,63a0f03c5ae773f96c92c02fba9d13133d02485b,1426728146,rename,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$pc:PersistentClass(321)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$persistentClass:PersistentClass(318)",TP,"Rename Variable pc : PersistentClass to persistentClass : PersistentClass in method public configure(metadata MetadataImplementor, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$persistentClass(301)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$pc:PersistentClass(160)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$pc:PersistentClass(160)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$reflectionManager(296)",c1312db93432f748ab02382b9e27c8b6a9a67636,a94515206db0eee8867d399bee6a87aa9e8cb074,1225455807,type change,envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$reflectionManager:YReflectionManager(157)","envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$reflectionManager:ReflectionManager(157)",TP,"Change Parameter Type reflectionManager : YReflectionManager to reflectionManager : ReflectionManager in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$reflectionManager(296)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$reflectionManager:YReflectionManager(152)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$reflectionManager:YReflectionManager(152)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionEntity(312)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionEntity:RevisionEntity(267)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionEntity:RevisionEntity(330)",TP,"Add Variable Modifier final in variable revisionEntity : RevisionEntity in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionEntity(312)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionEntity:RevisionEntity(168)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionEntity:RevisionEntity(168)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionEntityFound(297)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionEntityFound:boolean(154)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionEntityFound:boolean(154)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionInfoClass(299)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoClass:Class<?>(157)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoClass:Class<?>(157)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionInfoGenerator(298)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoGenerator:RevisionInfoGenerator(155)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoGenerator:RevisionInfoGenerator(155)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionInfoXmlMapping(389)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoXmlMapping:Document(205)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionInfoXmlMapping:Document(205)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionListenerClass(353)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(298)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(371)",TP,"Add Variable Modifier final in variable revisionListenerClass : Class<? extends RevisionListener> in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionListenerClass(353)",e14e47968f8238192f2abf291ac549c55dcfd708,45f3ced6daf96f1a697f350e134512562b48d3fd,1317322207,introduced,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(290)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(290)",TP,"Extract Variable revisionListenerClass : Class<? extends RevisionListener> in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionListenerClass(391)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(320)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(400)",TP,"Add Variable Modifier final in variable revisionListenerClass : Class<? extends RevisionListener> in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionListenerClass(391)",e14e47968f8238192f2abf291ac549c55dcfd708,45f3ced6daf96f1a697f350e134512562b48d3fd,1317322207,introduced,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(311)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionListenerClass:Class<?extendsRevisionListener>(311)",TP,"Extract Variable revisionListenerClass : Class<? extends RevisionListener> in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionNumberFound(325)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionNumberFound:MutableBoolean(280)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionNumberFound:MutableBoolean(343)",TP,"Add Variable Modifier final in variable revisionNumberFound : MutableBoolean in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionNumberFound(325)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionNumberFound:MutableBoolean(181)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionNumberFound:MutableBoolean(181)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionTimestampFound(326)",ad1d1ab8b4fa166de59bfcfbe57622e71b2448f9,364a47f2c746a5eeb1642102580a9daa8bc27fc9,1367506881,modifier change,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/RevisionInfoConfiguration.java,"hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionTimestampFound:MutableBoolean(281)","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(Configuration, ReflectionManager)$revisionTimestampFound:MutableBoolean(344)",TP,"Add Variable Modifier final in variable revisionTimestampFound : MutableBoolean in method public configure(cfg Configuration, reflectionManager ReflectionManager) : RevisionInfoConfigurationResult from class org.hibernate.envers.configuration.internal.RevisionInfoConfiguration"
"https://github.com/hibernate/hibernate-orm.git","hibernate-envers/src/main/java/org.hibernate.envers.configuration.internal.RevisionInfoConfiguration#configure(MetadataImplementor, ReflectionManager)$revisionTimestampFound(326)",e163f8264d41ab028db28af450f3d9bae418f9c0,78e5d9fd89aa571f8ad5cf5b8a5046b9b74cb09b,1225133791,introduced,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,envers/src/main/java/org/jboss/envers/configuration/RevisionInfoConfiguration.java,"envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionTimestampFound:MutableBoolean(182)","envers/src/main/java/org.jboss.envers.configuration.RevisionInfoConfiguration#configure(Configuration, YReflectionManager)$revisionTimestampFound:MutableBoolean(182)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.boot.internal.SessionFactoryBuilderImpl#unwrap(Class)$type(460)",83f83c57dc7bad2ff716797a66a7d6d4fd0be5e7,2c968538a542fd5f6c705745f235be118c07370a,1429163950,introduced,hibernate-core/src/main/java/org/hibernate/boot/internal/SessionFactoryBuilderImpl.java,hibernate-core/src/main/java/org/hibernate/boot/internal/SessionFactoryBuilderImpl.java,"hibernate-core/src/main/java/org.hibernate.boot.internal.SessionFactoryBuilderImpl#unwrap(Class)$type:Class<T>(436)","hibernate-core/src/main/java/org.hibernate.boot.internal.SessionFactoryBuilderImpl#unwrap(Class)$type:Class<T>(436)",TP,"added with method"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$description(646)",180e714b7c47fe0a1f20d60cacc7fdc129dd7b0b,22730624fc267cd12bf1e6551158fa3057fd8d58,1426868268,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$description:String(478)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$description:String(478)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor(585)",216ad13e6caa26f31c44019b945eace96ae4e5e8,c14180ea5b16b69cdd06eb5bb159f7da1ff4db54,1522383393,type change,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:JavaTypeDescriptor(585)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:BasicJavaDescriptor(585)",TP,"Change Variable Type entityAttributeJavaTypeDescriptor : JavaTypeDescriptor to entityAttributeJavaTypeDescriptor : BasicJavaDescriptor in method private buildAttributeConverterTypeAdapter() : Type from class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor(585)",173184e26d62a96df281093e6277da813bbcc22c,90cabb43ad8b186d73cb6b310fb2fd6774ffe44f,1513383918,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:JavaTypeDescriptor(554)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:JavaTypeDescriptor(554)",FP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor(585)",5a7d179f81d235ba7be9b9248f75d6f2a156744b,7bcf161d36d5b1e59fba1ae32e8e2d692c2fd33d,1376942086,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:JavaTypeDescriptor(425)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$entityAttributeJavaTypeDescriptor:JavaTypeDescriptor(425)",FN,"Extract Method private buildAttributeConverterTypeAdapter() : Type extracted from public setTypeUsingReflection(className String, propertyName String) : void in class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode(598)",8a7bc2e7c159ff0acdfdaa076e0e8da1bbc59746,38c004431d006ac5173d0c095f97415b5e6267a6,1426888529,modifier change,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode:int(461)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode:int(476)",TP,"Remove Variable Modifier final in variable jdbcTypeCode : int in method private buildAttributeConverterTypeAdapter() : Type from class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode(598)",5a7d179f81d235ba7be9b9248f75d6f2a156744b,7bcf161d36d5b1e59fba1ae32e8e2d692c2fd33d,1376942086,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode:int(434)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jdbcTypeCode:int(434)",TP,"Extract Method private buildAttributeConverterTypeAdapter() : Type extracted from public setTypeUsingReflection(className String, propertyName String) : void in class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jpaAttributeConverter(568)",173184e26d62a96df281093e6277da813bbcc22c,90cabb43ad8b186d73cb6b310fb2fd6774ffe44f,1513383918,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jpaAttributeConverter:JpaAttributeConverter(538)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$jpaAttributeConverter:JpaAttributeConverter(538)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$name(645)",5a7d179f81d235ba7be9b9248f75d6f2a156744b,7bcf161d36d5b1e59fba1ae32e8e2d692c2fd33d,1376942086,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$name:String(449)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$name:String(449)",TP,"Extract Method private buildAttributeConverterTypeAdapter() : Type extracted from public setTypeUsingReflection(className String, propertyName String) : void in class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$recommendedSqlType(594)",216ad13e6caa26f31c44019b945eace96ae4e5e8,c14180ea5b16b69cdd06eb5bb159f7da1ff4db54,1522383393,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$recommendedSqlType:SqlTypeDescriptor(594)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$recommendedSqlType:SqlTypeDescriptor(594)",TP,"new variable"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptor(624)",5a7d179f81d235ba7be9b9248f75d6f2a156744b,7bcf161d36d5b1e59fba1ae32e8e2d692c2fd33d,1376942086,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptor:SqlTypeDescriptor(436)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptor:SqlTypeDescriptor(436)",TP,"Extract Method private buildAttributeConverterTypeAdapter() : Type extracted from public setTypeUsingReflection(className String, propertyName String) : void in class org.hibernate.mapping.SimpleValue"
"https://github.com/hibernate/hibernate-orm.git","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptorAdapter(637)",5a7d179f81d235ba7be9b9248f75d6f2a156744b,7bcf161d36d5b1e59fba1ae32e8e2d692c2fd33d,1376942086,introduced,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,hibernate-core/src/main/java/org/hibernate/mapping/SimpleValue.java,"hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptorAdapter:SqlTypeDescriptor(442)","hibernate-core/src/main/java/org.hibernate.mapping.SimpleValue#buildAttributeConverterTypeAdapter()$sqlTypeDescriptorAdapter:SqlTypeDescriptor(442)",TP,"Extract Method private buildAttributeConverterTypeAdapter() : Type extracted from public setTypeUsingReflection(className String, propertyName String) : void in class org.hibernate.mapping.SimpleValue"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement(124)",29a9b8bcb552dc691cc57c85b8eb017092c960ad,a25f53f8871fd178b6791d1194d7358b55d1ba37,1526692557,type change,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement:DifferenceElementCalculator.DifferenceElement(126)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement:DifferenceElement(127)",TP,"Change Variable Type diffElement : DifferenceElementCalculator.DifferenceElement to diffElement : DifferenceElement in method package apply() : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement(124)",c4bbfa7060e136038d49a7ecfc35ec960153ac06,40f6fef078275d3ca43f02918200a2d6076fef9d,1526687474,type change,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$diffElement:DifferenceElement(584)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$diffElement:DifferenceElementCalculator.DifferenceElement(119)",TP,"Change Variable Type diffElement : DifferenceElement to diffElement : DifferenceElementCalculator.DifferenceElement in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement(124)",7e86d04481f1128e3644b46991f106b34e775bb9,fb8daf1673c35798aeb7cca8033dd9c9b2e5c4fc,1526592264,rename,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$diffEl:DifferenceElement(492)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$diffElement:DifferenceElement(496)",TP,"Rename Variable diffEl : DifferenceElement to diffElement : DifferenceElement in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$diffElement(124)",c73ae5d79b62de91209477538b45ab5216fb108e,cc13f68e3655ea43b56dd13ee55a81f3a2d37fee,1487866773,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculator.Difference#apply(NodeText)$diffEl:DifferenceElement(337)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculator.Difference#apply(NodeText)$diffEl:DifferenceElement(337)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverDiffElement(120)",aea012851b3729fbb84680de6bdb88f039b65da0,2d3f5e219af9d1ba916f1dc21a6169a41a254632,1528404857,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverDiffElement:boolean(128)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverDiffElement:boolean(128)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverOriginalElement(121)",aea012851b3729fbb84680de6bdb88f039b65da0,2d3f5e219af9d1ba916f1dc21a6169a41a254632,1528404857,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverOriginalElement:boolean(129)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$isLeftOverOriginalElement:boolean(129)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElement(129)",77386fec9f12fb711779151186fe72b345bd4299,2ae6f779cc175b3cd82d915419f378e53ff4b056,1526673942,rename,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElement:TextElement(638)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$originalElement:TextElement(638)",TP,"Rename Variable givenElement : TextElement to originalElement : TextElement in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElement(129)",7e86d04481f1128e3644b46991f106b34e775bb9,fb8daf1673c35798aeb7cca8033dd9c9b2e5c4fc,1526592264,rename,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$nodeTextEl:TextElement(524)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElement:TextElement(528)",TP,"Rename Variable nodeTextEl : TextElement to givenElement : TextElement in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElement(129)",c73ae5d79b62de91209477538b45ab5216fb108e,cc13f68e3655ea43b56dd13ee55a81f3a2d37fee,1487866773,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculator.Difference#apply(NodeText)$nodeTextEl:TextElement(358)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculator.Difference#apply(NodeText)$nodeTextEl:TextElement(358)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElementIsChild(130)",77386fec9f12fb711779151186fe72b345bd4299,2ae6f779cc175b3cd82d915419f378e53ff4b056,1526673942,rename,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsChild:boolean(639)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$originalElementIsChild:boolean(639)",TP,"Rename Variable givenElementIsChild : boolean to originalElementIsChild : boolean in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElementIsChild(130)",fb8daf1673c35798aeb7cca8033dd9c9b2e5c4fc,de5c17c37f15a1c134f518ed2754974cc4b9aa15,1526597270,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsChild:boolean(639)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsChild:boolean(639)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElementIsToken(131)",77386fec9f12fb711779151186fe72b345bd4299,2ae6f779cc175b3cd82d915419f378e53ff4b056,1526673942,rename,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsToken:boolean(640)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$originalElementIsToken:boolean(640)",TP,"Rename Variable givenElementIsToken : boolean to originalElementIsToken : boolean in method package apply(nodeText NodeText, node Node) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$originalElementIsToken(131)",fb8daf1673c35798aeb7cca8033dd9c9b2e5c4fc,de5c17c37f15a1c134f518ed2754974cc4b9aa15,1526597270,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsToken:boolean(640)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply(NodeText, Node)$givenElementIsToken:boolean(640)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removed(136)",aea012851b3729fbb84680de6bdb88f039b65da0,2d3f5e219af9d1ba916f1dc21a6169a41a254632,1528404857,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removed:Removed(144)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removed:Removed(144)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removedGroups(117)",aea012851b3729fbb84680de6bdb88f039b65da0,2d3f5e219af9d1ba916f1dc21a6169a41a254632,1528404857,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removedGroups:Map<Removed,RemovedGroup>(125)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#apply()$removedGroups:Map<Removed,RemovedGroup>(125)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$comment(345)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$comment:Comment(273)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$comment:Comment(273)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$originalElement(339)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElement:TextElement(267)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElement:TextElement(267)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$originalElementChild(341)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementChild:ChildTextElement(269)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementChild:ChildTextElement(269)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$originalElementIsChild(339)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementIsChild:boolean(267)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementIsChild:boolean(267)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$originalElementIsToken(339)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementIsToken:boolean(267)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$originalElementIsToken:boolean(267)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$removed(339)",c35fbac21da07f996f017169288b748764488c20,b7bd15d12e107c85e29912960f7b4e48aac4dc38,1526693640,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$removed:Removed(267)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(Removed, TextElement, boolean, boolean)$removed:Removed(267)",TP,"Extract Method private applyRemovedDiffElement(removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void extracted from package apply() : void in class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$removedGroup(339)",aea012851b3729fbb84680de6bdb88f039b65da0,2d3f5e219af9d1ba916f1dc21a6169a41a254632,1528404857,introduced,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/Difference.java,"javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$removedGroup:RemovedGroup(334)","javaparser-core/src/main/java/com.github.javaparser.printer.lexicalpreservation.Difference#applyRemovedDiffElement(RemovedGroup, Removed, TextElement, boolean, boolean)$removedGroup:RemovedGroup(334)",TP,"Add Parameter removedGroup : RemovedGroup in method private applyRemovedDiffElement(removedGroup RemovedGroup, removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void from class com.github.javaparser.printer.lexicalpreservation.Difference"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$classOrInterfaceType(524)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$classOrInterfaceType:ClassOrInterfaceType(130)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$classOrInterfaceType:ClassOrInterfaceType(130)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$context(519)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$context:Context(124)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$context:Context(124)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$javaParserTypeVariableDeclaration(539)",00f005b38e8b83eb1d60db9070c6e9e3beffe403,1829d9560d37efd59722aaa2f1f22e392918429b,1440424723,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$javaParserTypeVariableDeclaration:JavaParserTypeVariableDeclaration(321)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$javaParserTypeVariableDeclaration:JavaParserTypeVariableDeclaration(321)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$jpArrayType(561)",03e407957d600a18ef0a4a83224c17d155ef8645,4601dfb9d1acf7f564948b7ddbb9201d62849ad7,1476898502,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$jpArrayType:ArrayType(606)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$jpArrayType:ArrayType(606)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$name(525)",1ae290f6f5e0c7ba62eab797aba22308957b9257,ee58eb8363ecd8fad15a63eb2fdc94a387b58807,1440446265,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$name:String(330)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$name:String(330)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$parent(567)",6d59e3083ed82de3490c2f5ca35a07bb73806fea,427dd53b9ebedcb0bdb687007eb0faf2de734df4,1518634196,introduced,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$parent:Node(477)","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$parent:Node(477)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref(526)",e15d5a8aa84a34917e4ef47135dfc62e58ea7650,198ba6cbe49832ac09ca84c6920e9be661a3b56a,1506666613,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<TypeDeclaration>(438)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<ResolvedTypeDeclaration>(435)",TP,"Change Variable Type ref : SymbolReference<TypeDeclaration> to ref : SymbolReference<ResolvedTypeDeclaration> in method protected convertToUsage(type Type, context Context) : ResolvedType from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref(526)",6df1aa26f75ff0d716a1290007e2b63cc05001ae,a1c7c58143a592965f8378767adc69709e4c0043,1478359356,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<ReferenceTypeDeclaration>(594)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<TypeDeclaration>(594)",TP,"Change Variable Type ref : SymbolReference<ReferenceTypeDeclaration> to ref : SymbolReference<TypeDeclaration> in method public convertToUsage(type Type, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref(526)",f93a05f9cd65e67ad0edc33d4e26b107ae792e14,6df1aa26f75ff0d716a1290007e2b63cc05001ae,1478358517,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<TypeDeclaration>(594)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<ReferenceTypeDeclaration>(594)",TP,"Change Variable Type ref : SymbolReference<TypeDeclaration> to ref : SymbolReference<ReferenceTypeDeclaration> in method public convertToUsage(type Type, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$ref(526)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<TypeDeclaration>(131)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$ref:SymbolReference<TypeDeclaration>(131)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type(519)",89ffb2c7b40459d6e8869a15c575128051a424d6,90c22f84a61e12130a8750d235acf7ed06305796,1482163301,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type<?>(711)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type(711)",TP,"Change Parameter Type type : Type<?> to type : Type in method private convertToUsage(type Type, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type(519)",9b70a8a55b99c1c4e3eb7f5c0f2d52ee26008566,c990d23490f5c4ac4322119b03d5951b63eef055,1481634638,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type(596)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type<?>(760)",TP,"Change Parameter Type type : Type to type : Type<?> in method public convertToUsage(type Type<?>, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type(519)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type(545)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type:Type(546)",TP,"Change Parameter Type type : Type to type : com.github.javaparser.ast.type.Type in method public convertToUsage(type com.github.javaparser.ast.type.Type, context Context) : Type from class me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$type(519)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$type:Type(124)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$type:Type(124)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration(530)",e15d5a8aa84a34917e4ef47135dfc62e58ea7650,198ba6cbe49832ac09ca84c6920e9be661a3b56a,1506666613,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:TypeDeclaration(442)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:ResolvedTypeDeclaration(439)",TP,"Change Variable Type typeDeclaration : TypeDeclaration to typeDeclaration : ResolvedTypeDeclaration in method protected convertToUsage(type Type, context Context) : ResolvedType from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration(530)",6df1aa26f75ff0d716a1290007e2b63cc05001ae,a1c7c58143a592965f8378767adc69709e4c0043,1478359356,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:ReferenceTypeDeclaration(598)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:TypeDeclaration(598)",TP,"Change Variable Type typeDeclaration : ReferenceTypeDeclaration to typeDeclaration : TypeDeclaration in method public convertToUsage(type Type, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration(530)",f93a05f9cd65e67ad0edc33d4e26b107ae792e14,6df1aa26f75ff0d716a1290007e2b63cc05001ae,1478358517,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:TypeDeclaration(598)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:ReferenceTypeDeclaration(598)",TP,"Change Variable Type typeDeclaration : TypeDeclaration to typeDeclaration : ReferenceTypeDeclaration in method public convertToUsage(type Type, context Context) : Type from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration(530)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:TypeDeclaration(135)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$typeDeclaration:TypeDeclaration(135)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters(531)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<Type>(442)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<ResolvedType>(443)",TP,"Change Variable Type typeParameters : List<Type> to typeParameters : List<ResolvedType> in method protected convertToUsage(type Type, context Context) : ResolvedType from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters(531)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<TypeUsage>(561)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<Type>(562)",TP,"Change Variable Type typeParameters : List<TypeUsage> to typeParameters : List<Type> in method public convertToUsage(type Type, context Context) : Type from class me.tomassetti.symbolsolver.javaparsermodel.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$typeParameters(531)",4d05d549c2b858fc83777763e92e537909faa513,2568d9ebe91ceb0a13c98b16f99593cd22084efa,1438678975,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<TypeUsage>(136)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#convertToUsage(Type, Context)$typeParameters:List<TypeUsage>(136)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$unionType(564)",1ce778adbd65164443df6ed3a9838b0b43df3715,f63811a47591d89b25a1de78686bdc6dfcaf42b9,1511608529,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$unionType:UnionType(488)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$unionType:UnionType(488)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator(571)",6d59e3083ed82de3490c2f5ca35a07bb73806fea,427dd53b9ebedcb0bdb687007eb0faf2de734df4,1518634196,introduced,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator:VariableDeclarator(481)","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator:VariableDeclarator(481)",FP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator(571)",05933cfff73136b1b99988d33379351f966d6d3d,6d59e3083ed82de3490c2f5ca35a07bb73806fea,1518630141,introduced,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java,"javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator:VariableDeclarator(477)","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$variableDeclarator:VariableDeclarator(477)",FN,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#convertToUsage(Type, Context)$wildcardType(548)",fb388c36c0045c50744cf215521e5c280036aa70,03ec309bba14eaf50a32b05353fa9711b831de7f,1446303702,introduced,src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.resolution.javaparser.JavaParserFacade#convertToUsage(Type, Context)$wildcardType:WildcardType(369)","src/main/java/me.tomassetti.symbolsolver.resolution.javaparser.JavaParserFacade#convertToUsage(Type, Context)$wildcardType:WildcardType(369)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#getTypeConcrete(Node, boolean)$node(465)",c1925c6f5ee7fc63f43ae51aedc174a991db503a,627b56302d259409e9bc50b20d77803484f18b5c,1438784743,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#getTypeConcrete(Node, boolean)$node:Node(124)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#getTypeConcrete(Node, boolean)$node:Node(124)",TP,"Extract Method private getTypeConcrete(node Node, solveLambdas boolean) : TypeUsage extracted from public getType(node Node, solveLambdas boolean) : TypeUsage in class me.tomassetti.symbolsolver.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade#getTypeConcrete(Node, boolean)$solveLambdas(465)",c1925c6f5ee7fc63f43ae51aedc174a991db503a,627b56302d259409e9bc50b20d77803484f18b5c,1438784743,introduced,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,src/main/java/me/tomassetti/symbolsolver/JavaParserFacade.java,"src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#getTypeConcrete(Node, boolean)$solveLambdas:boolean(124)","src/main/java/me.tomassetti.symbolsolver.JavaParserFacade#getTypeConcrete(Node, boolean)$solveLambdas:boolean(124)",TP,"Extract Method private getTypeConcrete(node Node, solveLambdas boolean) : TypeUsage extracted from public getType(node Node, solveLambdas boolean) : TypeUsage in class me.tomassetti.symbolsolver.JavaParserFacade"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType(90)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType:Type(91)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType:ResolvedType(91)",TP,"Change Variable Type argType : Type to argType : ResolvedType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType(90)",5ea0249ec0806f73f6c26d2460d343bbb2f42da0,acdac6790f4424f8097b3aa6c888e825cac485f9,1489108943,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType:Type(68)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$argType:Type(68)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType(92)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType:LambdaConstraintType(93)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType:ResolvedLambdaConstraintType(93)",TP,"Change Variable Type conType : LambdaConstraintType to conType : ResolvedLambdaConstraintType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType(92)",5ea0249ec0806f73f6c26d2460d343bbb2f42da0,acdac6790f4424f8097b3aa6c888e825cac485f9,1489108943,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType:LambdaConstraintType(69)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$conType:LambdaConstraintType(69)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl(60)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl:ValueDeclaration(61)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl:ResolvedValueDeclaration(61)",TP,"Change Variable Type decl : ValueDeclaration to decl : ResolvedValueDeclaration in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl(60)",de1a81827f176ec98a8f69e3bdd030de9fe73401,e529ad59cb7c1766706162cbc3a4fca49cd88e3e,1474642198,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl:ValueDeclaration(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$decl:ValueDeclaration(42)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry(113)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameterDeclaration,Type>(114)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Pair<ResolvedTypeParameterDeclaration,ResolvedType>(114)",TP,"Change Variable Type entry : Tuple2<TypeParameterDeclaration,Type> to entry : Pair<ResolvedTypeParameterDeclaration,ResolvedType> in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry(113)",04795580f2c5fc92f5d546ce3da82605f750f155,ecc78c8b480ceb41019f764c983aaa69c2dabfe3,1476463882,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameter,Type>(71)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameterDeclaration,Type>(71)",TP,"Change Variable Type entry : Tuple2<TypeParameter,Type> to entry : Tuple2<TypeParameterDeclaration,Type> in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry(113)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameter,TypeUsage>(72)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameter,Type>(71)",TP,"Change Variable Type entry : Tuple2<TypeParameter,TypeUsage> to entry : Tuple2<TypeParameter,Type> in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry(113)",38d780df85a22c9baffb1f772a45b063cad73aab,401a56f412ca186a00a2282d9088e8cb7b67e0e5,1476308582,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameter,TypeUsage>(72)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$entry:Tuple2<TypeParameter,TypeUsage>(72)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$found(79)",1016f42321316f6b6bd0e7f4cb51ee5958e01153,0aaa5e5b086a557801d54f8a3ac236e08513e774,1489173077,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$found:boolean(80)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$found:boolean(80)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod(71)",1016f42321316f6b6bd0e7f4cb51ee5958e01153,0aaa5e5b086a557801d54f8a3ac236e08513e774,1489173077,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod:MethodUsage(72)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod:MethodUsage(72)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod(106)",de1a81827f176ec98a8f69e3bdd030de9fe73401,e529ad59cb7c1766706162cbc3a4fca49cd88e3e,1474642198,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod:Optional<MethodUsage>(63)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethod:Optional<MethodUsage>(63)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethodOpt(69)",1016f42321316f6b6bd0e7f4cb51ee5958e01153,0aaa5e5b086a557801d54f8a3ac236e08513e774,1489173077,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethodOpt:Optional<MethodUsage>(70)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$functionalMethodOpt:Optional<MethodUsage>(70)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$i(65)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$i:int(30)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$i:int(30)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$index(59)",38d780df85a22c9baffb1f772a45b063cad73aab,401a56f412ca186a00a2282d9088e8cb7b67e0e5,1476308582,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$index:int(43)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$index:int(43)",TP,"Extract Variable index : int in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferenceContext(72)",1016f42321316f6b6bd0e7f4cb51ee5958e01153,0aaa5e5b086a557801d54f8a3ac236e08513e774,1489173077,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferenceContext:InferenceContext(73)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferenceContext:InferenceContext(73)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes(111)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(112)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes:Map<ResolvedTypeParameterDeclaration,ResolvedType>(112)",TP,"Change Variable Type inferredTypes : Map<TypeParameterDeclaration,Type> to inferredTypes : Map<ResolvedTypeParameterDeclaration,ResolvedType> in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes(111)",cf0045ad73d15502e16c6de02334d39383dfee78,2082034e8c3eb434e3df25dd420c98cae5a6d518,1477329545,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(73)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(73)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaParamIndex(80)",1016f42321316f6b6bd0e7f4cb51ee5958e01153,0aaa5e5b086a557801d54f8a3ac236e08513e774,1489173077,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaParamIndex:int(81)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaParamIndex:int(81)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(66)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:Type(67)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:ResolvedType(67)",TP,"Change Variable Type lambdaType : Type to lambdaType : ResolvedType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(66)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(50)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:Type(49)",TP,"Change Variable Type lambdaType : TypeUsage to lambdaType : Type in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(66)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(31)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(31)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(108)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:Type(109)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:ResolvedType(109)",TP,"Change Variable Type lambdaType : Type to lambdaType : ResolvedType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(108)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(68)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:Type(67)",TP,"Change Variable Type lambdaType : TypeUsage to lambdaType : Type in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType(108)",de1a81827f176ec98a8f69e3bdd030de9fe73401,e529ad59cb7c1766706162cbc3a4fca49cd88e3e,1474642198,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(65)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$lambdaType:TypeUsage(65)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodCallExpr(63)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodCallExpr:MethodCallExpr(28)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodCallExpr:MethodCallExpr(28)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodUsage(64)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodUsage:MethodUsage(29)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$methodUsage:MethodUsage(29)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$name(56)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$name:String(24)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$name:String(24)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot(115)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Type(116)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:ResolvedType(116)",TP,"Change Variable Type ot : Type to ot : ResolvedType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot(115)",ba1a6f460d78648597035ae675a9dfeecb3d534f,6fcf6356a95a250db103245c1c5f2d596f9493d6,1477127916,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Optional<Type>(79)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Type(79)",TP,"Change Variable Type ot : Optional<Type> to ot : Type in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot(115)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Optional<TypeUsage>(74)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Optional<Type>(73)",TP,"Change Variable Type ot : Optional<TypeUsage> to ot : Optional<Type> in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot(115)",38d780df85a22c9baffb1f772a45b063cad73aab,401a56f412ca186a00a2282d9088e8cb7b67e0e5,1476308582,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Optional<TypeUsage>(74)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$ot:Optional<TypeUsage>(74)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$parameter(57)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$parameter:Parameter(25)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$parameter:Parameter(25)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$sb(58)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$sb:SymbolDeclarator(26)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$sb:SymbolDeclarator(26)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t(105)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:Type(106)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:ResolvedType(106)",TP,"Change Variable Type t : Type to t : ResolvedType in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t(105)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:TypeUsage(65)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:Type(64)",TP,"Change Variable Type t : TypeUsage to t : Type in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t(105)",38d780df85a22c9baffb1f772a45b063cad73aab,401a56f412ca186a00a2282d9088e8cb7b67e0e5,1476308582,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:TypeUsage(65)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$t:TypeUsage(65)",TP,"Extract Variable t : TypeUsage in method public solveSymbolAsValue(name String, typeSolver TypeSolver) : Optional<Value> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$typeSolver(56)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$typeSolver:TypeSolver(24)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$typeSolver:TypeSolver(24)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value(98)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(32)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(32)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value(123)",de1a81827f176ec98a8f69e3bdd030de9fe73401,e529ad59cb7c1766706162cbc3a4fca49cd88e3e,1474642198,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(66)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(66)",FP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value(123)",fd2e083224d3ee0e9ccca4431d63a84601e0d606,1adb8b4c97103ac5b15d009f3eda791a53b83d6f,1438783706,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/LambdaExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(32)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$value:Value(32)",FN,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$variableDeclarator(104)",de1a81827f176ec98a8f69e3bdd030de9fe73401,e529ad59cb7c1766706162cbc3a4fca49cd88e3e,1474642198,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$variableDeclarator:VariableDeclarator(54)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.LambdaExprContext#solveSymbolAsValue(String, TypeSolver)$variableDeclarator:VariableDeclarator(54)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes(153)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes:List<Type>(156)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes:List<ResolvedType>(150)",TP,"Change Parameter Type argumentsTypes : List<Type> to argumentsTypes : List<ResolvedType> in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes(153)",1cc78a37dbd0df4ce02c984766764b009f8a9a74,88db8b2a8b93bcc692cb8fd5085ba68b8bcf1968,1476725156,rename,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<Type>(229)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$argumentsTypes:List<Type>(229)",TP,"Rename Parameter parameterTypes : List<Type> to argumentsTypes : List<Type> in method public solveMethod(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes(153)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<TypeUsage>(234)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<Type>(235)",TP,"Change Parameter Type parameterTypes : List<TypeUsage> to parameterTypes : List<Type> in method public solveMethod(name String, parameterTypes List<Type>, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes(153)",2f49331fb22511346eea8800d27907de44409d5b,8b8cc6cddbf5af0c93c4ceffd015f6328c932149,1438368778,type change,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<TypeReference>(31)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<TypeUsage>(30)",TP,"Change Parameter Type parameterTypes : List<TypeReference> to parameterTypes : List<TypeUsage> in method public solveMethod(name String, parameterTypes List<TypeUsage>, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$argumentsTypes(153)",d83eefd415a7c1ee4d8a105ffd5b6ac78a249f27,2f49331fb22511346eea8800d27907de44409d5b,1438358880,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<TypeReference>(31)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$parameterTypes:List<TypeReference>(31)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$name(153)",2f49331fb22511346eea8800d27907de44409d5b,8b8cc6cddbf5af0c93c4ceffd015f6328c932149,1438368778,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$name:String(30)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$name:String(30)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$res(156)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$res:SymbolReference<MethodDeclaration>(187)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$res:SymbolReference<ResolvedMethodDeclaration>(181)",TP,"Change Variable Type res : SymbolReference<MethodDeclaration> to res : SymbolReference<ResolvedMethodDeclaration> in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$res(156)",a146baccadce7a36102773c64061e404d7b6a9cc,a16d5b37001074f2fa6eea4d1d1ef7e0466ca51b,1476004009,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$res:SymbolReference<MethodDeclaration>(224)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$res:SymbolReference<MethodDeclaration>(224)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$bound:ResolvedTypeParameterDeclaration.Bound(180)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd:ResolvedReferenceTypeDeclaration(153)",FP,"Change Variable Type bound : ResolvedTypeParameterDeclaration.Bound to rrtd : ResolvedReferenceTypeDeclaration in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,rename,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$bound:ResolvedTypeParameterDeclaration.Bound(180)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd:ResolvedReferenceTypeDeclaration(153)",FP,"Rename Variable bound : ResolvedTypeParameterDeclaration.Bound to rrtd : ResolvedReferenceTypeDeclaration in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd:ResolvedReferenceTypeDeclaration(153)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd:ResolvedReferenceTypeDeclaration(153)",FN,"null"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$bound:TypeParameterDeclaration.Bound(186)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$bound:ResolvedTypeParameterDeclaration.Bound(180)",FP,"Change Variable Type bound : TypeParameterDeclaration.Bound to bound : ResolvedTypeParameterDeclaration.Bound in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",04795580f2c5fc92f5d546ce3da82605f750f155,ecc78c8b480ceb41019f764c983aaa69c2dabfe3,1476463882,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameter.Bound(263)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameterDeclaration.Bound(264)",FP,"Change Variable Type bound : TypeParameter.Bound to bound : TypeParameterDeclaration.Bound in method public solveMethod(name String, parameterTypes List<Type>, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameter.Bound(261)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameter.Bound(262)",FP,"Change Variable Type bound : TypeParameter.Bound to bound : me.tomassetti.symbolsolver.model.resolution.TypeParameter.Bound in method public solveMethod(name String, parameterTypes List<Type>, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtd(155)",a146baccadce7a36102773c64061e404d7b6a9cc,a16d5b37001074f2fa6eea4d1d1ef7e0466ca51b,1476004009,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameter.Bound(223)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$bound:TypeParameter.Bound(223)",FP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds(154)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,rename,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$scope:Expression(152)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds:Collection<ResolvedReferenceTypeDeclaration>(152)",FP,"Rename Variable scope : Expression to rrtds : Collection<ResolvedReferenceTypeDeclaration> in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds(154)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$scope:Expression(152)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds:Collection<ResolvedReferenceTypeDeclaration>(152)",FP,"Change Variable Type scope : Expression to rrtds : Collection<ResolvedReferenceTypeDeclaration> in method public solveMethod(name String, argumentsTypes List<ResolvedType>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<ResolvedMethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds(154)",c6db610f516f3748ab7863414e45ed7fbf39b7be,1db4cd7914d4f36224a4a8944e546650d5fc5a4d,1512916440,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds:Collection<ResolvedReferenceTypeDeclaration>(152)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds:Collection<ResolvedReferenceTypeDeclaration>(152)",FN,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$rrtds(154)",2b60ba79b29908e6db077f5f1bee5ea5f9fb9f7a,065875981b4d1ffa4bf3535d7c89319a4a3345f1,1484181926,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$scope:Expression(135)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$scope:Expression(135)",FP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$staticOnly(153)",e5fe2b597be66d230f8824277c1d4167fa2bb609,17ac5ada0476c72aa79a2e0c39311e90bfa0fe60,1489030303,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$staticOnly:boolean(133)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$staticOnly:boolean(133)",TP,"Add Parameter staticOnly : boolean in method public solveMethod(name String, argumentsTypes List<Type>, staticOnly boolean, typeSolver TypeSolver) : SymbolReference<MethodDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethod(String, List, boolean, TypeSolver)$typeSolver(153)",2f49331fb22511346eea8800d27907de44409d5b,8b8cc6cddbf5af0c93c4ceffd015f6328c932149,1438368778,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$typeSolver:TypeSolver(30)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethod(String, List, TypeSolver)$typeSolver:TypeSolver(30)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes(76)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes:List<Type>(79)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes:List<ResolvedType>(73)",TP,"Change Parameter Type argumentsTypes : List<Type> to argumentsTypes : List<ResolvedType> in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes(76)",1cc78a37dbd0df4ce02c984766764b009f8a9a74,88db8b2a8b93bcc692cb8fd5085ba68b8bcf1968,1476725156,rename,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parameterTypes:List<Type>(175)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes:List<Type>(175)",TP,"Rename Parameter parameterTypes : List<Type> to argumentsTypes : List<Type> in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes(76)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parameterTypes:List<TypeUsage>(180)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parameterTypes:List<Type>(181)",TP,"Change Parameter Type parameterTypes : List<TypeUsage> to parameterTypes : List<Type> in method public solveMethodAsUsage(name String, parameterTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$argumentsTypes(76)",eae2cd895cfd52c09d22d5e8decbd3c81eca1cbc,fd2e083224d3ee0e9ccca4431d63a84601e0d606,1438781426,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parameterTypes:List<TypeUsage>(26)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parameterTypes:List<TypeUsage>(26)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$className(81)",be64d2e61b56eafd01abc7236a7a0dcd6ce6dafd,7b2a0b366461674aa6320b11a38a17909d8a74a3,1440318263,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$className:String(46)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$className:String(46)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes(100)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(103)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes:Map<ResolvedTypeParameterDeclaration,ResolvedType>(97)",TP,"Change Variable Type inferredTypes : Map<TypeParameterDeclaration,Type> to inferredTypes : Map<ResolvedTypeParameterDeclaration,ResolvedType> in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes(100)",cf0045ad73d15502e16c6de02334d39383dfee78,2082034e8c3eb434e3df25dd420c98cae5a6d518,1477329545,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(286)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$inferredTypes:Map<TypeParameterDeclaration,Type>(286)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m(84)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m:SymbolReference<MethodDeclaration>(87)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m:SymbolReference<ResolvedMethodDeclaration>(81)",TP,"Change Variable Type m : SymbolReference<MethodDeclaration> to m : SymbolReference<ResolvedMethodDeclaration> in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m(84)",be64d2e61b56eafd01abc7236a7a0dcd6ce6dafd,7b2a0b366461674aa6320b11a38a17909d8a74a3,1440318263,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m:SymbolReference<MethodDeclaration>(49)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$m:SymbolReference<MethodDeclaration>(49)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$methodUsage(86)",605f06d2742d3818a35e13ee6970faa547f62018,ead147279ca0b84d2f479a714943b20cd689e7c7,1448035478,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/javaparser/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$methodUsage:MethodUsage(153)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$methodUsage:MethodUsage(153)",TP,"Extract Variable methodUsage : MethodUsage in method public solveMethodAsUsage(name String, parameterTypes List<TypeUsage>, typeSolver TypeSolver) : Optional<MethodUsage> from class me.tomassetti.symbolsolver.resolution.javaparser.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$name(76)",eae2cd895cfd52c09d22d5e8decbd3c81eca1cbc,fd2e083224d3ee0e9ccca4431d63a84601e0d606,1438781426,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$name:String(26)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$name:String(26)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType(104)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType:Type(107)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType:ResolvedType(101)",TP,"Change Variable Type originalArgumentType : Type to originalArgumentType : ResolvedType in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType(104)",6a58d3aa0ef665a38c08ce26db0d311ee97243bf,d017fb8caf6ccb3343da0062eb2c85262712772c,1477589481,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType:Type(285)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$originalArgumentType:Type(285)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parentContext(115)",6c297529e31036058837adbaa57cee652d4cc918,46aefdd68f2f2597a19b72da36681123cb3090e6,1440326040,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parentContext:Context(66)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$parentContext:Context(66)",TP,"Extract Variable parentContext : Context in method public solveMethodAsUsage(name String, parameterTypes List<TypeUsage>, typeSolver TypeSolver) : Optional<MethodUsage> from class me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref(82)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<TypeDeclaration>(85)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<ResolvedTypeDeclaration>(79)",TP,"Change Variable Type ref : SymbolReference<TypeDeclaration> to ref : SymbolReference<ResolvedTypeDeclaration> in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref(82)",6df1aa26f75ff0d716a1290007e2b63cc05001ae,a1c7c58143a592965f8378767adc69709e4c0043,1478359356,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<ReferenceTypeDeclaration>(262)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<TypeDeclaration>(262)",TP,"Change Variable Type ref : SymbolReference<ReferenceTypeDeclaration> to ref : SymbolReference<TypeDeclaration> in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref(82)",f93a05f9cd65e67ad0edc33d4e26b107ae792e14,6df1aa26f75ff0d716a1290007e2b63cc05001ae,1478358517,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<TypeDeclaration>(265)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<ReferenceTypeDeclaration>(262)",TP,"Change Variable Type ref : SymbolReference<TypeDeclaration> to ref : SymbolReference<ReferenceTypeDeclaration> in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref(82)",be64d2e61b56eafd01abc7236a7a0dcd6ce6dafd,7b2a0b366461674aa6320b11a38a17909d8a74a3,1440318263,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<TypeDeclaration>(47)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$ref:SymbolReference<TypeDeclaration>(47)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$scope(78)",2b60ba79b29908e6db077f5f1bee5ea5f9fb9f7a,065875981b4d1ffa4bf3535d7c89319a4a3345f1,1484181926,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$scope:Expression(77)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$scope:Expression(77)",TP,"Extract Variable scope : Expression in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope(97)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:Type(100)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:ResolvedType(94)",TP,"Change Variable Type typeOfScope : Type to typeOfScope : ResolvedType in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope(97)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:TypeUsage(184)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:Type(185)",TP,"Change Variable Type typeOfScope : TypeUsage to typeOfScope : Type in method public solveMethodAsUsage(name String, parameterTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class me.tomassetti.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope(97)",eae2cd895cfd52c09d22d5e8decbd3c81eca1cbc,fd2e083224d3ee0e9ccca4431d63a84601e0d606,1438781426,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:TypeUsage(28)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeOfScope:TypeUsage(28)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeSolver(76)",eae2cd895cfd52c09d22d5e8decbd3c81eca1cbc,fd2e083224d3ee0e9ccca4431d63a84601e0d606,1438781426,introduced,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,src/main/java/me/tomassetti/symbolsolver/model/javaparser/contexts/MethodCallExprContext.java,"src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeSolver:TypeSolver(26)","src/main/java/me.tomassetti.symbolsolver.model.javaparser.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$typeSolver:TypeSolver(26)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType(105)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(108)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:ResolvedType(102)",TP,"Change Variable Type updatedArgumentType : Type to updatedArgumentType : ResolvedType in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType(105)",6a58d3aa0ef665a38c08ce26db0d311ee97243bf,d017fb8caf6ccb3343da0062eb2c85262712772c,1477589481,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(286)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(286)",TP,"Extract Variable updatedArgumentType : Type in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType(109)",223fc7650a7a3b89b43d81160f40326aaeaa98f1,5d8d0cb7947efcf2282f7d056302dd905f348532,1506630980,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(112)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:ResolvedType(106)",TP,"Change Variable Type updatedArgumentType : Type to updatedArgumentType : ResolvedType in method public solveMethodAsUsage(name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType(109)",6a58d3aa0ef665a38c08ce26db0d311ee97243bf,d017fb8caf6ccb3343da0062eb2c85262712772c,1477589481,introduced,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(290)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext#solveMethodAsUsage(String, List, TypeSolver)$updatedArgumentType:Type(290)",TP,"Extract Variable updatedArgumentType : Type in method public solveMethodAsUsage(name String, argumentsTypes List<Type>, typeSolver TypeSolver) : Optional<MethodUsage> from class com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(80)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:Type(87)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType:ResolvedType(81)",TP,"Change Variable Type actualType : Type to actualType : ResolvedType in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(80)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(51)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:Type(51)",TP,"Change Variable Type actualType : TypeUsage to actualType : Type in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(80)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(51)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(51)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(108)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:Type(115)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType:ResolvedType(109)",TP,"Change Variable Type actualType : Type to actualType : ResolvedType in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(108)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(76)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:Type(76)",TP,"Change Variable Type actualType : TypeUsage to actualType : Type in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$actualType(108)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(72)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$actualType:TypeUsage(72)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes(71)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes:List<Type>(78)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes:List<ResolvedType>(72)",TP,"Change Parameter Type argumentsTypes : List<Type> to argumentsTypes : List<ResolvedType> in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes(71)",1cc78a37dbd0df4ce02c984766764b009f8a9a74,88db8b2a8b93bcc692cb8fd5085ba68b8bcf1968,1476725156,rename,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$paramTypes:List<Type>(51)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes:List<Type>(51)",TP,"Rename Parameter paramTypes : List<Type> to argumentsTypes : List<Type> in method private isApplicable(method MethodDeclaration, name String, argumentsTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes(71)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$paramTypes:List<TypeUsage>(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$paramTypes:List<Type>(42)",TP,"Change Parameter Type paramTypes : List<TypeUsage> to paramTypes : List<Type> in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$argumentsTypes(71)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$paramTypes:List<TypeUsage>(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$paramTypes:List<TypeUsage>(42)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(79)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:Type(86)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType:ResolvedType(80)",TP,"Change Variable Type expectedType : Type to expectedType : ResolvedType in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(79)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(50)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:Type(50)",TP,"Change Variable Type expectedType : TypeUsage to expectedType : Type in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(79)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(50)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(50)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(107)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:Type(114)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType:ResolvedType(108)",TP,"Change Variable Type expectedType : Type to expectedType : ResolvedType in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(107)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(75)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:Type(75)",TP,"Change Variable Type expectedType : TypeUsage to expectedType : Type in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$expectedType(107)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(71)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$expectedType:TypeUsage(71)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$i(106)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$i:int(70)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$i:int(70)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$isAssignableWithoutSubstitution(113)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$isAssignableWithoutSubstitution:boolean(73)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$isAssignableWithoutSubstitution:boolean(73)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters(104)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,Type>(111)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,ResolvedType>(105)",TP,"Change Variable Type matchedParameters : Map<String,Type> to matchedParameters : Map<String,ResolvedType> in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters(104)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,TypeUsage>(72)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,Type>(72)",TP,"Change Variable Type matchedParameters : Map<String,TypeUsage> to matchedParameters : Map<String,Type> in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters(104)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,TypeUsage>(68)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$matchedParameters:Map<String,TypeUsage>(68)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$method(71)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$method:MethodDeclaration(78)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$method:ResolvedMethodDeclaration(72)",TP,"Change Parameter Type method : MethodDeclaration to method : ResolvedMethodDeclaration in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$method(71)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$method:MethodDeclaration(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$method:MethodDeclaration(42)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$name(71)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$name:String(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$name:String(42)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$needForWildCardTolerance(105)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$needForWildCardTolerance:boolean(69)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$needForWildCardTolerance:boolean(69)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$pos(76)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$pos:int(47)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$pos:int(47)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(82)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameterDeclaration(89)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp:ResolvedTypeParameterDeclaration(83)",TP,"Change Variable Type tp : TypeParameterDeclaration to tp : ResolvedTypeParameterDeclaration in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(82)",04795580f2c5fc92f5d546ce3da82605f750f155,ecc78c8b480ceb41019f764c983aaa69c2dabfe3,1476463882,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameterDeclaration(53)",TP,"Change Variable Type tp : TypeParameter to tp : TypeParameterDeclaration in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(82)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(124)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameterDeclaration(89)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp:ResolvedTypeParameterDeclaration(83)",TP,"Change Variable Type tp : TypeParameterDeclaration to tp : ResolvedTypeParameterDeclaration in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(124)",04795580f2c5fc92f5d546ce3da82605f750f155,ecc78c8b480ceb41019f764c983aaa69c2dabfe3,1476463882,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameterDeclaration(53)",TP,"Change Variable Type tp : TypeParameter to tp : TypeParameterDeclaration in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$tp(124)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$tp:TypeParameter(53)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$typeParameters(122)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<TypeParameterDeclaration>(129)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<ResolvedTypeParameterDeclaration>(123)",TP,"Change Variable Type typeParameters : List<TypeParameterDeclaration> to typeParameters : List<ResolvedTypeParameterDeclaration> in method private isApplicable(method ResolvedMethodDeclaration, name String, argumentsTypes List<ResolvedType>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$typeParameters(122)",04795580f2c5fc92f5d546ce3da82605f750f155,ecc78c8b480ceb41019f764c983aaa69c2dabfe3,1476463882,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<TypeParameter>(90)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<TypeParameterDeclaration>(90)",TP,"Change Variable Type typeParameters : List<TypeParameter> to typeParameters : List<TypeParameterDeclaration> in method private isApplicable(method MethodDeclaration, name String, paramTypes List<Type>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean from class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$typeParameters(122)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<TypeParameter>(82)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeParameters:List<TypeParameter>(82)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$typeSolver(71)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeSolver:TypeSolver(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$typeSolver:TypeSolver(42)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic#isApplicable(ResolvedMethodDeclaration, String, List, TypeSolver, boolean)$withWildcardTolerance(71)",407c343559d9633054c6d07b649f8b08e5eba8a3,c48864ccaea00039c2f6a8390d21cffd3fbde054,1476372360,introduced,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/resolution/MethodResolutionLogic.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$withWildcardTolerance:boolean(42)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.resolution.MethodResolutionLogic#isApplicable(MethodDeclaration, String, List, TypeSolver, boolean)$withWildcardTolerance:boolean(42)",TP,"Extract Method private isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver, withWildcardTolerance boolean) : boolean extracted from public isApplicable(method MethodDeclaration, name String, paramTypes List<TypeUsage>, typeSolver TypeSolver) : boolean in class me.tomassetti.symbolsolver.resolution.MethodResolutionLogic"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$node(114)",e7704aa00835e056f7870bcb255db697f1f7ca25,0c4c859f472f7243919f1af7a0871cf8155af1ba,1440190806,introduced,src/main/java/me/tomassetti/symbolsolver/ProjectResolver.java,src/main/java/me/tomassetti/symbolsolver/ProjectResolver.java,"src/main/java/me.tomassetti.symbolsolver.ProjectResolver#solveField(Node)$node:Node(29)","src/main/java/me.tomassetti.symbolsolver.ProjectResolver#solveField(Node)$node:Node(29)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$re(131)",69308a5f2ce954f2aa044d1162f5163fe4370e8c,37f93be6476b00be051173d0cde614fc8a3677e5,1440581573,introduced,src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,"src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$re:RuntimeException(99)","src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$re:RuntimeException(99)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref(124)",5d8d0cb7947efcf2282f7d056302dd905f348532,e15d5a8aa84a34917e4ef47135dfc62e58ea7650,1506665261,type change,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/SourceFileInfoExtractor.java,java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/SourceFileInfoExtractor.java,"java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref:Type(122)","java-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref:ResolvedType(123)",TP,"Change Variable Type ref : Type to ref : ResolvedType in method private solve(node Node) : void from class com.github.javaparser.symbolsolver.SourceFileInfoExtractor"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref(124)",b75d0c51157475833e5364ec6df88b2b6fe0db79,82eb44707b620803d424188a1eb8708fcaf093cb,1476389491,type change,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,java-symbol-solver-core/src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,"java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref:TypeUsage(100)","java-symbol-solver-core/src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref:Type(100)",TP,"Change Variable Type ref : TypeUsage to ref : Type in method private solve(node Node) : void from class me.tomassetti.symbolsolver.SourceFileInfoExtractor"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$ref(124)",e7704aa00835e056f7870bcb255db697f1f7ca25,0c4c859f472f7243919f1af7a0871cf8155af1ba,1440190806,introduced,src/main/java/me/tomassetti/symbolsolver/ProjectResolver.java,src/main/java/me/tomassetti/symbolsolver/ProjectResolver.java,"src/main/java/me.tomassetti.symbolsolver.ProjectResolver#solveField(Node)$ref:TypeUsage(33)","src/main/java/me.tomassetti.symbolsolver.ProjectResolver#solveField(Node)$ref:TypeUsage(33)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-symbol-solver-core/src/main/java/com.github.javaparser.symbolsolver.SourceFileInfoExtractor#solve(Node)$upe(127)",69308a5f2ce954f2aa044d1162f5163fe4370e8c,37f93be6476b00be051173d0cde614fc8a3677e5,1440581573,introduced,src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,src/main/java/me/tomassetti/symbolsolver/SourceFileInfoExtractor.java,"src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$upe:UnsupportedOperationException(96)","src/main/java/me.tomassetti.symbolsolver.SourceFileInfoExtractor#solve(Node)$upe:UnsupportedOperationException(96)",TP,"new variable"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg(409)",5202f0f5f664b45b792d4910882cec2580e9045c,40dc8d37c07dc624780d215bd1ff3e00878fe9c5,1320094538,modifier change,src/main/java/japa/parser/ast/visitor/VoidVisitorAdapter.java,src/main/java/japa/parser/ast/visitor/VoidVisitorAdapter.java,"src/main/java/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg:A(575)","src/main/java/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg:A(575)",TP,"Add Parameter Modifier final in parameter arg : A in method public visit(n MethodDeclaration, arg A) : void from class japa.parser.ast.visitor.VoidVisitorAdapter"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg(409)",7b2741cfb627157580719dd43c46b716bde4267e,2d4decafdf373c4d1cabd9c6f8a97707c72069ff,1319981759,introduced,src/japa/parser/ast/visitor/VoidVisitorAdapter.java,src/japa/parser/ast/visitor/VoidVisitorAdapter.java,"src/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg:A(524)","src/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$arg:A(524)",TP,"added with method"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n(409)",5202f0f5f664b45b792d4910882cec2580e9045c,40dc8d37c07dc624780d215bd1ff3e00878fe9c5,1320094538,modifier change,src/main/java/japa/parser/ast/visitor/VoidVisitorAdapter.java,src/main/java/japa/parser/ast/visitor/VoidVisitorAdapter.java,"src/main/java/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n:MethodDeclaration(575)","src/main/java/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n:MethodDeclaration(575)",TP,"Add Parameter Modifier final in parameter n : MethodDeclaration in method public visit(n MethodDeclaration, arg A) : void from class japa.parser.ast.visitor.VoidVisitorAdapter"
"https://github.com/javaparser/javaparser.git","javaparser-core/src/main/java/com.github.javaparser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n(409)",7b2741cfb627157580719dd43c46b716bde4267e,2d4decafdf373c4d1cabd9c6f8a97707c72069ff,1319981759,introduced,src/japa/parser/ast/visitor/VoidVisitorAdapter.java,src/japa/parser/ast/visitor/VoidVisitorAdapter.java,"src/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n:MethodDeclaration(524)","src/japa.parser.ast.visitor.VoidVisitorAdapter#visit(MethodDeclaration, A)$n:MethodDeclaration(524)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit(247)",6a51d97948a29c262c5b506466425c3169a56947,22b285695a2980824c15363ef5fec709ebc3d434,1282581974,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit:Commit(165)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit:CommitBuilder(165)",TP,"Change Variable Type commit : Commit to commit : CommitBuilder in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit(247)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit:Commit(131)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commit:Commit(131)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commitId(254)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commitId:ObjectId(138)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$commitId:ObjectId(138)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$git(183)",fa7d9ac5b86b6b84997cbaafe9a4e80bf76df430,ab57af08e83d5d042bb954ad280389b34ca36d0e,1280922788,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$git:Git(133)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$git:Git(133)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$head(193)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$head:Ref(112)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$head:Ref(112)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headCommit(238)",a01d6c1e55093529aaddc54bb6082a818f0956c6,da43d8d79890e561a993a4d90e6a2724a04cd60f,1453284859,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headCommit:RevCommit(239)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headCommit:RevCommit(239)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headId(199)",3c667b328ae086dcbfe159a22b3c86779a4590e5,6ca9843f3ebbea152969a8b795efce1d4ff15dbf,1274399386,rename,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$parentID:ObjectId(120)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headId:ObjectId(137)",TP,"Rename Variable parentID : ObjectId to headId : ObjectId in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$headId(199)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$parentID:ObjectId(118)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$parentID:ObjectId(118)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$index(223)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$index:DirCache(121)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$index:DirCache(121)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$indexTreeId(231)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$indexTreeId:ObjectId(128)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$indexTreeId:ObjectId(128)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$odi(224)",cad10e6640258fd6bc6bc3183e4dbc61e83bf544,88530a179e2ddfa81de5cc441a27d66521334608,1277513201,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$repoWriter:ObjectWriter(144)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$odi:ObjectInserter(144)",TP,"Change Variable Type repoWriter : ObjectWriter to odi : ObjectInserter in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$odi(224)",cad10e6640258fd6bc6bc3183e4dbc61e83bf544,88530a179e2ddfa81de5cc441a27d66521334608,1277513201,rename,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$repoWriter:ObjectWriter(144)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$odi:ObjectInserter(144)",TP,"Rename Variable repoWriter : ObjectWriter to odi : ObjectInserter in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$odi(224)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$repoWriter:ObjectWriter(123)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$repoWriter:ObjectWriter(123)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p(207)",d9d3439617677d75ffde57d2860807fa7c14aff0,1f51aecf95d61e48618d478a693f73dcf1ec1146,1364493501,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p:RevCommit[](187)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p:RevCommit(187)",TP,"Change Variable Type p : RevCommit[] to p : RevCommit in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p(207)",440d7f41270f18f430b40d4ce3873d84593a5533,cda64073fd45d3056486b96877e4ff6dd12dbaa5,1299514760,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p:RevCommit[](163)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$p:RevCommit[](163)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$prefix(263)",65f9a6e58bd9296cbbe1cffc7cf079fd65991686,9830baf48dd5b3feb9780a3cc1d83b79e1d4c46b,1300135891,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$prefix:String(214)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$prefix:String(214)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$previousCommit(206)",440d7f41270f18f430b40d4ce3873d84593a5533,cda64073fd45d3056486b96877e4ff6dd12dbaa5,1299514760,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$previousCommit:RevCommit(161)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$previousCommit:RevCommit(161)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rc(273)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rc:Result(147)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rc:Result(147)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$revCommit(257)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$revCommit:RevCommit(140)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$revCommit:RevCommit(140)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$ru(258)",541ad72ac6a6529e20fb1b0694c592c0bcc98d38,f3fb5824ba45197787bc4ffb81fafcd576c60291,1273497475,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$ru:RefUpdate(141)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$ru:RefUpdate(141)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rw(168)",a62770a3dda7ac4a0fa7877e1cd42db3a99a8ecc,c93a59330249677cd990820b59558a39f747009f,1368305129,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rw:RevWalk(155)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$rw:RevWalk(155)",TP,"Extract Variable rw : RevWalk in method public call() : RevCommit from class org.eclipse.jgit.api.CommitCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$state(169)",3c667b328ae086dcbfe159a22b3c86779a4590e5,6ca9843f3ebbea152969a8b795efce1d4ff15dbf,1274399386,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$state:RepositoryState(124)","org.eclipse.jgit/src/org.eclipse.jgit.api.CommitCommand#call()$state:RepositoryState(124)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheEntry(454)",b69284f72d717f50981c822edbff1dc3313cdd58,1a867d10b974cab4d43d77f5b392f4f07807ebd8,1303251061,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheEntry:DirCacheEntry(328)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheEntry:DirCacheEntry(328)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheIterator(448)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheIterator:DirCacheIterator(280)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$dirCacheIterator:DirCacheIterator(280)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$e(540)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$e:ConfigInvalidException(509)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$e:ConfigInvalidException(509)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estIndexSize(410)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estIndexSize:int(246)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estIndexSize:int(246)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estWorkTreeSize(409)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estWorkTreeSize:int(245)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$estWorkTreeSize:int(245)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$filters(425)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$filters:Collection<TreeFilter>(259)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$filters:Collection<TreeFilter>(259)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$i(523)",2532c28cb93ccb8e674ef374f08fb3bf246c353b,5328c8c9164414a63ce7f1323d8194b84b6f1e49,1415263229,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$i:int(505)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$i:int(505)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$localIgnoreSubmoduleMode(531)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$localIgnoreSubmoduleMode:IgnoreSubmoduleMode(500)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$localIgnoreSubmoduleMode:IgnoreSubmoduleMode(500)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$monitor(409)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$monitor:ProgressMonitor(245)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$monitor:ProgressMonitor(245)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path(459)",1c40d83f52730379e56b0a95485aad42a52b8e04,1080cc5a0d67012c0ef08d9468fbbc9d90b0c238,1366383906,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path:String(403)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path:String(403)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path(521)",2532c28cb93ccb8e674ef374f08fb3bf246c353b,5328c8c9164414a63ce7f1323d8194b84b6f1e49,1415263229,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path:String(507)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$path:String(507)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smid(554)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smid:IndexDiff(519)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smid:IndexDiff(519)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smw(532)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smw:SubmoduleWalk(501)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$smw:SubmoduleWalk(501)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$stage(457)",1c40d83f52730379e56b0a95485aad42a52b8e04,1080cc5a0d67012c0ef08d9468fbbc9d90b0c238,1366383906,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$stage:int(401)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$stage:int(401)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subHead(548)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subHead:ObjectId(515)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subHead:ObjectId(515)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepo(545)",2f5a08798eb29e8141c452c0dc2622bc8fe90dd0,95172dea173425697814e3ba0b4eb823301bf7d0,1415007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepo:Repository(514)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepo:Repository(514)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepoPath(547)",f5a2c77dc4bc1b0a40ca4b8a8d6a51c3b042ee4a,df3469f6ad81dccb314bf2d5021a3cec2b184985,1502712231,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepoPath:String(544)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$subRepoPath:String(544)",TP,"Extract Variable subRepoPath : String in method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean from class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$title(410)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$title:String(246)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$title:String(246)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$total(432)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$total:int(266)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$total:int(266)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeIterator(446)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeIterator:AbstractTreeIterator(278)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeIterator:AbstractTreeIterator(278)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeWalk(414)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeWalk:TreeWalk(250)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$treeWalk:TreeWalk(250)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$workingTreeIterator(450)",e43887b69e27672b80e55391e0ee255efe715ab9,5e2e3819a690b739eba773415899d20db88a452e,1295569734,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexDiff.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$workingTreeIterator:WorkingTreeIterator(282)","org.eclipse.jgit/src/org.eclipse.jgit.lib.IndexDiff#diff(ProgressMonitor, int, int, String)$workingTreeIterator:WorkingTreeIterator(282)",TP,"Extract Method public diff(monitor ProgressMonitor, estWorkTreeSize int, estIndexSize int, title String) : boolean extracted from public diff() : boolean in class org.eclipse.jgit.lib.IndexDiff"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$base(306)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$base:ObjectId(192)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$base:ObjectId(192)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$conflicts(435)",dfcb43eff1bbdc58b6d286b4d18256ce8af56a78,26b573862912b2faf3824bb18dfeb44a3b700014,1323383633,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$conflicts:List<String>(256)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$conflicts:List<String>(256)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$dco(242)",36e396f8b997d83480a392cc102d9dda38e24019,85f69c286b6c3225dcff05aba42910daefb28da0,1296058664,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$dco:DirCacheCheckout(150)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$dco:DirCacheCheckout(150)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$failingPaths(352)",77f79659f575dd8b8739707e6c8ddba51d765c78,45e79a526c7ffebaf8e4758a6cb6b7af05716707,1283210514,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$failingPaths:Map<String,MergeFailureReason>(170)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$failingPaths:Map<String,MergeFailureReason>(170)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$git(394)",6424dcd6943ce4cad362bff6afad56e849ddbe54,0e73d395061d1bfee365acaa2f79c392175d13bf,1432159296,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$git:Git(372)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$git:Git(372)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$head(244)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$head:Ref(115)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$head:Ref(115)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headCommit(287)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headCommit:RevCommit(122)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headCommit:RevCommit(122)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headId(265)",36e396f8b997d83480a392cc102d9dda38e24019,85f69c286b6c3225dcff05aba42910daefb28da0,1296058664,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headId:ObjectId(147)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$headId:ObjectId(147)",TP,"Extract Variable headId : ObjectId in method public call() : MergeResult from class org.eclipse.jgit.api.MergeCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults(351)",18aadc826dae7c6308c2a6c68d48ab75c8dd9b6d,67263e2056108e471d684c3cef9e719724b51220,1283827031,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults:Map<String,org.eclipse.jgit.merge.MergeResult>(176)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults:Map<String,org.eclipse.jgit.merge.MergeResult<?>>(176)",TP,"Change Variable Type lowLevelResults : Map<String,org.eclipse.jgit.merge.MergeResult> to lowLevelResults : Map<String,org.eclipse.jgit.merge.MergeResult<?>> in method public call() : MergeResult from class org.eclipse.jgit.api.MergeCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults(351)",77f79659f575dd8b8739707e6c8ddba51d765c78,45e79a526c7ffebaf8e4758a6cb6b7af05716707,1283210514,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults:Map<String,org.eclipse.jgit.merge.MergeResult>(169)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$lowLevelResults:Map<String,org.eclipse.jgit.merge.MergeResult>(169)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessage(332)",3151657404859454bdf60345c09b536d1269c0c8,5dbef3fa51053b37f68b44ed390cab6dc8336dcc,1302123469,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessage:String(192)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessage:String(192)",TP,"Extract Variable mergeMessage : String in method public call() : MergeResult from class org.eclipse.jgit.api.MergeCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessageWithConflicts(422)",3151657404859454bdf60345c09b536d1269c0c8,5dbef3fa51053b37f68b44ed390cab6dc8336dcc,1302123469,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessageWithConflicts:String(237)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeMessageWithConflicts:String(237)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus(307)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus:MergeStatus(193)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus:MergeStatus(193)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus(386)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus:MergeStatus(255)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$mergeStatus:MergeStatus(255)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger(348)",e38cf2078d22e2c902a373371382ac8d82268f2d,c580c56c4def9639b603553b3d4cbc7117a30938,1313959982,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger:ThreeWayMerger(196)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger:Merger(196)",TP,"Change Variable Type merger : ThreeWayMerger to merger : Merger in method public call() : MergeResult from class org.eclipse.jgit.api.MergeCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger(348)",77f79659f575dd8b8739707e6c8ddba51d765c78,45e79a526c7ffebaf8e4758a6cb6b7af05716707,1283210514,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger:ThreeWayMerger(166)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$merger:ThreeWayMerger(166)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg(305)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg:String(191)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg:String(191)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg(384)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg:String(253)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$msg:String(253)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHead(306)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHead:ObjectId(192)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHead:ObjectId(192)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHeadId(385)",81b601de53125bbcd30620b58168154d7541d8ad,545358577376bec8fc140a76ce0f72bf81cc0a94,1365081109,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHeadId:ObjectId(355)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$newHeadId:ObjectId(355)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$noProblems(350)",77f79659f575dd8b8739707e6c8ddba51d765c78,45e79a526c7ffebaf8e4758a6cb6b7af05716707,1283210514,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$noProblems:boolean(168)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$noProblems:boolean(168)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$objectId(259)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$objectId:ObjectId(129)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$objectId:ObjectId(129)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$ref(253)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$ref:Ref(124)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$ref:Ref(124)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refLogMessage(248)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refLogMessage:StringBuilder(118)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refLogMessage:StringBuilder(118)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refUpdate(273)",36e396f8b997d83480a392cc102d9dda38e24019,85f69c286b6c3225dcff05aba42910daefb28da0,1296058664,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refUpdate:RefUpdate(154)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$refUpdate:RefUpdate(154)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$resolveMerger(355)",77f79659f575dd8b8739707e6c8ddba51d765c78,45e79a526c7ffebaf8e4758a6cb6b7af05716707,1283210514,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$resolveMerger:ResolveMerger(172)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$resolveMerger:ResolveMerger(172)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$revWalk(243)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$revWalk:RevWalk(121)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$revWalk:RevWalk(121)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage(318)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage:String(204)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage:String(204)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage(344)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage:String(222)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashMessage:String(222)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits(316)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits:List<RevCommit>(202)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits:List<RevCommit>(202)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits(342)",c4087af65ddfd976f2a2513a773f50b1fd790336,2656ac1b5acb9b73c6b47e2cf8830a0a0b2cc214,1339743581,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits:List<RevCommit>(220)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$squashedCommits:List<RevCommit>(220)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$srcCommit(263)",6ca9843f3ebbea152969a8b795efce1d4ff15dbf,5b0e73b849d19c9f072c4c6738a5d5adae413112,1274712748,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$srcCommit:RevCommit(133)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$srcCommit:RevCommit(133)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$unmergedPaths(353)",3151657404859454bdf60345c09b536d1269c0c8,5dbef3fa51053b37f68b44ed390cab6dc8336dcc,1302123469,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$unmergedPaths:List<String>(201)","org.eclipse.jgit/src/org.eclipse.jgit.api.MergeCommand#call()$unmergedPaths:List<String>(201)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$added(1808)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$added:RevFlag(1119)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$added:RevFlag(1119)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$all(1803)",11a5bef8b1c866fadc9b340a1300c7fdd927a46b,f048af3fd19547d3692f5df968571ffd7556b688,1282351287,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$all:List<ObjectId>(1015)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$all:List<ObjectId>(1015)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$baseTrees(1897)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$baseTrees:Set<RevTree>(1032)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$baseTrees:Set<RevTree>(1032)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bases(1960)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$bases:BaseSearch(1044)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$bases:BaseSearch(1044)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bitmapIndex(1791)",3b325917a5c928caadd88a0ec718b1632f088fd5,dafcb8f6db82b899c917832768f1c240d273190c,1362510885,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$bitmapIndex:BitmapIndex(1619)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$bitmapIndex:BitmapIndex(1619)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bitmapWalker(1793)",5ea57ba1b5b02dd69b7ff66a346e62c94cd277ed,ccf25f95411d7faae7b7aa5a75d74c62e6c47e07,1510357291,type change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bitmapWalker:PackWriterBitmapWalker(1717)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bitmapWalker:BitmapWalker(1718)",TP,"Change Variable Type bitmapWalker : PackWriterBitmapWalker to bitmapWalker : BitmapWalker in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>, noBitmaps Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$bitmapWalker(1793)",3b325917a5c928caadd88a0ec718b1632f088fd5,dafcb8f6db82b899c917832768f1c240d273190c,1362510885,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$bitmapWalker:PackWriterBitmapWalker(1621)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$bitmapWalker:PackWriterBitmapWalker(1621)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$c(1900)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$c:RevCommit(1182)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$c:RevCommit(1182)",FP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$c(1900)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,type change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$o:RevObject(1180)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$c:RevCommit(1182)",FN,"null"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$c(1900)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,rename,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$o:RevObject(1180)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$c:RevCommit(1182)",FN,"null"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$c(1900)",c544e96a4cd027a127bc6e6ad5277091b3c0da73,065a0a8122be356d1f898321763d3518b504b075,1296228026,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk)$o:RevObject(1031)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk)$o:RevObject(1031)",FN,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$cmit(1919)",a1a8c6d77ec5bea13c4f5ca428e425d95e14e003,9952223e0645fd7a8cddc6093a7f449c6390238d,1313960663,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$cmit:RevCommit(1555)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$cmit:RevCommit(1555)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$cmit(1925)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$cmit:RevCommit(1212)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$cmit:RevCommit(1212)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$commitCnt(1923)",19037e8cfc2d9534f79e40c898fdaeacaf499e82,8f865bfffed575c3a4db6d7db92dc5f752f97237,1298081726,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commitCnt:int(1273)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commitCnt:int(1273)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$commits(1898)",1f57061684c83623d7d08be9044fc9cfd7b9fb54,f67e5602af72b7b2238eb6f6fcdc206a47edabd5,1299551019,type change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commits:List<RevCommit>(1301)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commits:BlockList<RevCommit>(1300)",TP,"Change Variable Type commits : List<RevCommit> to commits : BlockList<RevCommit> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$commits(1898)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commits:List<RevCommit>(1181)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$commits:List<RevCommit>(1181)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$countingMonitor(1775)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$countingMonitor:ProgressMonitor(1600)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$countingMonitor:ProgressMonitor(1608)",TP,"Add Parameter Annotation @NonNull in parameter countingMonitor : ProgressMonitor in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$countingMonitor(1775)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$countingMonitor:ProgressMonitor(1600)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$countingMonitor:ProgressMonitor(1608)",TP,"Remove Parameter Modifier final in parameter countingMonitor : ProgressMonitor in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$countingMonitor(1775)",8f63dface2e08b228cdeb3bef3f93458eab9ce14,2fbcba41e365752681f635c706d577e605d3336a,1296572604,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$countingMonitor:ProgressMonitor(976)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$countingMonitor:ProgressMonitor(976)",TP,"Add Parameter countingMonitor : ProgressMonitor in method private findObjectsToPack(countingMonitor ProgressMonitor, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$countingStart(1779)",24c1c530db67d56cfad9713ac59354d067421231,c8c4524b6b36c1d97e715de9e1ff1aa18763a390,1297633391,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$countingStart:long(1101)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$countingStart:long(1101)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$depthWalk(1868)",a1a8c6d77ec5bea13c4f5ca428e425d95e14e003,9952223e0645fd7a8cddc6093a7f449c6390238d,1313960663,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$depthWalk:DepthWalk.ObjectWalk(1509)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$depthWalk:DepthWalk.ObjectWalk(1509)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$e(1842)",11a5bef8b1c866fadc9b340a1300c7fdd927a46b,f048af3fd19547d3692f5df968571ffd7556b688,1282351287,rename,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$x:MissingObjectException(981)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$e:MissingObjectException(1045)",TP,"Rename Variable x : MissingObjectException to e : MissingObjectException in method private setUpWalker(interestingObjects Collection<? extends ObjectId>, uninterestingObjects Collection<? extends ObjectId>) : ObjectWalk from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$e(1842)",0,1a6964c8274c50f0253db75f010d78ef0e739343,1254268023,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#setUpWalker(Collection, Collection)$x:MissingObjectException(845)","org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#setUpWalker(Collection, Collection)$x:MissingObjectException(845)",TP,"Initial commit!"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$have(1777)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$have:Set<?extendsObjectId>(1602)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$have:Set<?extendsObjectId>(1610)",TP,"Add Parameter Annotation @NonNull in parameter have : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$have(1777)",100e9429b5a7eea8383c6e693d17b6233794c488,74333e63b60440be5ff9f591f2203b635e26e3a0,1313522319,type change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$have:Collection<?extendsObjectId>(1260)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$have:Set<?extendsObjectId>(1340)",TP,"Change Parameter Type have : Collection<? extends ObjectId> to have : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$have(1777)",8f63dface2e08b228cdeb3bef3f93458eab9ce14,2fbcba41e365752681f635c706d577e605d3336a,1296572604,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$have:Collection<?extendsObjectId>(978)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$have:Collection<?extendsObjectId>(978)",TP,"Add Parameter have : Collection<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$haveEst(1812)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$haveEst:int(1070)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$haveEst:int(1070)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$haveObjs(1822)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$haveObjs:List<RevObject>(1089)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$haveObjs:List<RevObject>(1089)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$i(1932)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$i:int(1218)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$i:int(1218)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$id(1885)",a1a8c6d77ec5bea13c4f5ca428e425d95e14e003,9952223e0645fd7a8cddc6093a7f449c6390238d,1313960663,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$id:ObjectId(1513)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$id:ObjectId(1513)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$id(1943)",19037e8cfc2d9534f79e40c898fdaeacaf499e82,8f865bfffed575c3a4db6d7db92dc5f752f97237,1298081726,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$id:ObjectId(1292)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$id:ObjectId(1292)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$include(1807)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$include:RevFlag(1062)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$include:RevFlag(1062)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$maxBases(1896)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$maxBases:int(1031)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$maxBases:int(1031)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$noBitmaps(1778)",69d5e89e99707119837eb1f025ee2c8d6d376996,c46c720e99baa081bff0dd7bcc1ae8ca48b5e3d1,1495146321,introduced,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$noBitmaps:Set<?extendsObjectId>(1702)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$noBitmaps:Set<?extendsObjectId>(1702)",TP,"Add Parameter noBitmaps : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>, noBitmaps Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$o(1831)",11a5bef8b1c866fadc9b340a1300c7fdd927a46b,f048af3fd19547d3692f5df968571ffd7556b688,1282351287,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$o:RevObject(978)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$o:RevObject(1038)",TP,"Remove Variable Modifier final in variable o : RevObject in method private setUpWalker(interestingObjects Collection<? extends ObjectId>, uninterestingObjects Collection<? extends ObjectId>) : ObjectWalk from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$o(1831)",0,1a6964c8274c50f0253db75f010d78ef0e739343,1254268023,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#setUpWalker(Collection, Collection)$o:RevObject(842)","org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#setUpWalker(Collection, Collection)$o:RevObject(842)",TP,"Initial commit!"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$o(1962)",8f63dface2e08b228cdeb3bef3f93458eab9ce14,2fbcba41e365752681f635c706d577e605d3336a,1296572604,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$o:RevObject(1023)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$o:RevObject(1023)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$o(1977)",489604aaad8ef8d252bf31056db4de01e690fa0b,99e6cfb131bb407247acbc8c0a73e7c7cf37ebc2,1312841411,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$o:RevObject(1456)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$o:RevObject(1456)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1869)",3e64b928d51b3a28e89cfe2a3f0eeae35ef07839,19037e8cfc2d9534f79e40c898fdaeacaf499e82,1298081725,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1215)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1215)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1877)",9843489cb88d7c7cee09ced484c2fbc84ec1e3ef,7edf05530d83d7f8971db4262ea43e11124c6b63,1470356423,introduced,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$obj:RevObject(1708)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$obj:RevObject(1708)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1890)",a1a8c6d77ec5bea13c4f5ca428e425d95e14e003,9952223e0645fd7a8cddc6093a7f449c6390238d,1313960663,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$obj:RevObject(1517)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$obj:RevObject(1517)",FP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1890)",3e64b928d51b3a28e89cfe2a3f0eeae35ef07839,19037e8cfc2d9534f79e40c898fdaeacaf499e82,1298081725,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1215)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1215)",FN,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1893)",3e64b928d51b3a28e89cfe2a3f0eeae35ef07839,19037e8cfc2d9534f79e40c898fdaeacaf499e82,1298081725,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1217)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1217)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$obj(1944)",19037e8cfc2d9534f79e40c898fdaeacaf499e82,8f865bfffed575c3a4db6d7db92dc5f752f97237,1298081726,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1293)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$obj:RevObject(1293)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$p(1933)",681739b1c82877424192ace581014ad09bc28acf,733780e8a158b7bc45b8b687ac353ecadc905a63,1298007123,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$p:RevCommit(1219)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$p:RevCommit(1219)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$pack(1988)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pack:CachedPack(1195)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pack:CachedPack(1195)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$pathBuf(1970)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathBuf:byte[](1051)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathBuf:byte[](1051)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$pathHash(1969)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathHash:int(1050)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathHash:int(1050)",TP,"Extract Variable pathHash : int in method private findObjectsToPack(countingMonitor ProgressMonitor, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$pathLen(1971)",2fbcba41e365752681f635c706d577e605d3336a,13bcf05a9ea2d4943faef2c879aac65d37517eb6,1296573126,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathLen:int(1052)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$pathLen:int(1052)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$putTagTargets(1924)",19037e8cfc2d9534f79e40c898fdaeacaf499e82,8f865bfffed575c3a4db6d7db92dc5f752f97237,1298081726,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$putTagTargets:boolean(1274)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$putTagTargets:boolean(1274)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$q(1827)",11a5bef8b1c866fadc9b340a1300c7fdd927a46b,f048af3fd19547d3692f5df968571ffd7556b688,1282351287,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$q:AsyncRevObjectQueue(1034)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#setUpWalker(Collection, Collection)$q:AsyncRevObjectQueue(1034)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$roots(1899)",f9bd6c1239b9e66bfd74e5a2462621a5f5fa641c,1d7d0f95e0be8121ee16640fa1cd3b0805fd9092,1439759416,introduced,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$roots:Set<ObjectId>(1721)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$roots:Set<ObjectId>(1721)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$t(1879)",9843489cb88d7c7cee09ced484c2fbc84ec1e3ef,7edf05530d83d7f8971db4262ea43e11124c6b63,1470356423,introduced,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$t:RevTree(1710)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$t:RevTree(1710)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$tag(1855)",3e64b928d51b3a28e89cfe2a3f0eeae35ef07839,19037e8cfc2d9534f79e40c898fdaeacaf499e82,1298081725,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$tag:RevTag(1203)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$tag:RevTag(1203)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$walker(1776)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$walker:ObjectWalk(1601)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$walker:ObjectWalk(1609)",TP,"Add Parameter Annotation @NonNull in parameter walker : ObjectWalk in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$walker(1776)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$walker:ObjectWalk(1601)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$walker:ObjectWalk(1609)",TP,"Remove Parameter Modifier final in parameter walker : ObjectWalk in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$walker(1776)",3dcbf375a804019a8918642d79ca72549f03290a,5664fb3bfb63e4db49dc07d13ace419e810186c2,1297633391,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$walker:ObjectWalk(1078)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$walker:ObjectWalk(1078)",TP,"Add Parameter walker : ObjectWalk in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$want(1776)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$want:Set<?extendsObjectId>(1601)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$want:Set<?extendsObjectId>(1609)",TP,"Add Parameter Annotation @NonNull in parameter want : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$want(1776)",40051505d7aaccfe2efaf5f3022f1d99a3976554,4e650c0d76b716c0e9cb3592d30def9e609066c1,1452645032,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$want:Set<?extendsObjectId>(1601)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$want:Set<?extendsObjectId>(1609)",TP,"Remove Parameter Modifier final in parameter want : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$want(1776)",100e9429b5a7eea8383c6e693d17b6233794c488,74333e63b60440be5ff9f591f2203b635e26e3a0,1313522319,type change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$want:Collection<?extendsObjectId>(1259)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set)$want:Set<?extendsObjectId>(1339)",TP,"Change Parameter Type want : Collection<? extends ObjectId> to want : Set<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, walker ObjectWalk, want Set<? extends ObjectId>, have Set<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$want(1776)",8f63dface2e08b228cdeb3bef3f93458eab9ce14,2fbcba41e365752681f635c706d577e605d3336a,1296572604,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$want:Collection<?extendsObjectId>(977)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$want:Collection<?extendsObjectId>(977)",TP,"Add Parameter want : Collection<? extends ObjectId> in method private findObjectsToPack(countingMonitor ProgressMonitor, want Collection<? extends ObjectId>, have Collection<? extends ObjectId>) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$wantObjs(1821)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$wantObjs:List<RevObject>(1088)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, Collection, Collection)$wantObjs:List<RevObject>(1088)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Set, Set, Set)$wantTags(1823)",3e64b928d51b3a28e89cfe2a3f0eeae35ef07839,19037e8cfc2d9534f79e40c898fdaeacaf499e82,1298081725,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$wantTags:List<RevTag>(1169)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#findObjectsToPack(ProgressMonitor, ObjectWalk, Collection, Collection)$wantTags:List<RevTag>(1169)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$compressMonitor(1106)",f288c27e465a91e80b53c4100c0d9b2f2341a9aa,6b62e53b607630b6c00411741972838ced552f4d,1277750848,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$compressMonitor:ProgressMonitor(585)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$compressMonitor:ProgressMonitor(585)",TP,"Add Parameter compressMonitor : ProgressMonitor in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$delay(1123)",c81f6ab3abf9fecc298294b44385538ac9e80e92,68cc21b60d83b5c4fb1de6c34a79836c51dd9b3b,1311873770,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$delay:long(650)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$delay:long(650)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$deltaCnt(1165)",4275c4c1cffeffae6b12eb6aa2df957c23107b48,388ba7e005fdc5b61a7a494fa44ba24489d0c6d0,1298079405,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$deltaCnt:long(590)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$deltaCnt:long(590)",TP,"Extract Variable deltaCnt : long in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$needSearchForReuse(1117)",c81f6ab3abf9fecc298294b44385538ac9e80e92,68cc21b60d83b5c4fb1de6c34a79836c51dd9b3b,1311873770,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$needSearchForReuse:boolean(644)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$needSearchForReuse:boolean(644)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt(1144)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,type change,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt:int(504)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt:long(537)",TP,"Change Variable Type objCnt : int to objCnt : long in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt(1144)",396fe6da4593645e1b9bada4fe314f6169ab2d17,21f76c2a69836ec618c82eb9305656dcec70befb,1280339428,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt:int(853)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$objCnt:int(853)",TP,"Extract Variable objCnt : int in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$out(1137)",1ad2feb7b3d48d8bfedfdd03ee6ca4f599041476,f288c27e465a91e80b53c4100c0d9b2f2341a9aa,1277750848,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(OutputStream)$out:PackOutputStream(614)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(OutputStream)$out:PackOutputStream(614)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$pack(1164)",71f168fcd77ec100d68233d3d467f770304f6eb8,461b012e9565af8174e5b9d2b2c3a582011ce77e,1296768022,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$pack:CachedPack(548)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$pack:CachedPack(548)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$packStream(1107)",0,1a6964c8274c50f0253db75f010d78ef0e739343,1254268023,introduced,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/lib/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#writePack(OutputStream)$packStream:OutputStream(589)","org.eclipse.jgit/src/org.eclipse.jgit.lib.PackWriter#writePack(OutputStream)$packStream:OutputStream(589)",TP,"Initial commit!"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat(1156)",53fb3e3dd394a845688696bd4afa343002dc36c6,d9bbb04c3ef28db1d2e492506a819b7ac5c5f9df,1434142576,type change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(984)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:PackStatistics.ObjectType.Accumulator(985)",TP,"Change Variable Type typeStat : Statistics.ObjectType to typeStat : PackStatistics.ObjectType.Accumulator in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat(1156)",62fe7c7313e4e7a4339fe9df3a9dc2335461df29,bb1956e647d2f48ef36ef98a7f22120fdad0b37c,1300473072,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(660)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(660)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat(1177)",53fb3e3dd394a845688696bd4afa343002dc36c6,d9bbb04c3ef28db1d2e492506a819b7ac5c5f9df,1434142576,type change,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(1005)","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:PackStatistics.ObjectType.Accumulator(1006)",TP,"Change Variable Type typeStat : Statistics.ObjectType to typeStat : PackStatistics.ObjectType.Accumulator in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.internal.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat(1177)",62fe7c7313e4e7a4339fe9df3a9dc2335461df29,bb1956e647d2f48ef36ef98a7f22120fdad0b37c,1300473072,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(680)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$typeStat:Statistics.ObjectType(680)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeMonitor(1107)",f288c27e465a91e80b53c4100c0d9b2f2341a9aa,6b62e53b607630b6c00411741972838ced552f4d,1277750848,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeMonitor:ProgressMonitor(586)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeMonitor:ProgressMonitor(586)",TP,"Add Parameter writeMonitor : ProgressMonitor in method public writePack(compressMonitor ProgressMonitor, writeMonitor ProgressMonitor, packStream OutputStream) : void from class org.eclipse.jgit.storage.pack.PackWriter"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.internal.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeStart(1149)",24c1c530db67d56cfad9713ac59354d067421231,c8c4524b6b36c1d97e715de9e1ff1aa18763a390,1297633391,introduced,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java,"org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeStart:long(578)","org.eclipse.jgit/src/org.eclipse.jgit.storage.pack.PackWriter#writePack(ProgressMonitor, ProgressMonitor, OutputStream)$writeStart:long(578)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$branchName(216)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$branchName:String(128)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$branchName:String(128)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$commitToMerge(307)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$commitToMerge:AnyObjectId(210)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$commitToMerge:AnyObjectId(210)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetch(285)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetch:FetchCommand(197)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetch:FetchCommand(197)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetchRes(268)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetchRes:FetchResult(203)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fetchRes:FetchResult(203)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fullBranch(218)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fullBranch:String(130)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$fullBranch:String(130)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$isRemote(266)",0544c9af4159ede49a42119833f680b2435e78a7,7668a462829b12e4f6a192c43157152ef63ff305,1288282682,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$isRemote:boolean(185)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$isRemote:boolean(185)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$merge(351)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$merge:MergeCommand(237)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$merge:MergeCommand(237)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$mergeRes(352)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$mergeRes:MergeResult(240)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$mergeRes:MergeResult(240)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$missingKey(274)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$missingKey:String(163)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$missingKey:String(163)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$r(309)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$r:Ref(212)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$r:Ref(212)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebase(342)",e8a1328d05aa55b7ace0d101e34b87422219c959,14ca80bc90ed85e3484fa28aa665fa0538096d30,1296223492,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebase:RebaseCommand(226)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebase:RebaseCommand(226)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebaseRes(343)",e8a1328d05aa55b7ace0d101e34b87422219c959,14ca80bc90ed85e3484fa28aa665fa0538096d30,1296223492,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebaseRes:RebaseResult(228)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$rebaseRes:RebaseResult(228)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri(267)",0544c9af4159ede49a42119833f680b2435e78a7,7668a462829b12e4f6a192c43157152ef63ff305,1288282682,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri:String(160)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri:String(186)",TP,"Remove Variable Modifier final in variable remoteUri : String in method public call() : PullResult from class org.eclipse.jgit.api.PullCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri(267)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri:String(160)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$remoteUri:String(160)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$repoConfig(214)",2160c09dd4f678c5f2f8e730945be637210b39de,db55d13f5f4b641a9390076ced6b1775bcfcd6f6,1286546248,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$repoConfig:Config(150)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$repoConfig:Config(150)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$result(340)",e8a1328d05aa55b7ace0d101e34b87422219c959,14ca80bc90ed85e3484fa28aa665fa0538096d30,1296223492,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$result:PullResult(224)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$result:PullResult(224)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$upstreamName(336)",ef6aec3a04c8403037779e8122fa4c89af7d3d0b,5854ca091a22346e1c710ca9f875165afb3f2cc8,1345241505,rename,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$name:String(254)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$upstreamName:String(245)",TP,"Rename Variable name : String to upstreamName : String in method public call() : PullResult from class org.eclipse.jgit.api.PullCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$upstreamName(336)",dcf7bd9a8f7acafbd1461dc0414aded2db030983,770c733687d9f2f71f30822f9691427bf83b7577,1300819578,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/PullCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$name:String(280)","org.eclipse.jgit/src/org.eclipse.jgit.api.PullCommand#call()$name:String(280)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendExists(337)",84fb2b59d11418d2fa753d27de11775ddc18adde,8eb4d926371edea2d58dc598e3ebcddacbdc326e,1353340945,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendExists:boolean(246)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendExists:boolean(246)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendFile(336)",84fb2b59d11418d2fa753d27de11775ddc18adde,8eb4d926371edea2d58dc598e3ebcddacbdc326e,1353340945,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendFile:File(245)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$amendFile:File(245)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$cce(374)",912ef3da19c7bc1975805e1e3e9746baf479c2be,baf7ca9cc0d2bdf237a9bb19486d6fde5250a7f5,1357954364,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$cce:CheckoutConflictException(358)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$cce:CheckoutConflictException(358)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$doneLines(323)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$doneLines:List<RebaseTodoLine>(271)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$doneLines:List<RebaseTodoLine>(271)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$e(283)",ef6aec3a04c8403037779e8122fa4c89af7d3d0b,5854ca091a22346e1c710ca9f875165afb3f2cc8,1345241505,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$e:FileNotFoundException(221)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$e:FileNotFoundException(221)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$i(365)",01b5b999a567691fa9602792f365ba0dd5ae061f,765896febb4b63cfe2c37dc0a73c90c79dd1591b,1383671102,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$i:int(293)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$i:int(293)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe(274)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe:IOException(152)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe:IOException(152)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe(376)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe:IOException(152)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$ioe:IOException(152)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$list(301)",c95e4fb90959c56411cdbf0e00da481b7285f2dc,591998c2d628ec4f6309caea826fab16a6de2adc,1385973915,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$list:List<String>(267)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$list:List<String>(267)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$newStep(328)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$newStep:RebaseTodoLine(276)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$newStep:RebaseTodoLine(276)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$res(306)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$res:RebaseResult(163)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$res:RebaseResult(163)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result(332)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,rename,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$isSquash:boolean(341)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(280)",FP,"Rename Variable isSquash : boolean to result : RebaseResult in method public call() : RebaseResult from class org.eclipse.jgit.api.RebaseCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result(332)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$isSquash:boolean(341)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(280)",FP,"Change Variable Type isSquash : boolean to result : RebaseResult in method public call() : RebaseResult from class org.eclipse.jgit.api.RebaseCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result(332)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(280)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(280)",FN,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result(332)",01b5b999a567691fa9602792f365ba0dd5ae061f,765896febb4b63cfe2c37dc0a73c90c79dd1591b,1383671102,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$isSquash:boolean(338)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$isSquash:boolean(338)",FP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result(368)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(316)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$result:RebaseResult(316)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$status(298)",c95e4fb90959c56411cdbf0e00da481b7285f2dc,591998c2d628ec4f6309caea826fab16a6de2adc,1385973915,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$status:Status(264)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$status:Status(264)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step(325)",18069ffe8cbede40cf2524922c262b67656e7021,979e3467112618cc787e161097986212eaaa4533,1383950591,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:RebaseTodoLine(273)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:RebaseTodoLine(273)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step(366)",e649287502407e10c89de03e82cc0de855e01dcf,c3873b584f81bc5be3fdea53e9e0e76271a9a854,1383225740,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:Step(295)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:RebaseTodoLine(274)",TP,"Change Variable Type step : Step to step : RebaseTodoLine in method public call() : RebaseResult from class org.eclipse.jgit.api.RebaseCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step(366)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:Step(185)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$step:Step(185)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps(354)",e649287502407e10c89de03e82cc0de855e01dcf,c3873b584f81bc5be3fdea53e9e0e76271a9a854,1383225740,type change,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps:List<Step>(270)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps:List<RebaseTodoLine>(267)",TP,"Change Variable Type steps : List<Step> to steps : List<RebaseTodoLine> in method public call() : RebaseResult from class org.eclipse.jgit.api.RebaseCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps(354)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps:List<Step>(181)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$steps:List<Step>(181)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitId(280)",ef6aec3a04c8403037779e8122fa4c89af7d3d0b,5854ca091a22346e1c710ca9f875165afb3f2cc8,1345241505,rename,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitName:String(214)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitId:String(218)",TP,"Rename Variable upstreamCommitName : String to upstreamCommitId : String in method public call() : RebaseResult from class org.eclipse.jgit.api.RebaseCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitId(280)",bd98a0a9a52973704467cda892e99711524de48b,e5b96a7848d680cf50123a44cbc147db91d798d3,1290441516,introduced,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitName:String(158)","org.eclipse.jgit/src/org.eclipse.jgit.api.RebaseCommand#call()$upstreamCommitName:String(158)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attrId(631)",bd63a56da2562ad0f80137aa1cb3ffa0f2296c51,ddd0fe257bc78dc9646407e7121769d0c03e0d94,1464733100,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attrId:ObjectId(559)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attrId:ObjectId(559)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attributes(532)",bd63a56da2562ad0f80137aa1cb3ffa0f2296c51,ddd0fe257bc78dc9646407e7121769d0c03e0d94,1464733100,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attributes:StringBuilder(494)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$attributes:StringBuilder(494)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$builder(528)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$builder:DirCacheBuilder(463)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$builder:DirCacheBuilder(463)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$cfg(531)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$cfg:Config(468)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$cfg:Config(468)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commit(648)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commit:CommitBuilder(507)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commit:CommitBuilder(507)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commitId(656)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commitId:ObjectId(515)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$commitId:ObjectId(515)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$content(618)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$content:String(492)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$content:String(492)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$copyfile(588)",d998bc938a21cb3871b442a3bb54b5807b6e4ed2,0b15b48f741f87277e0d1c7d29637430b880dbde,1399681550,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$copyfile:CopyFile(548)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$copyfile:CopyFile(548)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry(583)",d998bc938a21cb3871b442a3bb54b5807b6e4ed2,0b15b48f741f87277e0d1c7d29637430b880dbde,1399681550,modifier change,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(506)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(535)",TP,"Remove Variable Modifier final in variable dcEntry : DirCacheEntry in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry(583)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(475)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(475)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry(621)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(495)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntry:DirCacheEntry(495)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntryAttr(630)",bd63a56da2562ad0f80137aa1cb3ffa0f2296c51,ddd0fe257bc78dc9646407e7121769d0c03e0d94,1464733100,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntryAttr:DirCacheEntry(558)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$dcEntryAttr:DirCacheEntry(558)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$filteredProjects(504)",282dc592da152a224f58df6b21fd5f594a8778fb,9bebb1eae78401e1d3289dc3d84006c10d10c0ef,1518681582,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$filteredProjects:List<RepoProject>(504)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$filteredProjects:List<RepoProject>(504)",TP,"Extract Variable filteredProjects : List<RepoProject> in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$git(688)",282dc592da152a224f58df6b21fd5f594a8778fb,9bebb1eae78401e1d3289dc3d84006c10d10c0ef,1518681582,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$git:Git(687)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$git:Git(687)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$group(565)",bd63a56da2562ad0f80137aa1cb3ffa0f2296c51,ddd0fe257bc78dc9646407e7121769d0c03e0d94,1464733100,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$group:String(520)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$group:String(520)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$headId(642)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$headId:ObjectId(506)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$headId:ObjectId(506)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$index(527)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$index:DirCache(462)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$index:DirCache(462)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$inserter(529)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$inserter:ObjectInserter(464)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$inserter:ObjectInserter(464)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$link(598)",fac16fe16ac087753b88415e0c8d1ccacba9904a,b6fc8e2f3cb1af6f7cbc624acfac01bec002baf8,1492504417,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$link:String(600)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$link:String(600)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$linkfile(597)",fac16fe16ac087753b88415e0c8d1ccacba9904a,b6fc8e2f3cb1af6f7cbc624acfac01bec002baf8,1492504417,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$linkfile:LinkFile(599)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$linkfile:LinkFile(599)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name(534)",e0e52cb0110a908959f7df13c5e66bf911bad74f,6658f367682932c0a77061a5aa37c06e480a0c62,1532729250,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(534)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(534)",FP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name(534)",e0e52cb0110a908959f7df13c5e66bf911bad74f,6658f367682932c0a77061a5aa37c06e480a0c62,1532729250,rename,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$nameUri:String(541)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(534)",FN,"Rename Variable $nameUri : String to $name : String in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name(534)",547f05d675e27b60a8d5a32e92f8f0e04582bdab,2f6372337cfd5944e2179f5ec5e2dbe0cbc96386,1409823316,rename,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$uri:String(754)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$nameUri:String(754)",FN,"Rename Variable uri : String to nameUri : String in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name(534)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$uri:String(471)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$uri:String(471)",FN,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId(537)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId:ObjectId(476)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId:ObjectId(476)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId(622)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId:ObjectId(496)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$objectId:ObjectId(496)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$parser(506)",686124bec32fcdee1545e7d9c312dcf0276b44af,d3348e5623a2abf7b2f1356ea077d6eb9bf7760c,1432318132,rename,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$manifest:XmlManifest(726)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$parser:ManifestParser(378)",TP,"Rename Variable manifest : XmlManifest to parser : ManifestParser in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$parser(506)",686124bec32fcdee1545e7d9c312dcf0276b44af,d3348e5623a2abf7b2f1356ea077d6eb9bf7760c,1432318132,type change,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$manifest:XmlManifest(726)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$parser:ManifestParser(378)",TP,"Change Variable Type manifest : XmlManifest to parser : ManifestParser in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$parser(506)",62bbde33930226861c161a9719aaac66a7538d81,0ad8fa7b36dafbea07da15897cc2f2b601772e24,1398318531,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$manifest:XmlManifest(228)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$manifest:XmlManifest(228)",TP,"added with method"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$path(535)",251abbfcd137aafd1b6cb866ad9fe4d8089ad08c,27b05c7d719754427a97c141b44bec7de3acb8db,1490650616,rename,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(507)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$path:String(507)",TP,"Rename Variable name : String to path : String in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$path(535)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(470)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$name:String(470)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj(533)",686124bec32fcdee1545e7d9c312dcf0276b44af,d3348e5623a2abf7b2f1356ea077d6eb9bf7760c,1432318132,type change,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:Project(748)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:RepoProject(406)",TP,"Change Variable Type proj : Project to proj : RepoProject in method public call() : RevCommit from class org.eclipse.jgit.gitrepo.RepoCommand"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj(533)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:Project(469)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:Project(469)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj(689)",282dc592da152a224f58df6b21fd5f594a8778fb,9bebb1eae78401e1d3289dc3d84006c10d10c0ef,1518681582,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:RepoProject(688)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$proj:RepoProject(688)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rc(662)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rc:Result(521)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rc:Result(521)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rec(562)",bd63a56da2562ad0f80137aa1cb3ffa0f2296c51,ddd0fe257bc78dc9646407e7121769d0c03e0d94,1464733100,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rec:StringBuilder(517)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rec:StringBuilder(517)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$renamedProjects(525)",e0e52cb0110a908959f7df13c5e66bf911bad74f,6658f367682932c0a77061a5aa37c06e480a0c62,1532729250,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$renamedProjects:List<RepoProject>(525)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$renamedProjects:List<RepoProject>(525)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$ru(659)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$ru:RefUpdate(518)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$ru:RefUpdate(518)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rw(530)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rw:RevWalk(465)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$rw:RevWalk(465)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$src(589)",d998bc938a21cb3871b442a3bb54b5807b6e4ed2,0b15b48f741f87277e0d1c7d29637430b880dbde,1399681550,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$src:byte[](549)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$src:byte[](549)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$submodUrl(573)",e730fcce776b795692bbae086f0333bb4ae38a6c,fe5437e96b91222e30d9105e7bab490fd68c2d52,1492048438,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$submodUrl:URI(572)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$submodUrl:URI(572)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$treeId(639)",7f394cf16222f4066fe93e495ea682c2348039ca,056135a1482a9d56ee5055d6bc2df5bea032b5e5,1399485831,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$treeId:ObjectId(503)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$treeId:ObjectId(503)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$url(536)",e0e52cb0110a908959f7df13c5e66bf911bad74f,6658f367682932c0a77061a5aa37c06e480a0c62,1532729250,introduced,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java,"org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$url:String(536)","org.eclipse.jgit/src/org.eclipse.jgit.gitrepo.RepoCommand#call()$url:String(536)",TP,"new variable"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$accumulator(1984)",5efc3dcc6c9f5c93ba8b1f75b7070d3eb281f08d,302596cc675d00e41f0ff07efef58063afe20c79,1518472782,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator)$accumulator:PackStatistics.Accumulator(1545)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator)$accumulator:PackStatistics.Accumulator(1545)",TP,"Add Parameter accumulator : PackStatistics.Accumulator in method private sendPack(sideband boolean, accumulator PackStatistics.Accumulator) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$allTags(1985)",1046ba12f971c0e5d527f3f4153bf2f1c85bd824,c79e7f1c27c73732310bc64c2071a79902447dcc,1526515074,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection)$allTags:Collection<Ref>(1815)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection)$allTags:Collection<Ref>(1815)",TP,"Add Parameter allTags : Collection<Ref> in method private sendPack(sideband boolean, accumulator PackStatistics.Accumulator, allTags Collection<Ref>) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$bufsz(1991)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$bufsz:int(835)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$bufsz:int(835)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$cfg(2024)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$cfg:PackConfig(866)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$cfg:PackConfig(866)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$err(2015)",ef6aec3a04c8403037779e8122fa4c89af7d3d0b,9b86cf574b230a9b3a71d7cb53a4f6712bfa33eb,1345211378,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$err:SideBandOutputStream(1123)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$err:SideBandOutputStream(1125)",TP,"Add Variable Annotation @SuppressWarnings("resource") in variable err : SideBandOutputStream in method private sendPack(sideband boolean) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$err(2015)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$err:SideBandOutputStream(857)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$err:SideBandOutputStream(857)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$msg(2113)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$msg:String(932)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$msg:String(932)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$noPack(2011)",7acd333e7d2e19b48534e3e9c72b19486d6e1b9a,1f2022e3a7e9482caa4823e031504b6bbe8246af,1330571363,type change,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$noPack:UploadPackMayNotContinueException(1026)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$noPack:ServiceMayNotContinueException(1068)",TP,"Change Variable Type noPack : UploadPackMayNotContinueException to noPack : ServiceMayNotContinueException in method private sendPack(sideband boolean) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$noPack(2011)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$noPack:UploadPackMayNotContinueException(854)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$noPack:UploadPackMayNotContinueException(854)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$obj(2091)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$obj:RevObject(910)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$obj:RevObject(910)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$objectId(2080)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$objectId:ObjectId(903)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$objectId:ObjectId(903)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$ow(2073)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ow:ObjectWalk(896)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ow:ObjectWalk(896)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$packOut(1988)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$packOut:OutputStream(831)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$packOut:OutputStream(831)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$peeledId(2099)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$peeledId:ObjectId(918)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$peeledId:ObjectId(918)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$pm(1987)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$pm:ProgressMonitor(830)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$pm:ProgressMonitor(830)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$pw(2029)",ed9ede3446f0c95e80eb6feb1dec5dfa698184a9,67df4986cef270144c7cae3485dc8541ca180649,1520991863,annotation change,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator)$pw:PackWriter(1544)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator)$pw:PackWriter(1546)",TP,"Add Variable Annotation @SuppressWarnings("resource") in variable pw : PackWriter in method private sendPack(sideband boolean, accumulator PackStatistics.Accumulator) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$pw(2029)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$pw:PackWriter(869)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$pw:PackWriter(869)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$ref(2050)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ref:Ref(879)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ref:Ref(879)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$ref(2079)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ref:Ref(902)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$ref:Ref(902)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$rw(2061)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$rw:RevWalk(890)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$rw:RevWalk(890)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$sideband(1983)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$sideband:boolean(829)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$sideband:boolean(829)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$tagTargets(2049)",1a87a725be28cb33f370bb62db69ae672a64c56b,7ff6eb584cf8b83f83a3b5edf897feb53dbf42c0,1307665786,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$tagTargets:Set<ObjectId>(878)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean)$tagTargets:Set<ObjectId>(878)",TP,"Extract Method private sendPack(sideband boolean) : void extracted from private sendPack() : void in class org.eclipse.jgit.transport.UploadPack"
"https://github.com/eclipse/jgit.git","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$unshallowCommits(1986)",f516c1df9d18ff9aaba1dd5668db1776d42dd2bb,cd0d69ffec9eedff24a2692d18024e752cadc7c8,1528175058,introduced,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java,"org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$unshallowCommits:List<ObjectId>(1862)","org.eclipse.jgit/src/org.eclipse.jgit.transport.UploadPack#sendPack(boolean, PackStatistics.Accumulator, Collection, List)$unshallowCommits:List<ObjectId>(1862)",TP,"Add Parameter unshallowCommits : List<ObjectId> in method private sendPack(sideband boolean, accumulator PackStatistics.Accumulator, allTags Collection<Ref>, unshallowCommits List<ObjectId>) : void from class org.eclipse.jgit.transport.UploadPack"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$description(118)",dbe8a972fadaed5d2b88f4dfa44328fa323b59a2,08719e9b61d07c17b6a4f599ecd2cd1a1519120a,1361125293,introduced,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$description:Description(78)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$description:Description(78)",TP,"new variable"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$method(117)",53e85db0bec2e03bf93afc73dced9b4a0b231644,8bed6c9278517d9fb13f274bc5a6ade358a39745,1195064490,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#describeChild(TestMethod)$method:TestMethod(78)","src/org.junit.internal.runners.JUnit4ClassRunner#describeChild(FrameworkMethod)$method:FrameworkMethod(79)",TP,"Change Parameter Type method : TestMethod to method : FrameworkMethod in method protected describeChild(method FrameworkMethod) : Description from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$method(117)",57302f0df76fba83ba72a676bd660efeb5881af6,576377b9ad44028dc84c2f8487cfe8dbccb8c252,1191872431,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#methodDescription(Method)$method:Method(103)","src/org.junit.internal.runners.JUnit4ClassRunner#methodDescription(TestMethod)$method:TestMethod(118)",TP,"Change Parameter Type method : Method to method : TestMethod in method protected methodDescription(method TestMethod) : Description from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#describeChild(FrameworkMethod)$method(117)",a0f0ee1b3f72d9361eb09b3a25156c69a748aa47,478f7f9217cf5da219a7ba298e3a87f405378194,1140044126,introduced,org/junit/internal/runners/TestClassMethodsRunner.java,org/junit/internal/runners/TestClassMethodsRunner.java,"org.junit.internal.runners.TestClassMethodsRunner#methodDescription(Method)$method:Method(82)","org.junit.internal.runners.TestClassMethodsRunner#methodDescription(Method)$method:Method(82)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$e(312)",de43b277b8f2e63051368a36e27a35c5ed0f0e0b,59b1e2926cdebfd257c6c091ee2bd478d8aa04d2,1192210052,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod)$e:Throwable(104)","src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod)$e:Throwable(104)",TP,"new variable"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$method(303)",96ca415d66bb37d6d3c54505cf34ce5dce3fecf5,bd5b90f75908b7a3ed074a7be29823170f008fb4,1417961897,modifier change,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$method:FrameworkMethod(260)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$method:FrameworkMethod(268)",TP,"Add Parameter Modifier final in parameter method : FrameworkMethod in method protected methodBlock(method FrameworkMethod) : Statement from class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$method(303)",53e85db0bec2e03bf93afc73dced9b4a0b231644,8bed6c9278517d9fb13f274bc5a6ade358a39745,1195064490,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#childBlock(TestMethod)$method:TestMethod(87)","src/org.junit.internal.runners.JUnit4ClassRunner#childBlock(FrameworkMethod)$method:FrameworkMethod(88)",TP,"Change Parameter Type method : TestMethod to method : FrameworkMethod in method public childBlock(method FrameworkMethod) : Statement from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$method(303)",57302f0df76fba83ba72a676bd660efeb5881af6,576377b9ad44028dc84c2f8487cfe8dbccb8c252,1191872431,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod)$method:TestMethod(173)","src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod)$method:TestMethod(173)",TP,"Add Parameter method : TestMethod in method protected chain(method TestMethod) : Link from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$statement(316)",979e8abbe974e8847668f5887403da78a6165ebc,1fcd990f60518c941a44bae2596392021614a20b,1217357758,rename,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#childBlock(FrameworkMethod)$link:Statement(173)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$statement:Statement(169)",TP,"Rename Variable link : Statement to statement : Statement in method protected methodBlock(method FrameworkMethod) : Statement from class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$statement(316)",0dbe9eefa369da78ca67bf5487797a8de5b2d631,de43b277b8f2e63051368a36e27a35c5ed0f0e0b,1192208299,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$link:Link(120)","src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$link:Statement(120)",TP,"Change Variable Type link : Link to link : Statement in method protected chain(method TestMethod, test Object) : Notifier from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$statement(316)",4081076e513e84bb2376f889d4108e64e9a18653,a58514aec7e843339be24980e92aeeb759327ffb,1191603275,introduced,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#chain()$link:Link(211)","src/org.junit.internal.runners.JUnit4MethodRunner#chain()$link:Link(211)",TP,"new variable"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$test(304)",0e1c92693e70e52ad9af23ee6180500c74fc9c95,0dbe9eefa369da78ca67bf5487797a8de5b2d631,1192200543,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$test:Object(115)","src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$test:Object(115)",FP,"Add Parameter test : Object in method protected chain(method TestMethod, test Object) : NotificationStrategy from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#methodBlock(FrameworkMethod)$test(304)",6887479f1b64c5a18f5708ea6905bb59804a9a0f,b333208ccfbef77c556a270bd4385586523dcafc,1191954039,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$test:Object(113)","src/org.junit.internal.runners.JUnit4ClassRunner#chain(TestMethod, Object)$test:Object(113)",FN,"Add Parameter test : Object in method protected chain(method TestMethod, test Object) : Link from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation(344)",eb2750d861ac1ecf2dbd0425e457fe833468a169,96d7dd609920deb1336cf85dc6c9a3a0d5e30d15,1214936994,type change,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation:TestAnnotation(114)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation:Test(115)",TP,"Change Variable Type annotation : TestAnnotation to annotation : Test in method protected possiblyExpectingExceptions(method FrameworkMethod, test Object, next Statement) : Statement from class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation(344)",53e85db0bec2e03bf93afc73dced9b4a0b231644,8bed6c9278517d9fb13f274bc5a6ade358a39745,1195064490,rename,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestMethod, Statement)$method:TestMethod(119)","src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestAnnotation, Statement)$annotation:TestAnnotation(122)",TP,"Rename Parameter method : TestMethod to annotation : TestAnnotation in method private possiblyExpectingExceptions(annotation TestAnnotation, next Statement) : Statement from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation(344)",53e85db0bec2e03bf93afc73dced9b4a0b231644,8bed6c9278517d9fb13f274bc5a6ade358a39745,1195064490,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestMethod, Statement)$method:TestMethod(119)","src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestAnnotation, Statement)$annotation:TestAnnotation(122)",TP,"Change Parameter Type method : TestMethod to annotation : TestAnnotation in method private possiblyExpectingExceptions(annotation TestAnnotation, next Statement) : Statement from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$annotation(344)",57302f0df76fba83ba72a676bd660efeb5881af6,576377b9ad44028dc84c2f8487cfe8dbccb8c252,1191872431,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#handleExceptions(Link, TestMethod)$method:TestMethod(153)","src/org.junit.internal.runners.JUnit4ClassRunner#handleExceptions(Link, TestMethod)$method:TestMethod(153)",TP,"Add Parameter method : TestMethod in method public handleExceptions(next Link, method TestMethod) : Link from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$expectedExceptionClass(345)",113e8b7c6fd3f96ddbd9c759c58a27877f0f854b,6838ac0ec19918990d28ea81176cdd065aaf7c34,1488433528,introduced,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$expectedExceptionClass:Class<?extendsThrowable>(333)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$expectedExceptionClass:Class<?extendsThrowable>(333)",TP,"new variable"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$method(342)",078e45bd31a9920e00633ad6ce658e22529304f2,9bd1be07aa38d7fa2de048845f7b13458c9420d7,1214325259,introduced,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$method:FrameworkMethod(112)","src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$method:FrameworkMethod(112)",TP,"Add Parameter method : FrameworkMethod in method protected possiblyExpectingExceptions(method FrameworkMethod, test Object, next Statement) : Statement from class org.junit.internal.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$next(343)",0dbe9eefa369da78ca67bf5487797a8de5b2d631,de43b277b8f2e63051368a36e27a35c5ed0f0e0b,1192208299,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestMethod, Link)$next:Link(137)","src/org.junit.internal.runners.JUnit4ClassRunner#possiblyExpectingExceptions(TestMethod, Statement)$next:Statement(137)",TP,"Change Parameter Type next : Link to next : Statement in method protected possiblyExpectingExceptions(method TestMethod, next Statement) : Statement from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$next(343)",a58514aec7e843339be24980e92aeeb759327ffb,57302f0df76fba83ba72a676bd660efeb5881af6,1191617273,type change,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#handleExceptions(Anchor)$next:Anchor(138)","src/org.junit.internal.runners.JUnit4MethodRunner#handleExceptions(Link)$next:Link(148)",TP,"Change Parameter Type next : Anchor to next : Link in method public handleExceptions(next Link) : Link from class org.junit.internal.runners.JUnit4MethodRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$next(343)",679e5dd3e4af3115492fabed45ea8c48bfa9d9bf,4081076e513e84bb2376f889d4108e64e9a18653,1191560378,introduced,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#handleExceptions(Anchor)$next:Anchor(121)","src/org.junit.internal.runners.JUnit4MethodRunner#handleExceptions(Anchor)$next:Anchor(121)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$test(343)",078e45bd31a9920e00633ad6ce658e22529304f2,9bd1be07aa38d7fa2de048845f7b13458c9420d7,1214325259,introduced,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$test:Object(112)","src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#possiblyExpectingExceptions(FrameworkMethod, Object, Statement)$test:Object(112)",TP,"Add Parameter test : Object in method protected possiblyExpectingExceptions(method FrameworkMethod, test Object, next Statement) : Statement from class org.junit.internal.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$description(93)",708ed373c02b467422890d5163fff46d1f32ab01,a49240ade1974b948b20cf2c45d9129f04122735,1294808768,introduced,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#makeNotifier(FrameworkMethod, RunNotifier)$description:Description(386)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$description:Description(66)",TP,"Inline Method private makeNotifier(method FrameworkMethod, notifier RunNotifier) : EachTestNotifier inlined to protected runChild(method FrameworkMethod, notifier RunNotifier) : void in class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method(92)",708ed373c02b467422890d5163fff46d1f32ab01,a49240ade1974b948b20cf2c45d9129f04122735,1294808768,modifier change,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method:FrameworkMethod(66)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method:FrameworkMethod(65)",TP,"Add Parameter Modifier final in parameter method : FrameworkMethod in method protected runChild(method FrameworkMethod, notifier RunNotifier) : void from class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method(92)",53e85db0bec2e03bf93afc73dced9b4a0b231644,8bed6c9278517d9fb13f274bc5a6ade358a39745,1195064490,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#runChild(TestMethod, RunNotifier)$method:TestMethod(66)","src/org.junit.internal.runners.JUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method:FrameworkMethod(67)",TP,"Change Parameter Type method : TestMethod to method : FrameworkMethod in method protected runChild(method FrameworkMethod, notifier RunNotifier) : void from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method(92)",57302f0df76fba83ba72a676bd660efeb5881af6,576377b9ad44028dc84c2f8487cfe8dbccb8c252,1191872431,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#invokeTestMethod(Method, RunNotifier)$method:Method(75)","src/org.junit.internal.runners.JUnit4ClassRunner#invokeTestMethod(TestMethod, RunNotifier)$method:TestMethod(97)",TP,"Change Parameter Type method : Method to method : TestMethod in method protected invokeTestMethod(method TestMethod, notifier RunNotifier) : void from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$method(92)",a0f0ee1b3f72d9361eb09b3a25156c69a748aa47,478f7f9217cf5da219a7ba298e3a87f405378194,1140044126,introduced,org/junit/internal/runners/TestClassMethodsRunner.java,org/junit/internal/runners/TestClassMethodsRunner.java,"org.junit.internal.runners.TestClassMethodsRunner#invokeTestMethod(Method, RunNotifier)$method:Method(63)","org.junit.internal.runners.TestClassMethodsRunner#invokeTestMethod(Method, RunNotifier)$method:Method(63)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$notifier(92)",a0f0ee1b3f72d9361eb09b3a25156c69a748aa47,478f7f9217cf5da219a7ba298e3a87f405378194,1140044126,introduced,org/junit/internal/runners/TestClassMethodsRunner.java,org/junit/internal/runners/TestClassMethodsRunner.java,"org.junit.internal.runners.TestClassMethodsRunner#invokeTestMethod(Method, RunNotifier)$notifier:RunNotifier(63)","org.junit.internal.runners.TestClassMethodsRunner#invokeTestMethod(Method, RunNotifier)$notifier:RunNotifier(63)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$statement(97)",0f0152a8cd6dcbdb9f9cbb6ec5ca1cf2629dc12a,a90b496a6595856066504baf4f737fb853a6e45d,1425228871,introduced,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$statement:Statement(80)","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#runChild(FrameworkMethod, RunNotifier)$statement:Statement(80)",TP,"Extract Variable statement : Statement in method protected runChild(method FrameworkMethod, notifier RunNotifier) : void from class org.junit.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$method(356)",078e45bd31a9920e00633ad6ce658e22529304f2,9bd1be07aa38d7fa2de048845f7b13458c9420d7,1214325259,introduced,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$method:FrameworkMethod(119)","src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$method:FrameworkMethod(119)",TP,"Add Parameter method : FrameworkMethod in method protected withPotentialTimeout(method FrameworkMethod, test Object, next Statement) : Statement from class org.junit.internal.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$next(357)",0dbe9eefa369da78ca67bf5487797a8de5b2d631,de43b277b8f2e63051368a36e27a35c5ed0f0e0b,1192208299,type change,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#withPotentialTimeout(TestMethod, Link)$next:Link(143)","src/org.junit.internal.runners.JUnit4ClassRunner#withPotentialTimeout(TestMethod, Statement)$next:Statement(143)",TP,"Change Parameter Type next : Link to next : Statement in method protected withPotentialTimeout(method TestMethod, next Statement) : Statement from class org.junit.internal.runners.JUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$next(357)",a58514aec7e843339be24980e92aeeb759327ffb,57302f0df76fba83ba72a676bd660efeb5881af6,1191617273,type change,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Anchor)$next:Anchor(88)","src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Link)$next:Link(100)",TP,"Change Parameter Type next : Anchor to next : Link in method public timeout(next Link) : Link from class org.junit.internal.runners.JUnit4MethodRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$next(357)",4081076e513e84bb2376f889d4108e64e9a18653,a58514aec7e843339be24980e92aeeb759327ffb,1191603275,type change,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Link)$next:Link(81)","src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Anchor)$next:Anchor(88)",TP,"Change Parameter Type next : Link to next : Anchor in method public timeout(next Anchor) : Anchor from class org.junit.internal.runners.JUnit4MethodRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$next(357)",679e5dd3e4af3115492fabed45ea8c48bfa9d9bf,4081076e513e84bb2376f889d4108e64e9a18653,1191560378,introduced,src/org/junit/internal/runners/JUnit4MethodRunner.java,src/org/junit/internal/runners/JUnit4MethodRunner.java,"src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Link)$next:Link(81)","src/org.junit.internal.runners.JUnit4MethodRunner#timeout(Link)$next:Link(81)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$test(357)",078e45bd31a9920e00633ad6ce658e22529304f2,9bd1be07aa38d7fa2de048845f7b13458c9420d7,1214325259,introduced,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java,"src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$test:Object(119)","src/main/java/org.junit.internal.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$test:Object(119)",TP,"Add Parameter test : Object in method protected withPotentialTimeout(method FrameworkMethod, test Object, next Statement) : Statement from class org.junit.internal.runners.BlockJUnit4ClassRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.BlockJUnit4ClassRunner#withPotentialTimeout(FrameworkMethod, Object, Statement)$timeout(358)",57302f0df76fba83ba72a676bd660efeb5881af6,576377b9ad44028dc84c2f8487cfe8dbccb8c252,1191872431,introduced,src/org/junit/internal/runners/JUnit4ClassRunner.java,src/org/junit/internal/runners/JUnit4ClassRunner.java,"src/org.junit.internal.runners.JUnit4ClassRunner#timeout(Link, TestMethod)$timeout:long(147)","src/org.junit.internal.runners.JUnit4ClassRunner#timeout(Link, TestMethod)$timeout:long(147)",TP,"new variable"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunners()$parameters(375)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunners()$parameters:Parameters(254)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunners()$parameters:Parameters(254)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$allParameters(440)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$allParameters:Iterable<Object>(308)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$allParameters:Iterable<Object>(308)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$e(451)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$e:ClassCastException(319)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$e:ClassCastException(319)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$namePattern(440)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$namePattern:String(308)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$namePattern:String(308)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runnerFactory(441)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runnerFactory:ParametersRunnerFactory(309)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runnerFactory:ParametersRunnerFactory(309)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runners(445)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runners:List<Runner>(313)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$runners:List<Runner>(313)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$test(446)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$test:TestWithParameters(314)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$test:TestWithParameters(314)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$tests(443)",c391c25b230e880289484202f3dc3aa81c373a1c,495a9a93e4a1157e707a01467e7cc3f600c88d19,1415920461,introduced,src/main/java/org/junit/runners/Parameterized.java,src/main/java/org/junit/runners/Parameterized.java,"src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$tests:List<TestWithParameters>(311)","src/main/java/org.junit.runners.Parameterized.RunnersFactory#createRunnersForParameters(Iterable, String, ParametersRunnerFactory)$tests:List<TestWithParameters>(311)",TP,"added with method"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$each(156)",63743d52743cfdb104c38aabec192c8c86fadae0,1d97da73fdafce8f5cf9d722f23c5cba41b26b70,1398129536,introduced,src/main/java/org/junit/runners/ParentRunner.java,src/main/java/org/junit/runners/ParentRunner.java,"src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$each:TestClassValidator(133)","src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$each:TestClassValidator(133)",TP,"Extract Method private applyValidators(errors List<Throwable>) : void extracted from protected collectInitializationErrors(errors List<Throwable>) : void in class org.junit.runners.ParentRunner"
"https://github.com/junit-team/junit4.git","src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$errors(154)",63743d52743cfdb104c38aabec192c8c86fadae0,1d97da73fdafce8f5cf9d722f23c5cba41b26b70,1398129536,introduced,src/main/java/org/junit/runners/ParentRunner.java,src/main/java/org/junit/runners/ParentRunner.java,"src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$errors:List<Throwable>(131)","src/main/java/org.junit.runners.ParentRunner#applyValidators(List)$errors:List<Throwable>(131)",TP,"Extract Method private applyValidators(errors List<Throwable>) : void extracted from protected collectInitializationErrors(errors List<Throwable>) : void in class org.junit.runners.ParentRunner"
"https://github.com/junit-team/junit5.git","junit-platform-console/src/main/java/org.junit.platform.console.options.AvailableOptions#toCommandLineOptions(OptionSet)$detectedOptions(220)",7dc017fd9255ba302736d9ad1ce778f93e77b573,550e5b1d774d538ecfa22d7efe8fe893dcd9fa06,1449406126,introduced,junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java,junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java,"junit-console/src/main/java/org.junit.gen5.console.options.JOptSimpleCommandLineOptionsParser#toCommandLineOptions(AvailableOptions, OptionSet)$detectedOptions:OptionSet(42)","junit-console/src/main/java/org.junit.gen5.console.options.JOptSimpleCommandLineOptionsParser#toCommandLineOptions(AvailableOptions, OptionSet)$detectedOptions:OptionSet(42)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-platform-console/src/main/java/org.junit.platform.console.options.AvailableOptions#toCommandLineOptions(OptionSet)$result(222)",7dc017fd9255ba302736d9ad1ce778f93e77b573,550e5b1d774d538ecfa22d7efe8fe893dcd9fa06,1449406126,introduced,junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java,junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java,"junit-console/src/main/java/org.junit.gen5.console.options.JOptSimpleCommandLineOptionsParser#toCommandLineOptions(AvailableOptions, OptionSet)$result:CommandLineOptions(43)","junit-console/src/main/java/org.junit.gen5.console.options.JOptSimpleCommandLineOptionsParser#toCommandLineOptions(AvailableOptions, OptionSet)$result:CommandLineOptions(43)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context(365)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(210)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(210)",FP,"Merge Parameter [registry : ExtensionRegistry, context : ContainerExtensionContext, throwableCollector : ThrowableCollector] to context : JupiterEngineExecutionContext in method private invokeBeforeAllMethods(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context(365)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext, ThrowableCollector)$context:ContainerExtensionContext(214)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(210)",FN,"Change Parameter Type context : ContainerExtensionContext to context : JupiterEngineExecutionContext in method private invokeBeforeAllMethods(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$context(365)",36b132b0fc63a723ec0926e58921379020326c2b,b2ba6b95138382f25ca757a5ca2a7295bee4c3b8,1462203042,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext)$context:ContainerExtensionContext(173)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext)$context:ContainerExtensionContext(173)",FN,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext(367)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext:ContainerExtensionContext(235)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext:ExtensionContext(233)",TP,"Change Variable Type extensionContext : ContainerExtensionContext to extensionContext : ExtensionContext in method private invokeBeforeAllMethods(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext(367)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext:ContainerExtensionContext(212)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$extensionContext:ContainerExtensionContext(212)",TP,"Extract Variable extensionContext : ContainerExtensionContext in method private invokeBeforeAllMethods(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$method(371)",d565f81ce504834b2f8ecbf6a27956f94d723afd,62c433c14ce9d70fa5b82ef385a6e15c22cc0003,1466882960,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext, ThrowableCollector)$method:Method(217)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext, ThrowableCollector)$method:Method(217)",FP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$method(371)",b2ba6b95138382f25ca757a5ca2a7295bee4c3b8,b691e6a02b9436939bf1867156aa8d8cea4e3fbf,1462208336,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext)$method:Method(179)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(ExtensionRegistry, ContainerExtensionContext)$method:Method(179)",FN,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$registry(366)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$registry:ExtensionRegistry(211)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$registry:ExtensionRegistry(211)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$testInstance(369)",551cf902507171237211431742bbb57f527565c5,7205f05c4a314a808b1a558d1e3044ec9bccc21a,1498839402,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$testInstance:Object(209)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$testInstance:Object(209)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$throwableCollector(368)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(213)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#invokeBeforeAllMethods(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(213)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$context(140)",714da557683393fe14ddfab686f892fbc4ee559e,babcc661bd906b38a272f287ac8779669268fc58,1466428123,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$context:JUnit5EngineExecutionContext(125)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(125)",TP,"Change Parameter Type context : JUnit5EngineExecutionContext to context : JupiterEngineExecutionContext in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$context(140)",4dfb1c838ff287ef3e8b986c3a7920169de06ab8,0027ade00fd483e08714ece1021a7715bb1855da,1450776847,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$context:JUnit5EngineExecutionContext(103)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$context:JUnit5EngineExecutionContext(103)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext(158)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,rename,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$containerExtensionContext:ClassBasedContainerExtensionContext(136)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext:ClassExtensionContext(134)",TP,"Rename Variable containerExtensionContext : ClassBasedContainerExtensionContext to extensionContext : ClassExtensionContext in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext(158)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$containerExtensionContext:ClassBasedContainerExtensionContext(136)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext:ClassExtensionContext(134)",TP,"Change Variable Type containerExtensionContext : ClassBasedContainerExtensionContext to extensionContext : ClassExtensionContext in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext(158)",fdadf905479b4cd63f1987d08940eddfbf89d088,bf1e000a7f68076e2921ac4f020e5f8c24330e84,1498839402,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$containerExtensionContext:ContainerExtensionContext(136)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$containerExtensionContext:ClassBasedContainerExtensionContext(136)",TP,"Change Variable Type containerExtensionContext : ContainerExtensionContext to containerExtensionContext : ClassBasedContainerExtensionContext in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$extensionContext(158)",4dfb1c838ff287ef3e8b986c3a7920169de06ab8,0027ade00fd483e08714ece1021a7715bb1855da,1450776847,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$containerExtensionContext:ContainerExtensionContext(113)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$containerExtensionContext:ContainerExtensionContext(113)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$lifecycle(156)",7b2d29f7c26d3c9d7398aebae0aaa811899d738b,f750c85946939119d05966c65fc81ce68444b2b9,1502571196,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$lifecycle:Lifecycle(117)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$lifecycle:Lifecycle(117)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry(141)",9dfdeb44e98e0253b4c49f67017d4619fd6b2ca0,920f6ea401ff38d1d66b594ddddfedb98bc8b68c,1516470048,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry:ExtensionRegistry(122)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry:ExtensionRegistry(122)",FP,"Extract Variable registry : ExtensionRegistry in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry(141)",36b132b0fc63a723ec0926e58921379020326c2b,b2ba6b95138382f25ca757a5ca2a7295bee4c3b8,1462203042,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$newExtensionRegistry:ExtensionRegistry(106)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$registry:ExtensionRegistry(109)",FN,"Rename Variable newExtensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method public prepare(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry(141)",8e2c2311932b5997f569be004fe8ade74db27b96,c0a0e14d2c11bb77bfe25aee9594b04e793b04aa,1453381386,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$newExtensionRegistry:TestExtensionRegistry(104)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$newExtensionRegistry:ExtensionRegistry(104)",FN,"Change Variable Type newExtensionRegistry : TestExtensionRegistry to newExtensionRegistry : ExtensionRegistry in method public prepare(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$registry(141)",4dfb1c838ff287ef3e8b986c3a7920169de06ab8,0027ade00fd483e08714ece1021a7715bb1855da,1450776847,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$newExtensionRegistry:TestExtensionRegistry(104)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor#prepare(JUnit5EngineExecutionContext)$newExtensionRegistry:TestExtensionRegistry(104)",FN,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$throwableCollector(157)",943c53f20dace9e1fd6968e377ed4c9dc67f858d,17360a5a086050e41718aa11d7e7c19c02c79d72,1498925116,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(134)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.ClassTestDescriptor#prepare(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(134)",TP,"Extract Variable throwableCollector : ThrowableCollector in method public prepare(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",27a7928a6ced05237be4a1223e528aab8d96bfba,402c756a056e13f5f49634616d87b1333e3c211e,1467316432,type change,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,"junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(TestDiscoveryRequest)$discoveryRequest:TestDiscoveryRequest(76)","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest:LauncherDiscoveryRequest(76)",TP,"Change Parameter Type discoveryRequest : TestDiscoveryRequest to discoveryRequest : LauncherDiscoveryRequest in method public discover(discoveryRequest LauncherDiscoveryRequest) : TestPlan from class org.junit.platform.launcher.core.DefaultLauncher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",2e70f575f1e3803fc3d934de6932524efca4fe8a,57b07e0594875902399805d6e41514f03a4b2f31,1453195956,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.main.Launcher#discover(DiscoveryRequest)$discoveryRequest:DiscoveryRequest(92)","junit-launcher/src/main/java/org.junit.gen5.launcher.main.Launcher#discover(TestDiscoveryRequest)$discoveryRequest:TestDiscoveryRequest(89)",TP,"Change Parameter Type discoveryRequest : DiscoveryRequest to discoveryRequest : TestDiscoveryRequest in method public discover(discoveryRequest TestDiscoveryRequest) : TestPlan from class org.junit.gen5.launcher.main.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",82ff8d2c1bf2426f25b7ac2d9617fa25a2a312b5,9162134ee3dfc3e80a45d08e32fdbf8ed06e87be,1453090240,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discover(DiscoveryRequest)$specification:DiscoveryRequest(82)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discover(DiscoveryRequest)$discoveryRequest:DiscoveryRequest(82)",TP,"Rename Parameter specification : DiscoveryRequest to discoveryRequest : DiscoveryRequest in method public discover(discoveryRequest DiscoveryRequest) : TestPlan from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",d35b6c097deae4347abc54a431ed712e4b0818f1,ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f,1452867306,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discover(TestPlanSpecification)$specification:TestPlanSpecification(83)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discover(DiscoveryRequest)$specification:DiscoveryRequest(83)",TP,"Change Parameter Type specification : TestPlanSpecification to specification : DiscoveryRequest in method public discover(specification DiscoveryRequest) : TestPlan from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",db7c029008a0fab7fb6770078c1b54a175c35c6c,2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a,1446027542,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanConfiguration)$configuration:TestPlanConfiguration(17)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanSpecification)$specification:TestPlanSpecification(17)",TP,"Rename Parameter configuration : TestPlanConfiguration to specification : TestPlanSpecification in method public createTestPlanWithConfiguration(specification TestPlanSpecification) : TestPlan from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",db7c029008a0fab7fb6770078c1b54a175c35c6c,2e1ad2e7fc7fbc71b12027f9777bbbd2a7a8667a,1446027542,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanConfiguration)$configuration:TestPlanConfiguration(17)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanSpecification)$specification:TestPlanSpecification(17)",TP,"Change Parameter Type configuration : TestPlanConfiguration to specification : TestPlanSpecification in method public createTestPlanWithConfiguration(specification TestPlanSpecification) : TestPlan from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discover(LauncherDiscoveryRequest)$discoveryRequest(82)",4ed7da080632a120397988eb5adf898c2b7508bd,cbf97077bae0db71dc3a7cade28c3b00587a8699,1446024196,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanConfiguration)$configuration:TestPlanConfiguration(13)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#createTestPlanWithConfiguration(TestPlanConfiguration)$configuration:TestPlanConfiguration(13)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest(99)",27a7928a6ced05237be4a1223e528aab8d96bfba,402c756a056e13f5f49634616d87b1333e3c211e,1467316432,type change,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,"junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(TestDiscoveryRequest, String)$discoveryRequest:TestDiscoveryRequest(87)","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest:LauncherDiscoveryRequest(87)",TP,"Change Parameter Type discoveryRequest : TestDiscoveryRequest to discoveryRequest : LauncherDiscoveryRequest in method private discoverRoot(discoveryRequest LauncherDiscoveryRequest, phase String) : Root from class org.junit.platform.launcher.core.DefaultLauncher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest(99)",2e70f575f1e3803fc3d934de6932524efca4fe8a,57b07e0594875902399805d6e41514f03a4b2f31,1453195956,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/main/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.main.Launcher#discoverRoot(DiscoveryRequest, String)$discoveryRequest:DiscoveryRequest(108)","junit-launcher/src/main/java/org.junit.gen5.launcher.main.Launcher#discoverRoot(TestDiscoveryRequest, String)$discoveryRequest:TestDiscoveryRequest(105)",TP,"Change Parameter Type discoveryRequest : DiscoveryRequest to discoveryRequest : TestDiscoveryRequest in method private discoverRoot(discoveryRequest TestDiscoveryRequest, phase String) : Root from class org.junit.gen5.launcher.main.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest(99)",82ff8d2c1bf2426f25b7ac2d9617fa25a2a312b5,9162134ee3dfc3e80a45d08e32fdbf8ed06e87be,1453090240,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(DiscoveryRequest, String)$specification:DiscoveryRequest(98)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(DiscoveryRequest, String)$discoveryRequest:DiscoveryRequest(98)",TP,"Rename Parameter specification : DiscoveryRequest to discoveryRequest : DiscoveryRequest in method private discoverRootDescriptor(discoveryRequest DiscoveryRequest, phase String) : RootTestDescriptor from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest(99)",d35b6c097deae4347abc54a431ed712e4b0818f1,ad553b10b4b2b1a78c9a0c91a6d50ebb1421ff3f,1452867306,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification, String)$specification:TestPlanSpecification(99)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(DiscoveryRequest, String)$specification:DiscoveryRequest(99)",TP,"Change Parameter Type specification : TestPlanSpecification to specification : DiscoveryRequest in method private discoverRootDescriptor(specification DiscoveryRequest, phase String) : RootTestDescriptor from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$discoveryRequest(99)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$specification:TestPlanSpecification(53)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$specification:TestPlanSpecification(53)",TP,"Extract Method private discoverRootDescriptor(specification TestPlanSpecification) : RootTestDescriptor extracted from public discover(specification TestPlanSpecification) : TestPlan in class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$engineIsExcluded(104)",59d95c759888eccefa5f1bf21f52d68641ba769a,c1f6fc7c8a7dbdf120b7447c96c9b81751b8a96b,1465065689,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.main.DefaultLauncher#discoverRoot(TestDiscoveryRequest, String)$engineIsExcluded:boolean(89)","junit-launcher/src/main/java/org.junit.gen5.launcher.main.DefaultLauncher#discoverRoot(TestDiscoveryRequest, String)$engineIsExcluded:boolean(89)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$engineRoot(119)",1cea403ff64bb5afe8831874b8694dcf9b647afb,c49b423f2d1c723a3724597049810416a91f5cba,1492252020,introduced,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,"junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$engineRoot:Optional<TestDescriptor>(115)","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$engineRoot:Optional<TestDescriptor>(115)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$phase(99)",ff333a234170a4befd04909d03d7d8953ff5a8c1,d6b17576a2b7e2d1ba28dbef2430c042ad1b887a,1451856974,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification, String)$phase:String(102)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification, String)$phase:String(102)",TP,"Add Parameter phase : String in method private discoverRootDescriptor(specification TestPlanSpecification, phase String) : RootTestDescriptor from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$root(100)",763cf502451c5053cd72248aac3561cd1530b719,9da25e126d174ba6e6ae02596afa538a7cafe17b,1453129027,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(DiscoveryRequest, String)$root:RootTestDescriptor(99)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRoot(DiscoveryRequest, String)$root:Root(105)",TP,"Change Variable Type root : RootTestDescriptor to root : Root in method private discoverRoot(discoveryRequest DiscoveryRequest, phase String) : Root from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$root(100)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$root:RootTestDescriptor(54)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$root:RootTestDescriptor(54)",TP,"Extract Method private discoverRootDescriptor(specification TestPlanSpecification) : RootTestDescriptor extracted from public discover(specification TestPlanSpecification) : TestPlan in class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#discoverRoot(LauncherDiscoveryRequest, String)$testEngine(102)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$testEngine:TestEngine(55)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#discoverRootDescriptor(TestPlanSpecification)$testEngine:TestEngine(55)",TP,"Extract Method private discoverRootDescriptor(specification TestPlanSpecification) : RootTestDescriptor extracted from public discover(specification TestPlanSpecification) : TestPlan in class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$configurationParameters(142)",e7af10ca97c6cfd0f2f47425a2649673464fa842,6d3cbe6240ef9bcc2aec860f0400a6edd0bdd6bf,1463158029,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/main/DefaultLauncher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.main.DefaultLauncher#execute(Root, ConfigurationParameters)$configurationParameters:ConfigurationParameters(109)","junit-launcher/src/main/java/org.junit.gen5.launcher.main.DefaultLauncher#execute(Root, ConfigurationParameters)$configurationParameters:ConfigurationParameters(109)",TP,"Add Parameter configurationParameters : ConfigurationParameters in method private execute(root Root, configurationParameters ConfigurationParameters) : void from class org.junit.gen5.launcher.main.DefaultLauncher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$engineExecutionListener(148)",12bbe5afc72f457e5bba4bbcf68c49d6e4b77a4e,9f7d082872c4b4109729a3a480f1dedad3083bad,1450454294,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$engineExecutionListener:ExecutionListenerAdapter(69)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$engineExecutionListener:ExecutionListenerAdapter(69)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listenerRegistry(144)",b0866994b979d5986a4bda07538b3d262327c371,e99a78098dae04b1fd2c5cc28ff2a09ab77567e4,1489941232,introduced,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,"junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listenerRegistry:TestExecutionListenerRegistry(129)","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listenerRegistry:TestExecutionListenerRegistry(129)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listeners(143)",b0866994b979d5986a4bda07538b3d262327c371,e99a78098dae04b1fd2c5cc28ff2a09ab77567e4,1489941232,introduced,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/DefaultLauncher.java,"junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listeners:TestExecutionListener...(128)","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$listeners:TestExecutionListener...(128)",TP,"Add Parameter listeners : TestExecutionListener... in method private execute(root Root, configurationParameters ConfigurationParameters, listeners TestExecutionListener...) : void from class org.junit.platform.launcher.core.DefaultLauncher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",763cf502451c5053cd72248aac3561cd1530b719,9da25e126d174ba6e6ae02596afa538a7cafe17b,1453129027,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$root:RootTestDescriptor(119)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(Root)$root:Root(125)",TP,"Change Parameter Type root : RootTestDescriptor to root : Root in method private execute(root Root) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(65)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$root:RootTestDescriptor(69)",TP,"Rename Parameter testPlan : TestPlan to root : RootTestDescriptor in method private execute(root RootTestDescriptor) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(65)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$root:RootTestDescriptor(69)",TP,"Change Parameter Type testPlan : TestPlan to root : RootTestDescriptor in method private execute(root RootTestDescriptor) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",4ed7da080632a120397988eb5adf898c2b7508bd,cbf97077bae0db71dc3a7cade28c3b00587a8699,1446024196,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestExecutionPlan)$testPlan:TestExecutionPlan(40)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(21)",TP,"Change Parameter Type testPlan : TestExecutionPlan to testPlan : TestPlan in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",75a91267a92e9fd4d171a3f18f2135e675687961,226ecd8efc45e4540bba43f6c604e891b5a94689,1445962195,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(39)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestExecutionPlan)$testPlan:TestExecutionPlan(39)",TP,"Change Parameter Type testPlan : TestPlan to testPlan : TestExecutionPlan in method public execute(testPlan TestExecutionPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$root(142)",b7629e60839b9de823d24ab9631e196b9e2625bd,75a91267a92e9fd4d171a3f18f2135e675687961,1445956641,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(39)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testPlan:TestPlan(39)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",12bbe5afc72f457e5bba4bbcf68c49d6e4b77a4e,9f7d082872c4b4109729a3a480f1dedad3083bad,1450454294,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testDescriptorOptional:Optional<TestDescriptor>(76)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testDescriptor:TestDescriptor(72)",TP,"Change Variable Type testDescriptorOptional : Optional<TestDescriptor> to testDescriptor : TestDescriptor in method private execute(root RootTestDescriptor) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",12bbe5afc72f457e5bba4bbcf68c49d6e4b77a4e,9f7d082872c4b4109729a3a480f1dedad3083bad,1450454294,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testDescriptorOptional:Optional<TestDescriptor>(76)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testDescriptor:TestDescriptor(72)",TP,"Rename Variable testDescriptorOptional : Optional<TestDescriptor> to testDescriptor : TestDescriptor in method private execute(root RootTestDescriptor) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",b371ee9a845f6571a93dfabb1e1356db6729221e,40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8,1449147508,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptorOptional:Optional<EngineDescriptor>(63)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptorOptional:Optional<TestDescriptor>(59)",TP,"Rename Variable engineDescriptorOptional : Optional<EngineDescriptor> to testDescriptorOptional : Optional<TestDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",b371ee9a845f6571a93dfabb1e1356db6729221e,40ea4f270254c3faf95fea9e2a48ecb7a6c47bb8,1449147508,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptorOptional:Optional<EngineDescriptor>(63)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptorOptional:Optional<TestDescriptor>(59)",TP,"Change Variable Type engineDescriptorOptional : Optional<EngineDescriptor> to testDescriptorOptional : Optional<TestDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",c924f9c2af7d026ba30e2d424f68e98d1e77710b,891efa3653cb899ca27afcd1abc385fc3fa663fa,1447413840,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptor:Optional<EngineDescriptor>(60)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptorOptional:Optional<EngineDescriptor>(59)",TP,"Rename Variable engineDescriptor : Optional<EngineDescriptor> to engineDescriptorOptional : Optional<EngineDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",80332bc3278da8923c2601250ca33ba016bcdb3a,4a34c1bc27a7ad936639a83ad7e34f89add92c4c,1447067483,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptors:List<TestDescriptor>(86)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptor:Optional<EngineDescriptor>(88)",TP,"Rename Variable testDescriptors : List<TestDescriptor> to engineDescriptor : Optional<EngineDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",80332bc3278da8923c2601250ca33ba016bcdb3a,4a34c1bc27a7ad936639a83ad7e34f89add92c4c,1447067483,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptors:List<TestDescriptor>(86)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engineDescriptor:Optional<EngineDescriptor>(88)",TP,"Change Variable Type testDescriptors : List<TestDescriptor> to engineDescriptor : Optional<EngineDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testDescriptor(151)",2faf053a85fd24cb6f65e7b1258d7c507587866c,5b99f734253c15189a88cd5704ec30ded2f24694,1446199734,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptors:List<TestDescriptor>(56)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testDescriptors:List<TestDescriptor>(56)",TP,"Extract Variable testDescriptors : List<TestDescriptor> in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testEngine(150)",4ed7da080632a120397988eb5adf898c2b7508bd,cbf97077bae0db71dc3a7cade28c3b00587a8699,1446024196,rename,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestExecutionPlan)$engine:Engine(41)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testEngine:TestEngine(22)",TP,"Rename Variable engine : Engine to testEngine : TestEngine in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testEngine(150)",4ed7da080632a120397988eb5adf898c2b7508bd,cbf97077bae0db71dc3a7cade28c3b00587a8699,1446024196,type change,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestExecutionPlan)$engine:Engine(41)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$testEngine:TestEngine(22)",TP,"Change Variable Type engine : Engine to testEngine : TestEngine in method public execute(testPlan TestPlan) : void from class org.junit.gen5.launcher.Launcher"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testEngine(150)",b7629e60839b9de823d24ab9631e196b9e2625bd,75a91267a92e9fd4d171a3f18f2135e675687961,1445956641,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engine:Engine(40)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(TestPlan)$engine:Engine(40)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-platform-launcher/src/main/java/org.junit.platform.launcher.core.DefaultLauncher#execute(Root, ConfigurationParameters, TestExecutionListener[])$testPlan(146)",b506af765c5a78d9bb8ea63b834d6b2b6c41ef54,830b6d5976b6db01dad3866cfb3d54c6216b1252,1449569937,introduced,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,junit-launcher/src/main/java/org/junit/gen5/launcher/Launcher.java,"junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testPlan:TestPlan(73)","junit-launcher/src/main/java/org.junit.gen5.launcher.Launcher#execute(RootTestDescriptor)$testPlan:TestPlan(73)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(81)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(79)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(79)",FP,"Merge Parameter [throwableCollector : ThrowableCollector, testExtensionContext : TestExtensionContext] to context : JupiterEngineExecutionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(81)",714da557683393fe14ddfab686f892fbc4ee559e,babcc661bd906b38a272f287ac8779669268fc58,1466428123,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(80)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JupiterEngineExecutionContext(80)",FN,"Change Parameter Type context : JUnit5EngineExecutionContext to context : JupiterEngineExecutionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(81)",03255925caa091dd6a36d1c1ae05accc2a4ef285,ac7bb522519cd8a600324aa909a5c17a110cb97f,1464031301,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/DynamicMethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/DynamicMethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.DynamicMethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(51)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.DynamicMethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(51)",FN,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$defaultTestSource(88)",c96b69bede14a1cc368ad6104a9c636e05ff2c22,5cb71ec0e66a7e411c7d238d4b4e53b1c2c27316,1528960367,rename,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$source:TestSource(84)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$defaultTestSource:TestSource(84)",TP,"Rename Variable source : TestSource to defaultTestSource : TestSource in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$defaultTestSource(88)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$source:TestSource(72)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$source:TestSource(72)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor(95)",7eea254d8188696355c45ed8ad501422a90fecf5,fbbd70b7cbbe299b01794446dfa251b3b9e727ad,1515872866,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor:JupiterTestDescriptor(79)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor:Optional<JupiterTestDescriptor>(90)",TP,"Change Variable Type descriptor : JupiterTestDescriptor to descriptor : Optional<JupiterTestDescriptor> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor(95)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor:JupiterTestDescriptor(78)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$descriptor:JupiterTestDescriptor(78)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNode(94)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNode:DynamicNode(77)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNode:DynamicNode(77)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(81)",35aba4af865ff265717be7e0e7596eb8fe1e6b41,4b41518fa052b28a953e99b087d505603a22c175,1487967646,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(77)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(77)",TP,"Add Parameter dynamicTestExecutor : Consumer<TestDescriptor> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor Consumer<TestDescriptor>) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(81)",0448e81224914a2d5a7c5282618cc194107022e3,fc3c61b41f014a2500f176e23fe8ad2989d20565,1487967646,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(77)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor:DynamicTestExecutor(75)",TP,"Change Parameter Type dynamicTestExecutor : Consumer<TestDescriptor> to dynamicTestExecutor : DynamicTestExecutor in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$ex(100)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$ex:ClassCastException(82)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$ex:ClassCastException(82)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(82)",0836f8f28601d1d27d07ad302c6aa1ef9f2ab023,a97e4d3088f97b58031b139c006a98c8e0f49422,1499166000,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:AbstractExtensionContext<?>(66)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(66)",TP,"Change Variable Type extensionContext : AbstractExtensionContext<?> to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(82)",1d30b7670975dfe50701811130b90c4d58a55769,0836f8f28601d1d27d07ad302c6aa1ef9f2ab023,1499164560,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(66)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:AbstractExtensionContext<?>(66)",TP,"Change Variable Type extensionContext : ExtensionContext to extensionContext : AbstractExtensionContext<?> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(82)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,rename,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testExtensionContext:TestExtensionContext(66)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(66)",TP,"Rename Variable testExtensionContext : TestExtensionContext to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(82)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testExtensionContext:TestExtensionContext(66)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(66)",TP,"Change Variable Type testExtensionContext : TestExtensionContext to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(82)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(80)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(80)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$index(91)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$index:int(74)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$index:int(74)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$instance(85)",3fff7ddc9fc12d252a2ffe059922792fa681adff,9eacc9c2d51557bffa003ca24fa125b8cbe69bbb,1464266577,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/TestFactoryTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/TestFactoryTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$instance:Object(71)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$instance:Object(71)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$iterator(92)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$iterator:Iterator<DynamicNode>(75)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$iterator:Iterator<DynamicNode>(75)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testFactoryMethodResult(86)",e8eeefa4d56ccdfd7b4cce4bb26778940f7a5106,77f7820ffc9ec56f3e6ec88c9bb1f5b77445a25d,1464035783,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/DynamicMethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/TestFactoryTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.DynamicMethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$dynamicMethodResult:Object(67)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$testFactoryMethodResult:Object(67)",TP,"Rename Variable dynamicMethodResult : Object to testFactoryMethodResult : Object in method protected invokeTestMethod(context JUnit5EngineExecutionContext, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testFactoryMethodResult(86)",11850fce68fddb5fdcf6ae67a0474fb827710918,abcdd7d3b4e072923ac92a2ed99dbc6ce0954319,1464034599,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/DynamicMethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/DynamicMethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.DynamicMethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$dynamicMethodResult:Object(67)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.DynamicMethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$dynamicMethodResult:Object(67)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$context(103)",714da557683393fe14ddfab686f892fbc4ee559e,babcc661bd906b38a272f287ac8779669268fc58,1466428123,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$context:JUnit5EngineExecutionContext(148)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(148)",TP,"Change Parameter Type context : JUnit5EngineExecutionContext to context : JupiterEngineExecutionContext in method public execute(context JupiterEngineExecutionContext) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$context(103)",0e14ad4525a5ade99dacdd76d0ab27223f57ebd4,3f9c11b9326b7d3051cb2a50568cd91113a0c0da,1449754787,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5Context)$context:JUnit5Context(85)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$context:JUnit5EngineExecutionContext(85)",TP,"Change Parameter Type context : JUnit5Context to context : JUnit5EngineExecutionContext in method public execute(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$context(103)",28ffd5ee9d1e996133445cac2256407f28380e91,57b31220d25f59bb4aa4903dfee4b8ec2be4525e,1449582937,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/JUnit5MethodDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/JUnit5MethodDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.JUnit5MethodDescriptor#execute(Context)$context:Context(45)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.JUnit5MethodDescriptor#execute(JUnit5Context)$context:JUnit5Context(53)",TP,"Change Parameter Type context : Context to context : JUnit5Context in method public execute(context JUnit5Context) : JUnit5Context from class org.junit.gen5.engine.junit5.JUnit5MethodDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$context(103)",5eb46423110cacebed9ba92f80d87b7d42730934,28ffd5ee9d1e996133445cac2256407f28380e91,1449581546,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/JUnit5MethodDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/JUnit5MethodDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.JUnit5MethodDescriptor#execute(Context)$context:Context(45)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.JUnit5MethodDescriptor#execute(Context)$context:Context(45)",TP,"added with method"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(104)",35aba4af865ff265717be7e0e7596eb8fe1e6b41,4b41518fa052b28a953e99b087d505603a22c175,1487967646,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(148)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(148)",TP,"Add Parameter dynamicTestExecutor : Consumer<TestDescriptor> in method public execute(context JupiterEngineExecutionContext, dynamicTestExecutor Consumer<TestDescriptor>) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(104)",0448e81224914a2d5a7c5282618cc194107022e3,fc3c61b41f014a2500f176e23fe8ad2989d20565,1487967646,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(147)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor:DynamicTestExecutor(146)",TP,"Change Parameter Type dynamicTestExecutor : Consumer<TestDescriptor> to dynamicTestExecutor : DynamicTestExecutor in method public execute(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : JupiterEngineExecutionContext from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(105)",355d64b574c534f35b4faeae1339b458a0787579,a1eb11673e2b7e69bc0c4c2f5c5b81cf572dfeab,1451756227,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwablesCollector:List<Throwable>(127)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwableCollector:ThrowableCollector(121)",TP,"Change Variable Type throwablesCollector : List<Throwable> to throwableCollector : ThrowableCollector in method public execute(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(105)",355d64b574c534f35b4faeae1339b458a0787579,a1eb11673e2b7e69bc0c4c2f5c5b81cf572dfeab,1451756227,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwablesCollector:List<Throwable>(127)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwableCollector:ThrowableCollector(121)",TP,"Rename Variable throwablesCollector : List<Throwable> to throwableCollector : ThrowableCollector in method public execute(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(105)",30aa4cfa124dd4d987dcc3cb3aa482ed60108cee,b8f87c20c3c0f77bf1051123c9f43cea8eaa8ce8,1450154729,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwables:List<Throwable>(99)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwablesCollector:List<Throwable>(106)",TP,"Rename Variable throwables : List<Throwable> to throwablesCollector : List<Throwable> in method public execute(context JUnit5EngineExecutionContext) : JUnit5EngineExecutionContext from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#execute(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(105)",5a243f89b9e4949587e18ad8f42f13d08c6f5c77,30aa4cfa124dd4d987dcc3cb3aa482ed60108cee,1450133807,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwables:List<Throwable>(99)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#execute(JUnit5EngineExecutionContext)$throwables:List<Throwable>(99)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(210)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$context:JupiterEngineExecutionContext(210)",FP,"Merge Parameter [testExtensionContext : TestExtensionContext, throwableCollector : ThrowableCollector] to context : JupiterEngineExecutionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",714da557683393fe14ddfab686f892fbc4ee559e,babcc661bd906b38a272f287ac8779669268fc58,1466428123,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(183)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JupiterEngineExecutionContext(183)",FN,"Change Parameter Type context : JUnit5EngineExecutionContext to context : JupiterEngineExecutionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",03255925caa091dd6a36d1c1ae05accc2a4ef285,ac7bb522519cd8a600324aa909a5c17a110cb97f,1464031301,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(ExtensionRegistry, TestExtensionContext, ThrowableCollector)$ExtensionRegistry:ExtensionRegistry(178)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(178)",FN,"Change Parameter Type ExtensionRegistry : ExtensionRegistry to context : JUnit5EngineExecutionContext in method protected invokeTestMethod(context JUnit5EngineExecutionContext, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",03255925caa091dd6a36d1c1ae05accc2a4ef285,ac7bb522519cd8a600324aa909a5c17a110cb97f,1464031301,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(ExtensionRegistry, TestExtensionContext, ThrowableCollector)$ExtensionRegistry:ExtensionRegistry(178)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$context:JUnit5EngineExecutionContext(178)",FN,"Rename Parameter ExtensionRegistry : ExtensionRegistry to context : JUnit5EngineExecutionContext in method protected invokeTestMethod(context JUnit5EngineExecutionContext, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",76b0d01a39f426022fa986a2f0e4b63305242bcd,f250792f7f2a6a40cdec82f3090ce88d99aad152,1453385814,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, ExtensionRegistry, ThrowableCollector)$extensionRegistry:ExtensionRegistry(169)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(ExtensionRegistry, TestExtensionContext, ThrowableCollector)$ExtensionRegistry:ExtensionRegistry(173)",FN,"Rename Parameter extensionRegistry : ExtensionRegistry to ExtensionRegistry : ExtensionRegistry in method private invokeTestMethod(ExtensionRegistry ExtensionRegistry, testExtensionContext TestExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",8e2c2311932b5997f569be004fe8ade74db27b96,c0a0e14d2c11bb77bfe25aee9594b04e793b04aa,1453381386,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, ThrowableCollector)$testExtensionRegistry:TestExtensionRegistry(170)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, ExtensionRegistry, ThrowableCollector)$extensionRegistry:ExtensionRegistry(169)",FN,"Rename Parameter testExtensionRegistry : TestExtensionRegistry to extensionRegistry : ExtensionRegistry in method private invokeTestMethod(testExtensionContext TestExtensionContext, extensionRegistry ExtensionRegistry, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",8e2c2311932b5997f569be004fe8ade74db27b96,c0a0e14d2c11bb77bfe25aee9594b04e793b04aa,1453381386,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, ThrowableCollector)$testExtensionRegistry:TestExtensionRegistry(170)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, ExtensionRegistry, ThrowableCollector)$extensionRegistry:ExtensionRegistry(169)",FN,"Change Parameter Type testExtensionRegistry : TestExtensionRegistry to extensionRegistry : ExtensionRegistry in method private invokeTestMethod(testExtensionContext TestExtensionContext, extensionRegistry ExtensionRegistry, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$context(163)",fc5ff8d87c124e43601f64da76668e516758a74a,11ece8b11085a01a95a10e7bf26e4eb51034ac00,1449697907,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry)$testExtensionRegistry:TestExtensionRegistry(102)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry)$testExtensionRegistry:TestExtensionRegistry(102)",FN,"Add Parameter testExtensionRegistry : TestExtensionRegistry in method private invokeTestMethod(testExtensionContext TestExtensionContext, testExtensionRegistry TestExtensionRegistry) : Optional<Throwable> from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(163)",35aba4af865ff265717be7e0e7596eb8fe1e6b41,4b41518fa052b28a953e99b087d505603a22c175,1487967646,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(208)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(208)",TP,"Add Parameter dynamicTestExecutor : Consumer<TestDescriptor> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor Consumer<TestDescriptor>) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor(163)",0448e81224914a2d5a7c5282618cc194107022e3,fc3c61b41f014a2500f176e23fe8ad2989d20565,1487967646,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, Consumer)$dynamicTestExecutor:Consumer<TestDescriptor>(207)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestExecutor:DynamicTestExecutor(205)",TP,"Change Parameter Type dynamicTestExecutor : Consumer<TestDescriptor> to dynamicTestExecutor : DynamicTestExecutor in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",0836f8f28601d1d27d07ad302c6aa1ef9f2ab023,a97e4d3088f97b58031b139c006a98c8e0f49422,1499166000,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:AbstractExtensionContext<?>(167)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(168)",TP,"Change Variable Type extensionContext : AbstractExtensionContext<?> to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",1d30b7670975dfe50701811130b90c4d58a55769,0836f8f28601d1d27d07ad302c6aa1ef9f2ab023,1499164560,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(168)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:AbstractExtensionContext<?>(167)",TP,"Change Variable Type extensionContext : ExtensionContext to extensionContext : AbstractExtensionContext<?> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testExtensionContext:TestExtensionContext(166)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(166)",TP,"Change Variable Type testExtensionContext : TestExtensionContext to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",1b1cffa7bdbf2ce1b747788e3050aa2921538f89,83b3eb665aa35a87cfd8484e0d06cc3b3d0478c7,1498909530,rename,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testExtensionContext:TestExtensionContext(166)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext:ExtensionContext(166)",TP,"Rename Variable testExtensionContext : TestExtensionContext to extensionContext : ExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",ac3454059d90e912d2e86cd19f56f089b7ea5fbb,da4a05ba9572191b3600a79ec616ea47fe8a3fd3,1466962828,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:MethodBasedTestExtensionContext(213)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(213)",TP,"Change Variable Type testExtensionContext : MethodBasedTestExtensionContext to testExtensionContext : TestExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,2397538bc17fe9c105c8a2ef6955c13ba45e4628,1466952811,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(211)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:MethodBasedTestExtensionContext(214)",TP,"Change Variable Type testExtensionContext : TestExtensionContext to testExtensionContext : MethodBasedTestExtensionContext in method protected invokeTestMethod(context JupiterEngineExecutionContext) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(211)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$testExtensionContext:TestExtensionContext(211)",FP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$extensionContext(164)",efb867427dd0722262fea5c869ac37cd64ea0070,fc5ff8d87c124e43601f64da76668e516758a74a,1449697033,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5Context, TestExtensionContext)$testExtensionContext:TestExtensionContext(98)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5Context, TestExtensionContext)$testExtensionContext:TestExtensionContext(98)",FN,"Extract Method private invokeTestMethod(myContext JUnit5Context, testExtensionContext TestExtensionContext) : Optional<Throwable> extracted from public execute(context JUnit5Context) : JUnit5Context in class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$instance(170)",3fff7ddc9fc12d252a2ffe059922792fa681adff,9eacc9c2d51557bffa003ca24fa125b8cbe69bbb,1464266577,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$instance:Object(181)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(JUnit5EngineExecutionContext, TestExtensionContext, ThrowableCollector)$instance:Object(181)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testMethod(169)",f42d9745a7e128e271cfc41ffd4f60144eb9b340,9a5ddb30bb206026eb7b209e98d809c1bedd887e,1493893514,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testMethod:Method(173)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$testMethod:Method(173)",TP,"Extract Variable testMethod : Method in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$throwable(173)",76b0d01a39f426022fa986a2f0e4b63305242bcd,f250792f7f2a6a40cdec82f3090ce88d99aad152,1453385814,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(ExtensionRegistry, TestExtensionContext, ThrowableCollector)$throwable:Throwable(182)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(ExtensionRegistry, TestExtensionContext, ThrowableCollector)$throwable:Throwable(182)",TP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(165)",62c433c14ce9d70fa5b82ef385a6e15c22cc0003,3e3b402131a99f01480c57dd82c2e81ad6d9a4ea,1466884969,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/MethodTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(212)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.MethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext)$throwableCollector:ThrowableCollector(212)",FP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(165)",355d64b574c534f35b4faeae1339b458a0787579,a1eb11673e2b7e69bc0c4c2f5c5b81cf572dfeab,1451756227,type change,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, List)$throwablesCollector:List<Throwable>(159)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, ThrowableCollector)$throwableCollector:ThrowableCollector(158)",FN,"Change Parameter Type throwablesCollector : List<Throwable> to throwableCollector : ThrowableCollector in method private invokeTestMethod(testExtensionContext TestExtensionContext, testExtensionRegistry TestExtensionRegistry, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(165)",355d64b574c534f35b4faeae1339b458a0787579,a1eb11673e2b7e69bc0c4c2f5c5b81cf572dfeab,1451756227,rename,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, List)$throwablesCollector:List<Throwable>(159)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, ThrowableCollector)$throwableCollector:ThrowableCollector(158)",FN,"Rename Parameter throwablesCollector : List<Throwable> to throwableCollector : ThrowableCollector in method private invokeTestMethod(testExtensionContext TestExtensionContext, testExtensionRegistry TestExtensionRegistry, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$throwableCollector(165)",30aa4cfa124dd4d987dcc3cb3aa482ed60108cee,b8f87c20c3c0f77bf1051123c9f43cea8eaa8ce8,1450154729,introduced,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/MethodTestDescriptor.java,"junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, List)$throwablesCollector:List<Throwable>(151)","junit5-engine/src/main/java/org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor#invokeTestMethod(TestExtensionContext, TestExtensionRegistry, List)$throwablesCollector:List<Throwable>(151)",FN,"Add Parameter throwablesCollector : List<Throwable> in method private invokeTestMethod(testExtensionContext TestExtensionContext, testExtensionRegistry TestExtensionRegistry, throwablesCollector List<Throwable>) : void from class org.junit.gen5.engine.junit5.descriptor.MethodTestDescriptor"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$address(122)",73291e89c43de449949450c216a5220d9b903da6,78c6624b11d5f33504dae8211b4592383468343e,1356327588,type change,src/main/java/com/squareup/okhttp/internal/net/http/HttpConnectionPool.java,src/main/java/com/squareup/okhttp/ConnectionPool.java,"src/main/java/com.squareup.okhttp.internal.net.http.HttpConnectionPool#get(HttpConnection.Address)$address:HttpConnection.Address(61)","src/main/java/com.squareup.okhttp.ConnectionPool#get(Address)$address:Address(77)",TP,"Change Parameter Type address : HttpConnection.Address to address : Address in method public get(address Address) : Connection from class com.squareup.okhttp.ConnectionPool"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$address(122)",063964211c05103bd10fddeda9fafe93a856506b,ea63463c2ff8a67f63e541036f0d5998b5bb1f3e,1343052148,introduced,src/main/java/libcore/net/http/HttpConnectionPool.java,src/main/java/libcore/net/http/HttpConnectionPool.java,"src/main/java/libcore.net.http.HttpConnectionPool#get(HttpConnection.Address, int)$address:HttpConnection.Address(62)","src/main/java/libcore.net.http.HttpConnectionPool#get(HttpConnection.Address, int)$address:HttpConnection.Address(62)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$connection(124)",e0d34ebdd7aba18149d195804075a87b97f3c02d,c358656c8799d30fd422448153e99a5dd37e298a,1448721366,introduced,okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java,okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java,"okhttp/src/main/java/com.squareup.okhttp.ConnectionPool#get(Address)$connection:RealConnection(128)","okhttp/src/main/java/com.squareup.okhttp.ConnectionPool#get(Address)$connection:RealConnection(128)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$route(122)",e2d2ad80fffd1774561b4825203ab44209cd60bd,81c7461c98f2228c3bb1a0c80fb803b5ea2e47f0,1488762418,introduced,okhttp/src/main/java/okhttp3/ConnectionPool.java,okhttp/src/main/java/okhttp3/ConnectionPool.java,"okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$route:Route(121)","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$route:Route(121)",TP,"Add Parameter route : Route in method package get(address Address, streamAllocation StreamAllocation, route Route) : RealConnection from class okhttp3.ConnectionPool"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.ConnectionPool#get(Address, StreamAllocation, Route)$streamAllocation(122)",308df8295ccf872ceb273874edb3831218348434,4ae314a1f21d07ee5dbad024bc098182219e9e07,1449630306,introduced,okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java,okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java,"okhttp/src/main/java/com.squareup.okhttp.ConnectionPool#get(Address, StreamAllocation)$streamAllocation:StreamAllocation(171)","okhttp/src/main/java/com.squareup.okhttp.ConnectionPool#get(Address, StreamAllocation)$streamAllocation:StreamAllocation(171)",TP,"Add Parameter streamAllocation : StreamAllocation in method public get(address Address, streamAllocation StreamAllocation) : Connection from class com.squareup.okhttp.ConnectionPool"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$hasRequestBody(111)",07309c1c7d9e296014268ebd155ebf7ef8679f6c,578d8debd65202f574b544f876b45e6110afdb69,1479734851,rename,okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java,okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java,"okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$permitsRequestBody:boolean(104)","okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$hasRequestBody:boolean(103)",TP,"Rename Variable permitsRequestBody : boolean to hasRequestBody : boolean in method public writeRequestHeaders(request Request) : void from class okhttp3.internal.http2.Http2Codec"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$hasRequestBody(111)",e0d34ebdd7aba18149d195804075a87b97f3c02d,c358656c8799d30fd422448153e99a5dd37e298a,1448721366,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,"okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$permitsRequestBody:boolean(130)","okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$permitsRequestBody:boolean(130)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$request(108)",e0d34ebdd7aba18149d195804075a87b97f3c02d,c358656c8799d30fd422448153e99a5dd37e298a,1448721366,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,"okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$request:Request(126)","okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$request:Request(126)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Codec#writeRequestHeaders(Request)$requestHeaders(112)",e0d34ebdd7aba18149d195804075a87b97f3c02d,c358656c8799d30fd422448153e99a5dd37e298a,1448721366,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java,"okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$requestHeaders:List<Header>(131)","okhttp/src/main/java/com.squareup.okhttp.internal.http.Http2xStream#writeRequestHeaders(Request)$requestHeaders:List<Header>(131)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$associatedStreamId(644)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$associatedStreamId:int(460)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$associatedStreamId:int(460)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$headerBlock(645)",0c5b5454bc8e9c24160a5df1f5b83a0532323ee1,f214cf9670339b850f97da4a2d4ad64758fd0e4d,1390321642,rename,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<Header>(485)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$headerBlock:List<Header>(485)",TP,"Rename Parameter nameValueBlock : List<Header> to headerBlock : List<Header> in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, priority int, headerBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.spdy.SpdyConnection.Reader"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$headerBlock(645)",01ac1019bb48b77ea33e998e052f916f8dd271de,b95a0ccbcae50f92acc923d62fc6c9cecc6bbb63,1390156534,type change,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<ByteString>(483)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<Header>(482)",TP,"Change Parameter Type nameValueBlock : List<ByteString> to nameValueBlock : List<Header> in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, priority int, nameValueBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.spdy.SpdyConnection.Reader"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$headerBlock(645)",a9157db5359e31cac13ab35c1e5e39584c3d3e17,5c787a0b9d5c83c764880da4b1503a65ee0ff267,1389063071,type change,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<String>(475)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<ByteString>(476)",TP,"Change Parameter Type nameValueBlock : List<String> to nameValueBlock : List<ByteString> in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, priority int, nameValueBlock List<ByteString>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.spdy.SpdyConnection.Reader"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$headerBlock(645)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<String>(460)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$nameValueBlock:List<String>(460)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$inFinished(644)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$inFinished:boolean(459)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$inFinished:boolean(459)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$newStream(665)",33660bf58babd09521d19ef0ed1b09c15a5e27bb,3d43a8dba89ccd7333c3ebcf74928e441790d943,1468102159,type change,okhttp/src/main/java/okhttp3/internal/framed/FramedConnection.java,okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java,"okhttp/src/main/java/okhttp3.internal.framed.FramedConnection.Reader#headers(boolean, int, int, List)$newStream:FramedStream(618)","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$newStream:Http2Stream(618)",TP,"Change Variable Type newStream : FramedStream to newStream : Http2Stream in method public headers(inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>) : void from class okhttp3.internal.http2.Http2Connection.ReaderRunnable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$newStream(665)",b262f2a03001cd990568b929b2739dd3c7adb75f,c753d2e41ba667f9b5a31451a16ecbaecdc65d80,1434580812,type change,okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java,"okhttp/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, List, HeadersMode)$newStream:SpdyStream(640)","okhttp/src/main/java/com.squareup.okhttp.internal.framed.FramedConnection.Reader#headers(boolean, boolean, int, int, List, HeadersMode)$newStream:FramedStream(641)",TP,"Change Variable Type newStream : SpdyStream to newStream : FramedStream in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$newStream(665)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$newStream:SpdyStream(483)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$newStream:SpdyStream(483)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$stream(650)",33660bf58babd09521d19ef0ed1b09c15a5e27bb,3d43a8dba89ccd7333c3ebcf74928e441790d943,1468102159,type change,okhttp/src/main/java/okhttp3/internal/framed/FramedConnection.java,okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java,"okhttp/src/main/java/okhttp3.internal.framed.FramedConnection.Reader#headers(boolean, int, int, List)$stream:FramedStream(603)","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$stream:Http2Stream(603)",TP,"Change Variable Type stream : FramedStream to stream : Http2Stream in method public headers(inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>) : void from class okhttp3.internal.http2.Http2Connection.ReaderRunnable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$stream(650)",b262f2a03001cd990568b929b2739dd3c7adb75f,c753d2e41ba667f9b5a31451a16ecbaecdc65d80,1434580812,type change,okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java,"okhttp/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, List, HeadersMode)$stream:SpdyStream(619)","okhttp/src/main/java/com.squareup.okhttp.internal.framed.FramedConnection.Reader#headers(boolean, boolean, int, int, List, HeadersMode)$stream:FramedStream(619)",TP,"Change Variable Type stream : SpdyStream to stream : FramedStream in method public headers(outFinished boolean, inFinished boolean, streamId int, associatedStreamId int, headerBlock List<Header>, headersMode HeadersMode) : void from class com.squareup.okhttp.internal.framed.FramedConnection.Reader"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$stream(650)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$stream:SpdyStream(462)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$stream:SpdyStream(462)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection.ReaderRunnable#headers(boolean, int, int, List)$streamId(644)",dd82416bc5b6c45d4aeecd6acdc0f178eb4ac841,a91124b6d4e2eb1bb3c71a7a8ddff7d40b7db55a,1378058240,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$streamId:int(459)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection.Reader#headers(boolean, boolean, int, int, int, List, HeadersMode)$streamId:int(459)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$associatedStreamId(234)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$associatedStreamId:int(227)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$associatedStreamId:int(227)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$flushHeaders(237)",3f7a3344a4c85aa3bbb879dabac5ee625ab987f3,1503e362f61ca8c55adebcce802a724ae375debe,1463926690,introduced,okhttp/src/main/java/okhttp3/internal/framed/FramedConnection.java,okhttp/src/main/java/okhttp3/internal/framed/FramedConnection.java,"okhttp/src/main/java/okhttp3.internal.framed.FramedConnection#newStream(int, List, boolean, boolean)$flushHeaders:boolean(252)","okhttp/src/main/java/okhttp3.internal.framed.FramedConnection#newStream(int, List, boolean, boolean)$flushHeaders:boolean(252)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$inFinished(236)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$inFinished:boolean(231)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$inFinished:boolean(231)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$out(234)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$out:boolean(227)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$out:boolean(227)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$outFinished(235)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$outFinished:boolean(230)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$outFinished:boolean(230)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$requestHeaders(234)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$requestHeaders:List<Header>(227)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$requestHeaders:List<Header>(227)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$stream(238)",33660bf58babd09521d19ef0ed1b09c15a5e27bb,3d43a8dba89ccd7333c3ebcf74928e441790d943,1468102159,type change,okhttp/src/main/java/okhttp3/internal/framed/FramedConnection.java,okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java,"okhttp/src/main/java/okhttp3.internal.framed.FramedConnection#newStream(int, List, boolean)$stream:FramedStream(213)","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$stream:Http2Stream(213)",TP,"Change Variable Type stream : FramedStream to stream : Http2Stream in method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean) : Http2Stream from class okhttp3.internal.http2.Http2Connection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$stream(238)",b262f2a03001cd990568b929b2739dd3c7adb75f,c753d2e41ba667f9b5a31451a16ecbaecdc65d80,1434580812,type change,okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java,"okhttp/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$stream:SpdyStream(252)","okhttp/src/main/java/com.squareup.okhttp.internal.framed.FramedConnection#newStream(int, List, boolean, boolean)$stream:FramedStream(252)",TP,"Change Variable Type stream : SpdyStream to stream : FramedStream in method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : FramedStream from class com.squareup.okhttp.internal.framed.FramedConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$stream(238)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$stream:SpdyStream(234)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$stream:SpdyStream(234)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(int, List, boolean)$streamId(239)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$streamId:int(235)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(int, List, boolean, boolean)$streamId:int(235)",TP,"Extract Method private newStream(associatedStreamId int, requestHeaders List<Header>, out boolean, in boolean) : SpdyStream extracted from public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream in class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(List, boolean)$out(229)",063964211c05103bd10fddeda9fafe93a856506b,ea63463c2ff8a67f63e541036f0d5998b5bb1f3e,1343052148,introduced,src/main/java/libcore/net/spdy/SpdyConnection.java,src/main/java/libcore/net/spdy/SpdyConnection.java,"src/main/java/libcore.net.spdy.SpdyConnection#newStream(List, boolean, boolean)$out:boolean(113)","src/main/java/libcore.net.spdy.SpdyConnection#newStream(List, boolean, boolean)$out:boolean(113)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(List, boolean)$requestHeaders(229)",01ac1019bb48b77ea33e998e052f916f8dd271de,b95a0ccbcae50f92acc923d62fc6c9cecc6bbb63,1390156534,type change,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<ByteString>(162)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<Header>(161)",TP,"Change Parameter Type requestHeaders : List<ByteString> to requestHeaders : List<Header> in method public newStream(requestHeaders List<Header>, out boolean, in boolean) : SpdyStream from class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(List, boolean)$requestHeaders(229)",a9157db5359e31cac13ab35c1e5e39584c3d3e17,5c787a0b9d5c83c764880da4b1503a65ee0ff267,1389063071,type change,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<String>(160)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<ByteString>(161)",TP,"Change Parameter Type requestHeaders : List<String> to requestHeaders : List<ByteString> in method public newStream(requestHeaders List<ByteString>, out boolean, in boolean) : SpdyStream from class com.squareup.okhttp.internal.spdy.SpdyConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#newStream(List, boolean)$requestHeaders(229)",063964211c05103bd10fddeda9fafe93a856506b,ea63463c2ff8a67f63e541036f0d5998b5bb1f3e,1343052148,introduced,src/main/java/libcore/net/spdy/SpdyConnection.java,src/main/java/libcore/net/spdy/SpdyConnection.java,"src/main/java/libcore.net.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<String>(113)","src/main/java/libcore.net.spdy.SpdyConnection#newStream(List, boolean, boolean)$requestHeaders:List<String>(113)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#pushStream(int, List, boolean)$associatedStreamId(218)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$associatedStreamId:int(208)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$associatedStreamId:int(208)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#pushStream(int, List, boolean)$out(218)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$out:boolean(208)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$out:boolean(208)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.http2.Http2Connection#pushStream(int, List, boolean)$requestHeaders(218)",0537eedd5d0223bfa08998f85a865a22b192c61d,fb46f100a4d66342a0b101624fd351a51b6f14a9,1393204561,introduced,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,okhttp-protocols/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java,"okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$requestHeaders:List<Header>(208)","okhttp-protocols/src/main/java/com.squareup.okhttp.internal.spdy.SpdyConnection#pushStream(int, List, boolean)$requestHeaders:List<Header>(208)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$auth(43)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$auth:PasswordAuthentication(68)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$auth:PasswordAuthentication(68)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$challenge(40)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$challenge:Challenge(64)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$challenge:Challenge(64)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$challenges(33)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$challenges:List<Challenge>(60)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$challenges:List<Challenge>(60)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$credential(57)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$credential:String(74)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$credential:String(74)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$i(39)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$i:int(63)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$i:int(63)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$proxy(37)",9ecff8f961c321098c2598097fb5289e968ef1ac,0bfd6048574d61c138fd417051ae2a1bcb44638f,1450450613,rename,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,"okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$proxy:Proxy(59)","okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticate(Route, Response)$proxy:Proxy(43)",TP,"Localize Parameter proxy : Proxy to proxy : Proxy in method public authenticate(route Route, response Response) : Request from class okhttp3.internal.http.AuthenticatorAdapter"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$proxy(37)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$proxy:Proxy(59)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$proxy:Proxy(59)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$proxyAddress(45)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$proxyAddress:InetSocketAddress(67)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$proxyAddress:InetSocketAddress(67)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$proxyAuthorization(36)",9ecff8f961c321098c2598097fb5289e968ef1ac,0bfd6048574d61c138fd417051ae2a1bcb44638f,1450450613,introduced,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,"okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticate(Route, Response)$proxyAuthorization:boolean(42)","okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticate(Route, Response)$proxyAuthorization:boolean(42)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$request(34)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$request:Request(61)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$request:Request(61)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$response(32)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$response:Response(59)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$response:Response(59)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$route(32)",9ecff8f961c321098c2598097fb5289e968ef1ac,0bfd6048574d61c138fd417051ae2a1bcb44638f,1450450613,introduced,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,okhttp/src/main/java/okhttp3/internal/http/AuthenticatorAdapter.java,"okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticate(Route, Response)$route:Route(38)","okhttp/src/main/java/okhttp3.internal.http.AuthenticatorAdapter#authenticate(Route, Response)$route:Route(38)",TP,"Add Parameter route : Route in method public authenticate(route Route, response Response) : Request from class okhttp3.internal.http.AuthenticatorAdapter"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$size(39)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$size:int(63)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$size:int(63)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$url(35)",a52c510810f896fcafa78033b29148b49c7db7ca,4c90a2e04a83646597a506a80b5a885d5c515bf0,1438563686,type change,okhttp/src/main/java/com/squareup/okhttp/internal/http/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/http/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.http.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$url:URL(64)","okhttp/src/main/java/com.squareup.okhttp.internal.http.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$url:HttpUrl(62)",TP,"Change Variable Type url : URL to url : HttpUrl in method public authenticateProxy(proxy Proxy, response Response) : Request from class com.squareup.okhttp.internal.http.AuthenticatorAdapter"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.JavaNetAuthenticator#authenticate(Route, Response)$url(35)",f5111c28356431c6c5d1e71dd1bbced9a8016cd8,e920196fbd71822fc284ab76204bf75f95d3265a,1398096023,introduced,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,okhttp/src/main/java/com/squareup/okhttp/internal/huc/AuthenticatorAdapter.java,"okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$url:URL(62)","okhttp/src/main/java/com.squareup.okhttp.internal.huc.AuthenticatorAdapter#authenticateProxy(Proxy, Response)$url:URL(62)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.OkHttpURLConnection#getResponse(boolean)$call(452)",e444deddd9683fc2fd586c889d9352c35089504d,084b06b48bae2b566bb1be3415b6c847d8ea3682,1466533800,introduced,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java,"okhttp-urlconnection/src/main/java/okhttp3.internal.huc.HttpURLConnectionImpl#getResponse()$call:Call(407)","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.HttpURLConnectionImpl#getResponse()$call:Call(407)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.OkHttpURLConnection#getResponse(boolean)$networkResponseOnError(443)",ccf88de917071387b34c84e80d0263c5b5b0b841,2b8ad31b084af93ad202a1b835e5be63ac58a269,1479783531,introduced,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java,"okhttp-urlconnection/src/main/java/okhttp3.internal.huc.OkHttpURLConnection#getResponse(boolean)$networkResponseOnError:boolean(408)","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.OkHttpURLConnection#getResponse(boolean)$networkResponseOnError:boolean(408)",TP,"Add Parameter networkResponseOnError : boolean in method private getResponse(networkResponseOnError boolean) : Response from class okhttp3.internal.huc.OkHttpURLConnection"
"https://github.com/square/okhttp.git","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.OkHttpURLConnection#getResponse(boolean)$requestBody(455)",e444deddd9683fc2fd586c889d9352c35089504d,084b06b48bae2b566bb1be3415b6c847d8ea3682,1466533800,introduced,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java,okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java,"okhttp-urlconnection/src/main/java/okhttp3.internal.huc.HttpURLConnectionImpl#getResponse()$requestBody:OutputStreamRequestBody(410)","okhttp-urlconnection/src/main/java/okhttp3.internal.huc.HttpURLConnectionImpl#getResponse()$requestBody:OutputStreamRequestBody(410)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.RealCall.AsyncCall#execute()$e(155)",1d33ae5968a34b74e2023628c60f5ca18b57f741,c8e37ce19bf439a6a36931069fd01921ec67ae0b,1372949457,introduced,okhttp/src/main/java/com/squareup/okhttp/Dispatcher.java,okhttp/src/main/java/com/squareup/okhttp/Dispatcher.java,"okhttp/src/main/java/com.squareup.okhttp.Dispatcher.Job#run()$e:IOException(76)","okhttp/src/main/java/com.squareup.okhttp.Dispatcher.Job#run()$e:IOException(76)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.RealCall.AsyncCall#execute()$response(147)",1d33ae5968a34b74e2023628c60f5ca18b57f741,c8e37ce19bf439a6a36931069fd01921ec67ae0b,1372949457,introduced,okhttp/src/main/java/com/squareup/okhttp/Dispatcher.java,okhttp/src/main/java/com/squareup/okhttp/Dispatcher.java,"okhttp/src/main/java/com.squareup.okhttp.Dispatcher.Job#run()$response:Response(74)","okhttp/src/main/java/com.squareup.okhttp.Dispatcher.Job#run()$response:Response(74)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.RealCall.AsyncCall#execute()$signalledCallback(145)",142868f8e69f42dd0cff4f97ed990ed0a14e9339,0b677ac70d37f9064d3a0c0914794f60f66d64be,1398399915,rename,okhttp/src/main/java/com/squareup/okhttp/Job.java,okhttp/src/main/java/com/squareup/okhttp/Job.java,"okhttp/src/main/java/com.squareup.okhttp.Job#execute()$signalledReceiver:boolean(63)","okhttp/src/main/java/com.squareup.okhttp.Job#execute()$signalledCallback:boolean(63)",TP,"Rename Variable signalledReceiver : boolean to signalledCallback : boolean in method protected execute() : void from class com.squareup.okhttp.Job"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.RealCall.AsyncCall#execute()$signalledCallback(145)",4c929a6e37e36edfb42780d74cc031e2d38ce789,112dcc40900d503ea7e416e0da0a8fd9b08a9c17,1398181180,introduced,okhttp/src/main/java/com/squareup/okhttp/Job.java,okhttp/src/main/java/com/squareup/okhttp/Job.java,"okhttp/src/main/java/com.squareup.okhttp.Job#execute()$signalledReceiver:boolean(63)","okhttp/src/main/java/com.squareup.okhttp.Job#execute()$signalledReceiver:boolean(63)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$call(131)",6eddff67672879a8468ddbb08e1b93aa3ce37c6c,5fb5ab50a77efc761489493d4a0b8b9de85feec7,1497964491,introduced,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,"okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$call:Call(127)","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$call:Call(127)",TP,"Add Parameter call : Call in method public connect(connectTimeout int, readTimeout int, writeTimeout int, connectionRetryEnabled boolean, call Call, eventListener EventListener) : void from class okhttp3.internal.connection.RealConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$connectTimeout(130)",21e9c8398867f983e8c3cf29c6382690c1e4785d,3355d0c99bb946a6441f08fe6fd1c9881a9ea96a,1352581553,introduced,src/main/java/libcore/net/http/HttpConnection.java,src/main/java/libcore/net/http/HttpConnection.java,"src/main/java/libcore.net.http.HttpConnection#connect(int, int, TunnelConfig)$connectTimeout:int(104)","src/main/java/libcore.net.http.HttpConnection#connect(int, int, TunnelConfig)$connectTimeout:int(104)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$connectionRetryEnabled(131)",0237d3c3f29b004f4313b2b9fd58830b29cc6311,60f5406dcc094d0431420139bd002e8bdd4ea5d5,1426694377,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionRetryEnabled:boolean(134)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionRetryEnabled:boolean(134)",TP,"Add Parameter connectionRetryEnabled : boolean in method package connect(connectTimeout int, readTimeout int, writeTimeout int, request Request, connectionSpecs List<ConnectionSpec>, connectionRetryEnabled boolean) : void from class com.squareup.okhttp.Connection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$connectionSpecSelector(137)",1e5f3a967977db513585ed8f350a65ab3175e9ce,b42e73f497eafe147667117202267ec756adff26,1438473253,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionSpecSelector:ConnectionSpecSelector(158)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionSpecSelector:ConnectionSpecSelector(158)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$connectionSpecs(136)",0237d3c3f29b004f4313b2b9fd58830b29cc6311,60f5406dcc094d0431420139bd002e8bdd4ea5d5,1426694377,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionSpecs:List<ConnectionSpec>(134)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$connectionSpecs:List<ConnectionSpec>(134)",TP,"Add Parameter connectionSpecs : List<ConnectionSpec> in method package connect(connectTimeout int, readTimeout int, writeTimeout int, request Request, connectionSpecs List<ConnectionSpec>, connectionRetryEnabled boolean) : void from class com.squareup.okhttp.Connection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$e(170)",1e5f3a967977db513585ed8f350a65ab3175e9ce,b42e73f497eafe147667117202267ec756adff26,1438473253,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$e:IOException(176)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$e:IOException(176)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$eventListener(132)",6eddff67672879a8468ddbb08e1b93aa3ce37c6c,5fb5ab50a77efc761489493d4a0b8b9de85feec7,1497964491,introduced,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,"okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$eventListener:EventListener(127)","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$eventListener:EventListener(127)",TP,"Add Parameter eventListener : EventListener in method public connect(connectTimeout int, readTimeout int, writeTimeout int, connectionRetryEnabled boolean, call Call, eventListener EventListener) : void from class okhttp3.internal.connection.RealConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$exception(196)",58e531da6994d7fdf7a75529feaf849113d31f5a,c7d508b79c9e201c91ec23f5eec47c18be206567,1499349304,introduced,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,"okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$exception:ProtocolException(189)","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, boolean, Call, EventListener)$exception:ProtocolException(189)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$host(144)",f98ff257ceb949b404ec5d6cb1fece0e22e53264,738f7fa4def3bc9da39c8b815fe0905a6e6505fa,1467514724,introduced,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,"okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, List, boolean)$host:String(101)","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, List, boolean)$host:String(101)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$pingIntervalMillis(131)",2edbff44814dd8864f96fdd9ac3a8e0ef191fa40,abb0a790802996d1039c35424b70b0f3f06b94b7,1519262229,introduced,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java,"okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$pingIntervalMillis:int(131)","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$pingIntervalMillis:int(131)",TP,"Add Parameter pingIntervalMillis : int in method public connect(connectTimeout int, readTimeout int, writeTimeout int, pingIntervalMillis int, connectionRetryEnabled boolean, call Call, eventListener EventListener) : void from class okhttp3.internal.connection.RealConnection"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$readTimeout(130)",21e9c8398867f983e8c3cf29c6382690c1e4785d,3355d0c99bb946a6441f08fe6fd1c9881a9ea96a,1352581553,introduced,src/main/java/libcore/net/http/HttpConnection.java,src/main/java/libcore/net/http/HttpConnection.java,"src/main/java/libcore.net.http.HttpConnection#connect(int, int, TunnelConfig)$readTimeout:int(104)","src/main/java/libcore.net.http.HttpConnection#connect(int, int, TunnelConfig)$readTimeout:int(104)",TP,"added with method"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$routeException(135)",1e5f3a967977db513585ed8f350a65ab3175e9ce,b42e73f497eafe147667117202267ec756adff26,1438473253,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$routeException:RouteException(157)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, Request, List, boolean)$routeException:RouteException(157)",TP,"new variable"
"https://github.com/square/okhttp.git","okhttp/src/main/java/okhttp3.internal.connection.RealConnection#connect(int, int, int, int, boolean, Call, EventListener)$writeTimeout(130)",a867db645727acfd8d77212552bf835e6e8eb1c8,41aa4b6805141369d614964152d329a686aabdb8,1397855170,introduced,okhttp/src/main/java/com/squareup/okhttp/Connection.java,okhttp/src/main/java/com/squareup/okhttp/Connection.java,"okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, TunnelRequest)$writeTimeout:int(137)","okhttp/src/main/java/com.squareup.okhttp.Connection#connect(int, int, int, TunnelRequest)$writeTimeout:int(137)",TP,"Add Parameter writeTimeout : int in method public connect(connectTimeout int, readTimeout int, writeTimeout int, tunnelRequest TunnelRequest) : void from class com.squareup.okhttp.Connection"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableTypes(227)",36a07aa89747bb5942bd4a1bf7f5192a2c48c5ef,0be8c20fca26357aa61c28dec2f3720f1d7488be,1532479646,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedMediaTypes:List<MediaType>(229)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableTypes:List<MediaType>(227)",TP,"Rename Variable requestedMediaTypes : List<MediaType> to acceptableTypes : List<MediaType> in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableTypes(227)",35055fd866baadefeec2e2f47d1d94454763b452,f05e2bc56f8e03466977d73a5e99c37651248803,1340380546,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableMediaTypes:List<MediaType>(103)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedMediaTypes:List<MediaType>(114)",TP,"Rename Variable acceptableMediaTypes : List<MediaType> to requestedMediaTypes : List<MediaType> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableTypes(227)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,type change,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableMediaTypes:Set<MediaType>(163)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableMediaTypes:List<MediaType>(167)",TP,"Change Variable Type acceptableMediaTypes : Set<MediaType> to acceptableMediaTypes : List<MediaType> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableTypes(227)",a618bcc8cde89b7c7cc6e9fbc4348465387a8e99,1eaca6572091c014379e453299773e880a7766b9,1305718487,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableMediaTypes:Set<MediaType>(163)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$acceptableMediaTypes:Set<MediaType>(163)",TP,"Extract Variable acceptableMediaTypes : Set<MediaType> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$body(183)",003d643adcc457478fec972945d2dc7094739b4c,28a5c3009ea0c31f879c0bb8b9e6cfd33faa81e5,1529361191,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputValue:Object(180)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$body:Object(180)",TP,"Rename Variable outputValue : Object to body : Object in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$body(183)",e5122d084a936551da9786711b3de55dc0bc53d1,b204437cef0976f5af0e1c5290e77e266b306a51,1467463695,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputValue:Object(168)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputValue:Object(168)",TP,"Extract Variable outputValue : Object in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$contentType(218)",780993ce75a29003e54aea5d4f14b7496eda920a,9a894ab61e4613af176029761b75d7ad2a733440,1510344303,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$contentType:MediaType(216)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$contentType:MediaType(216)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$converter(273)",58242f224946682ad7cce515894f490b767c5240,7dd8dc62a5fa08e3cc99d2388ff62f5825151fb9,1497346678,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$messageConverter:HttpMessageConverter<?>(226)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$converter:HttpMessageConverter<?>(227)",TP,"Rename Variable messageConverter : HttpMessageConverter<?> to converter : HttpMessageConverter<?> in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$converter(273)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(129)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(129)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$ex(210)",d20b3cf86d80a27c4c4de79b20536fc8273a7997,582014e944002609b562f6e4998935c06bbe6922,1503600637,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$ex:IllegalArgumentException(206)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$ex:IllegalArgumentException(206)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$genericConverter(274)",58242f224946682ad7cce515894f490b767c5240,7dd8dc62a5fa08e3cc99d2388ff62f5825151fb9,1497346678,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$genericConverter:GenericHttpMessageConverter(228)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$genericConverter:GenericHttpMessageConverter(228)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$httpRanges(204)",d20b3cf86d80a27c4c4de79b20536fc8273a7997,582014e944002609b562f6e4998935c06bbe6922,1503600637,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$httpRanges:List<HttpRange>(200)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$httpRanges:List<HttpRange>(200)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$inputMessage(180)",a618bcc8cde89b7c7cc6e9fbc4348465387a8e99,1eaca6572091c014379e453299773e880a7766b9,1305718487,type change,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage, Set)$inputMessage:HttpInputMessage(157)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$inputMessage:ServletServerHttpRequest(158)",TP,"Change Parameter Type inputMessage : HttpInputMessage to inputMessage : ServletServerHttpRequest in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$inputMessage(180)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$inputMessage:HttpInputMessage(104)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$inputMessage:HttpInputMessage(104)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaType(254)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$mediaType:MediaType(154)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$mediaType:MediaType(154)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaType(254)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,type change,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(117)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$mediaType:MediaType(154)",FP,"Change Variable Type messageConverter : HttpMessageConverter<?> to mediaType : MediaType in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage HttpInputMessage, outputMessage HttpOutputMessage) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaType(254)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,rename,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(117)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$mediaType:MediaType(154)",FP,"Rename Variable messageConverter : HttpMessageConverter<?> to mediaType : MediaType in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage HttpInputMessage, outputMessage HttpOutputMessage) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaType(254)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(113)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$messageConverter:HttpMessageConverter<?>(113)",FP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaTypesToUse(234)",203370a810fad77d33c3484dbf9e79242583bf5b,fda08852ba9f5d52c149209382c0d03380de413c,1512193423,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaTypesToUse:List<MediaType>(213)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$mediaTypesToUse:List<MediaType>(213)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputMessage(180)",a618bcc8cde89b7c7cc6e9fbc4348465387a8e99,1eaca6572091c014379e453299773e880a7766b9,1305718487,type change,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage, Set)$outputMessage:HttpOutputMessage(158)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputMessage:ServletServerHttpResponse(159)",TP,"Change Parameter Type outputMessage : HttpOutputMessage to outputMessage : ServletServerHttpResponse in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$outputMessage(180)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$outputMessage:HttpOutputMessage(105)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$outputMessage:HttpOutputMessage(105)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleType(236)",21f9ca088d89822136e498e69880b4c958201779,ec7d80b8519332ffb5f0595dddc9ef52de532730,1398287027,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$p:MediaType(119)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleType:MediaType(114)",TP,"Rename Variable p : MediaType to producibleType : MediaType in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleType(236)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,rename,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleMediaType:MediaType(168)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$p:MediaType(172)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleType(236)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$p:MediaType(172)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$p:MediaType(172)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleType(236)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$producibleMediaType:MediaType(143)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$producibleMediaType:MediaType(143)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleTypes(228)",36a07aa89747bb5942bd4a1bf7f5192a2c48c5ef,0be8c20fca26357aa61c28dec2f3720f1d7488be,1532479646,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleMediaTypes:List<MediaType>(230)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleTypes:List<MediaType>(228)",TP,"Rename Variable producibleMediaTypes : List<MediaType> to producibleTypes : List<MediaType> in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleTypes(228)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,type change,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleMediaTypes:Set<MediaType>(164)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleMediaTypes:List<MediaType>(168)",TP,"Change Variable Type producibleMediaTypes : Set<MediaType> to producibleMediaTypes : List<MediaType> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleTypes(228)",1bbdb0d2ff3f25f3d1e3d43d9fa5d6dbb7da6235,af1dfd357743e6f4d5b9589ddb584f472a699e41,1305637368,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage, Set)$producibleMediaTypes:Set<MediaType>(159)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage, Set)$producibleMediaTypes:Set<MediaType>(159)",FP,"Add Parameter producibleMediaTypes : Set<MediaType> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage HttpInputMessage, outputMessage HttpOutputMessage, producibleMediaTypes Set<MediaType>) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$producibleTypes(228)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$producibleMediaTypes:Set<MediaType>(138)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$producibleMediaTypes:Set<MediaType>(138)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$request(226)",e5122d084a936551da9786711b3de55dc0bc53d1,b204437cef0976f5af0e1c5290e77e266b306a51,1467463695,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$servletRequest:HttpServletRequest(176)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$request:HttpServletRequest(183)",TP,"Rename Variable servletRequest : HttpServletRequest to request : HttpServletRequest in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$request(226)",35055fd866baadefeec2e2f47d1d94454763b452,f05e2bc56f8e03466977d73a5e99c37651248803,1340380546,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$servletRequest:HttpServletRequest(113)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$servletRequest:HttpServletRequest(113)",TP,"Extract Variable servletRequest : HttpServletRequest in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",21f9ca088d89822136e498e69880b4c958201779,ec7d80b8519332ffb5f0595dddc9ef52de532730,1398287027,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$r:MediaType(118)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType:MediaType(113)",TP,"Rename Variable r : MediaType to requestedType : MediaType in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",35055fd866baadefeec2e2f47d1d94454763b452,f05e2bc56f8e03466977d73a5e99c37651248803,1340380546,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$a:MediaType(107)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$r:MediaType(118)",TP,"Rename Variable a : MediaType to r : MediaType in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,rename,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)acceptableMediaType:MediaType(167)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$a:MediaType(171)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",c481d2e9fb200175eff3593f31fb02b3decd0a4d,5fa7f24794cc23cd0a803d8d49024d34f7df328b,1305910940,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$a:MediaType(171)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$a:MediaType(171)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,rename,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$acceptedMediaType:MediaType(116)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$acceptableMediaType:MediaType(142)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$requestedType(235)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$acceptedMediaType:MediaType(112)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$acceptedMediaType:MediaType(112)",FN,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$resource(202)",d20b3cf86d80a27c4c4de79b20536fc8273a7997,582014e944002609b562f6e4998935c06bbe6922,1503600637,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$resource:Resource(198)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$resource:Resource(198)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnType(179)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$returnType:MethodParameter(133)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$returnType:MethodParameter(133)",TP,"Add Parameter returnType : MethodParameter in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage HttpInputMessage, outputMessage HttpOutputMessage) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$selectedMediaType(217)",57c757afc50000d933193cba1aeeff9127483d5a,ad2e0d45875651d9a707b514dd3966fa81a9048c,1305625557,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$selectedMediaType:MediaType(153)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, HttpInputMessage, HttpOutputMessage)$selectedMediaType:MediaType(153)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType(185)",cacd14c80514155ccc2398e058529d17182f2c42,b915e42c387195ed956fd908602094139148aac3,1531763135,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$declaredType:Type(183)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType:Type(185)",TP,"Rename Variable declaredType : Type to targetType : Type in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType(185)",e5122d084a936551da9786711b3de55dc0bc53d1,b204437cef0976f5af0e1c5290e77e266b306a51,1467463695,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$type:Type(168)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$declaredType:Type(170)",TP,"Rename Variable type : Type to declaredType : Type in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType(185)",1291d6e1bd5ba6524c3fb68813aad807d123c2e1,7756feacd877093ad925d222c8bb911b6bb7c381,1454648699,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValueType:Type(172)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$type:Type(172)",TP,"Rename Variable returnValueType : Type to type : Type in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType(185)",51e30dd2211d635703359e907529a1ec871b91fa,289f35da3a57bb5e491b30c7351072b4e801c519,1435237353,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$type:Type(165)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValueType:Type(119)",TP,"Rename Variable type : Type to returnValueType : Type in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$targetType(185)",04a7ed5f911deb6ed83ebc8bab04300ab58d9b60,31a5434ea433bdec2283797bf9415c02bb2f41c1,1434985545,introduced,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$type:Type(165)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$type:Type(165)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value(179)",ffc3f6d87d640631c997fc9566679d094cdda267,f813712f5b413b354560cd7cc006352e9defa9a3,1496837955,annotation change,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value:T(164)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value:T(167)",TP,"Add Parameter Annotation @Nullable in parameter value : T in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value(179)",1291d6e1bd5ba6524c3fb68813aad807d123c2e1,7756feacd877093ad925d222c8bb911b6bb7c381,1454648699,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValue:T(167)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value:T(167)",TP,"Rename Parameter returnValue : T to value : T in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$value(179)",0f7d43ba90943f42f0e9f81697899a441ee9fa0c,acc75aa4b898a34dce42748df5b54624f8b3e9f2,1302089459,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$returnValue:T(103)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, HttpInputMessage, HttpOutputMessage)$returnValue:T(103)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$valueType(184)",e5122d084a936551da9786711b3de55dc0bc53d1,b204437cef0976f5af0e1c5290e77e266b306a51,1467463695,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$clazz:Class<?>(167)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$valueType:Class<?>(169)",TP,"Rename Variable clazz : Class<?> to valueType : Class<?> in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$valueType(184)",1291d6e1bd5ba6524c3fb68813aad807d123c2e1,7756feacd877093ad925d222c8bb911b6bb7c381,1454648699,rename,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java,"spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValueClass:Class<?>(171)","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$clazz:Class<?>(171)",TP,"Rename Variable returnValueClass : Class<?> to clazz : Class<?> in method protected writeWithMessageConverters(value T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-webmvc/src/main/java/org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$valueType(184)",d02e37a307c10276537cdb91368f6593c365b22f,c5833b192e3f3a280f8c63a9c45ca96776415a6b,1306257742,introduced,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/support/AbstractMessageConverterMethodProcessor.java,"org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValueClass:Class<?>(167)","org.springframework.web.servlet/src/main/java/org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor#writeWithMessageConverters(T, MethodParameter, ServletServerHttpRequest, ServletServerHttpResponse)$returnValueClass:Class<?>(167)",TP,"Extract Variable returnValueClass : Class<?> in method protected writeWithMessageConverters(returnValue T, returnType MethodParameter, inputMessage ServletServerHttpRequest, outputMessage ServletServerHttpResponse) : void from class org.springframework.web.servlet.mvc.method.annotation.support.AbstractMessageConverterMethodProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$pv(273)",27c435c4eae6502ba068a5da8c19d626c28316c3,2dc674f356fbe941b98301f89494767f80d55e6a,1432283608,introduced,spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java,spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java,"spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$pv:PropertyValue(286)","spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$pv:PropertyValue(286)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$tokens(273)",27c435c4eae6502ba068a5da8c19d626c28316c3,2dc674f356fbe941b98301f89494767f80d55e6a,1432283608,introduced,spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java,spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java,"spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$tokens:PropertyTokenHolder(286)","spring-beans/src/main/java/org.springframework.beans.AbstractNestablePropertyAccessor#setPropertyValue(PropertyTokenHolder, PropertyValue)$tokens:PropertyTokenHolder(286)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$alias(196)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$alias:String(145)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$alias:String(145)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes(250)",6b7c1d72e855fcee2ba1edb852af3d9f472dc551,2d23f42609c2e6a2ee6b0507f4b800870a63ca26,1434204449,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$scope:AnnotationAttributes(245)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes:AnnotationAttributes(248)",TP,"Rename Variable scope : AnnotationAttributes to attributes : AnnotationAttributes in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes(250)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$roleAttributes:Map<String,Object>(179)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$scope:AnnotationAttributes(266)",TP,"Change Variable Type roleAttributes : Map<String,Object> to scope : AnnotationAttributes in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes(250)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$roleAttributes:Map<String,Object>(179)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$scope:AnnotationAttributes(266)",TP,"Rename Variable roleAttributes : Map<String,Object> to scope : AnnotationAttributes in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes(250)",17892a8ab2499d2da2d2521970690bc7c92ad103,cf0fc278bbc5ef4a3b08cc0a98d581ee8f930eae,1304708890,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$roleAttributes:Map<String,Object>(195)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$roleAttributes:Map<String,Object>(195)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$attributes(250)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$scopeAttributes:Map<String,Object>(176)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$scopeAttributes:Map<String,Object>(176)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$autowire(230)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$autowire:Autowire(155)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$autowire:Autowire(155)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$autowireCandidate(235)",182243d20d8c4793d65ab6ea8d4a50d59e2e6545,fc699b2b3784413bb7348b8c2a92eb2ab871479f,1530736865,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$autowireCandidate:boolean(235)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$autowireCandidate:boolean(235)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$bean(188)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$bean:AnnotationAttributes(205)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$bean:AnnotationAttributes(205)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanDef(210)",cf2e1ffc65a2684493cae60580fa76703fa006b7,c9771012e98afe1679cd1c3ebf5ab6c1a018fd65,1377269365,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanDef:RootBeanDefinition(188)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanDef:ConfigurationClassBeanDefinition(185)",TP,"Change Variable Type beanDef : RootBeanDefinition to beanDef : ConfigurationClassBeanDefinition in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanDef(210)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$beanDef:RootBeanDefinition(125)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$beanDef:RootBeanDefinition(125)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanDefToRegister(260)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$beanDefToRegister:BeanDefinition(182)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$beanDefToRegister:BeanDefinition(182)",TP,"Extract Variable beanDefToRegister : BeanDefinition in method private loadBeanDefinitionsForModelMethod(method ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod(174)",f683f781c584b12790752ddfb0ee334e61a0b9e9,0a790c143feeabf571e98f8ee0700a4586cbb67c,1304708516,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(ConfigurationClassMethod)$beanMethod:ConfigurationClassMethod(206)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod:BeanMethod(206)",TP,"Change Parameter Type beanMethod : ConfigurationClassMethod to beanMethod : BeanMethod in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod(174)",b04987ccc37985eae59a2b5cc19a1c6ea5d6c844,b4fea47d5cff9f3c85e62c233c2fe86b1d616592,1297176153,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$method:ConfigurationClassMethod(164)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(ConfigurationClassMethod)$beanMethod:ConfigurationClassMethod(201)",TP,"Rename Parameter method : ConfigurationClassMethod to beanMethod : ConfigurationClassMethod in method private loadBeanDefinitionsForBeanMethod(beanMethod ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod(174)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationModelBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$method:BeanMethod(122)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$method:ConfigurationClassMethod(104)",TP,"Change Parameter Type method : BeanMethod to method : ConfigurationClassMethod in method private loadBeanDefinitionsForModelMethod(method ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod(174)",61a1c4d0c6124e75af95250a15a2d74187485bb1,eaf3a7cec49e3a6e8ed828dbb69b9a9b007b0b39,1236283695,type change,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ModelMethod)$method:ModelMethod(150)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$method:BeanMethod(143)",TP,"Change Parameter Type method : ModelMethod to method : BeanMethod in method private loadBeanDefinitionsForModelMethod(method BeanMethod) : void from class org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanMethod(174)",e8b353e703c2c8a19bed6d8990615ca0d72545f0,e48fe0d89271113bcac4e7c41e86cb1d8230594e,1235698544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/internal/factory/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/internal/factory/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.internal.factory.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ModelMethod)$method:ModelMethod(150)","org.springframework.config.java/src/main/java/org.springframework.config.java.internal.factory.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ModelMethod)$method:ModelMethod(150)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$beanName(193)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$beanName:String(144)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$beanName:String(144)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$configClass(175)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$configClass:ConfigurationClass(127)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$configClass:ConfigurationClass(127)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$destroyMethodName(245)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$destroyMethodName:String(179)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$destroyMethodName:String(179)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$initMethodName(240)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$initMethodName:String(174)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$initMethodName:String(174)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$metadata(176)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$metadata:MethodMetadata(108)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$metadata:MethodMetadata(108)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$methodName(177)",8f228d1db4d83a67ec2599870111221e3eea9d62,bb5b5d52edf60350f09cf11c41e6fba534bebb54,1424886328,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$methodName:String(187)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$methodName:String(187)",TP,"Extract Variable methodName : String in method private loadBeanDefinitionsForBeanMethod(beanMethod BeanMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$names(192)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationModelBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$names:ArrayList<String>(138)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$names:List<String>(113)",TP,"Change Variable Type names : ArrayList<String> to names : List<String> in method private loadBeanDefinitionsForModelMethod(method ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$names(192)",2bbc4e48adfc697903ccc5c61504be3fd2ac1c0c,8a5c2a6a56e7b88b44af7111edb2bfc8b1781f48,1237761544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationModelBeanDefinitionReader.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$names:ArrayList<String>(143)","org.springframework.config.java/src/main/java/org.springframework.config.java.support.ConfigurationModelBeanDefinitionReader#loadBeanDefinitionsForModelMethod(BeanMethod)$names:ArrayList<String>(143)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$proxyDef(262)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyDef:BeanDefinitionHolder(184)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyDef:BeanDefinitionHolder(184)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$proxyMode(249)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyMode:ScopedProxyMode(172)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyMode:ScopedProxyMode(172)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$proxyMode(249)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationModelBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationModelBeanDefinitionReader#getBeanDefinitionIncludingAncestry(String, BeanDefinitionRegistry)$clbf:ConfigurableListableBeanFactory(229)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyMode:ScopedProxyMode(172)",FP,"Rename Variable clbf : ConfigurableListableBeanFactory to proxyMode : ScopedProxyMode in method private loadBeanDefinitionsForModelMethod(method ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$proxyMode(249)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationModelBeanDefinitionReader.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationModelBeanDefinitionReader#getBeanDefinitionIncludingAncestry(String, BeanDefinitionRegistry)$clbf:ConfigurableListableBeanFactory(229)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForModelMethod(ConfigurationClassMethod)$proxyMode:ScopedProxyMode(172)",FP,"Change Variable Type clbf : ConfigurableListableBeanFactory to proxyMode : ScopedProxyMode in method private loadBeanDefinitionsForModelMethod(method ConfigurationClassMethod) : void from class org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(BeanMethod)$proxyMode(249)",e8b353e703c2c8a19bed6d8990615ca0d72545f0,e48fe0d89271113bcac4e7c41e86cb1d8230594e,1235698544,introduced,org.springframework.config.java/src/main/java/org/springframework/config/java/annotation/BeanRegistrar.java,org.springframework.config.java/src/main/java/org/springframework/config/java/annotation/BeanRegistrar.java,"org.springframework.config.java/src/main/java/org.springframework.config.java.annotation.BeanRegistrar#getBeanDefinitionIncludingAncestry(String, BeanDefinitionRegistry)$clbf:ConfigurableListableBeanFactory(166)","org.springframework.config.java/src/main/java/org.springframework.config.java.annotation.BeanRegistrar#getBeanDefinitionIncludingAncestry(String, BeanDefinitionRegistry)$clbf:ConfigurableListableBeanFactory(166)",FP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$bdCand(291)",4c021d04ce1be343011f9ee8f16409189f629e1a,c8b6233bd03d43c8a91ec197e9cf1ea15bba478c,1525267242,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$bdCand:BeanDefinition(291)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$bdCand:BeanDefinition(291)",TP,"Extract Variable bdCand : BeanDefinition in method protected doProcessConfigurationClass(configClass ConfigurationClass, sourceClass SourceClass) : SourceClass from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$beanMethods(318)",75d0f9b95cbaa7d4ea025f314ab55e3074611a2c,d1b3f57320d5567ff8f6420c9bcf07521ea5e2b9,1262202132,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methods:Set<MethodMetadata>(143)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$beanMethods:Set<MethodMetadata>(143)",TP,"Rename Variable methods : Set<MethodMetadata> to beanMethods : Set<MethodMetadata> in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$beanMethods(318)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methods:Set<MethodMetadata>(122)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methods:Set<MethodMetadata>(122)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScan(285)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScanAttributes:Map<String,Object>(191)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScan:AnnotationAttributes(195)",TP,"Change Variable Type componentScanAttributes : Map<String,Object> to componentScan : AnnotationAttributes in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScan(285)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScanAttributes:Map<String,Object>(191)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScan:AnnotationAttributes(195)",TP,"Rename Variable componentScanAttributes : Map<String,Object> to componentScan : AnnotationAttributes in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScan(285)",c2b030a50dd62f3f1614e8a19ba9658d0fe0abdb,d0c31ad84cffd7af718a45d679483a1c51f9e552,1304862575,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScanAttributes:Map<String,Object>(155)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$componentScanAttributes:Map<String,Object>(155)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScans(281)",aecb8b6c6bd3c63ac3f609c2340edd57f7e3f8c8,388bd87ef03b3c080f1c351855d01af1df033a94,1451421608,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScans:Set<AnnotationAttributes>(263)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$componentScans:Set<AnnotationAttributes>(263)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$configClass(261)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$configClass:ConfigurationClass(118)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$configClass:ConfigurationClass(118)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$holder(290)",c2b030a50dd62f3f1614e8a19ba9658d0fe0abdb,d0c31ad84cffd7af718a45d679483a1c51f9e552,1304862575,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$holder:BeanDefinitionHolder(161)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$holder:BeanDefinitionHolder(161)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$importResource(306)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importResource:AnnotationAttributes(217)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importResource:AnnotationAttributes(217)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$methodMetadata(319)",f683f781c584b12790752ddfb0ee334e61a0b9e9,0a790c143feeabf571e98f8ee0700a4586cbb67c,1304708516,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$beanMethod:MethodMetadata(153)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(153)",FN,"Rename Variable $beanMethod : MethodMetadata to $methodMetadata : MethodMetadata in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$methodMetadata(319)",f683f781c584b12790752ddfb0ee334e61a0b9e9,0a790c143feeabf571e98f8ee0700a4586cbb67c,1304708516,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(153)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(153)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$methodMetadata(319)",061063257ab8e16786d04eaddb5b5aba61dcd7f1,d78eda8aebda0704e29fdccf619e9931b5446efc,1286735503,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(142)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$beanMethod:MethodMetadata(142)",FN,"Rename Variable methodMetadata : MethodMetadata to beanMethod : MethodMetadata in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$methodMetadata(319)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(123)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$methodMetadata:MethodMetadata(123)",FN,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$propertySource(268)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySourceAttributes:Map<String,Object>(175)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySource:AnnotationAttributes(179)",TP,"Change Variable Type propertySourceAttributes : Map<String,Object> to propertySource : AnnotationAttributes in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$propertySource(268)",3eff36452908c06774eb4e40e4943cb794674c05,ee36c80ca961a5b2af233cd26a5483d57939c0af,1329142650,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySourceAttributes:Map<String,Object>(175)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySource:AnnotationAttributes(179)",TP,"Rename Variable propertySourceAttributes : Map<String,Object> to propertySource : AnnotationAttributes in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$propertySource(268)",314a054a9baf2cc13dc0c64d3b388164e5f5346e,c8bc54e0ccad49f0785856f911349283619eb8ba,1305120513,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySourceAttributes:Map<String,Object>(166)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$propertySourceAttributes:Map<String,Object>(166)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$readerClass(310)",75d0f9b95cbaa7d4ea025f314ab55e3074611a2c,d1b3f57320d5567ff8f6420c9bcf07521ea5e2b9,1262202132,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClass:Class(134)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClass:Class<?>(134)",TP,"Change Variable Type readerClass : Class to readerClass : Class<?> in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$readerClass(310)",afdb96ab2c7d188a301be782177a4a2c14fe4dc5,bbd7fb3969b7fd93c814380209d8f28e2a9c6714,1257966701,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClassName:String(134)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClass:Class(134)",TP,"Change Variable Type readerClassName : String to readerClass : Class in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$readerClass(310)",afdb96ab2c7d188a301be782177a4a2c14fe4dc5,bbd7fb3969b7fd93c814380209d8f28e2a9c6714,1257966701,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClassName:String(134)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClass:Class(134)",TP,"Rename Variable readerClassName : String to readerClass : Class in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$readerClass(310)",81efd48352d0fade47e40e8a9c8cf49d4ee269b5,ee553f7804c9cc2ac89b963bcff58974503c20fe,1257900510,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClassName:String(134)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$readerClassName:String(134)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resolvedResource(312)",2c030d4dcf4866bccc7a59d47398d6bc0de52ce2,1a8f0d6a9e37d12b31a2fe7bc1fbc2c91700a08e,1374264616,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resolvedResource:String(260)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resolvedResource:String(260)",TP,"Extract Variable resolvedResource : String in method protected doProcessConfigurationClass(configClass ConfigurationClass, sourceClass SourceClass) : SourceClass from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resource(311)",afdb96ab2c7d188a301be782177a4a2c14fe4dc5,bbd7fb3969b7fd93c814380209d8f28e2a9c6714,1257966701,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importedResource:String(135)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$resource:String(139)",TP,"Rename Variable importedResource : String to resource : String in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resource(311)",81efd48352d0fade47e40e8a9c8cf49d4ee269b5,ee553f7804c9cc2ac89b963bcff58974503c20fe,1257900510,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importedResource:String(135)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importedResource:String(135)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resource(311)",81efd48352d0fade47e40e8a9c8cf49d4ee269b5,ee553f7804c9cc2ac89b963bcff58974503c20fe,1257900510,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$xmlImport:String(132)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$importedResource:String(135)",FN,"Rename Variable xmlImport : String to importedResource : String in method protected doProcessConfigurationClass(configClass ConfigurationClass, metadata AnnotationMetadata) : void from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resource(311)",20ec13ded5f35460c7a75b15abeb34d8e587c3f9,0a4463fb71e6901a943a5bafc9d1957da2229333,1257553960,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$xmlImport:String(132)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$xmlImport:String(132)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$resources(309)",afdb96ab2c7d188a301be782177a4a2c14fe4dc5,bbd7fb3969b7fd93c814380209d8f28e2a9c6714,1257966701,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$resources:String[](133)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$resources:String[](133)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$scannedBeanDefinitions(287)",c2b030a50dd62f3f1614e8a19ba9658d0fe0abdb,d0c31ad84cffd7af718a45d679483a1c51f9e552,1304862575,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$scannedBeanDefinitions:Set<BeanDefinitionHolder>(158)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$scannedBeanDefinitions:Set<BeanDefinitionHolder>(158)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$sourceClass(261)",51d828816d3a50004863964d8b9c92b2a32fdc33,e10e16cd6b2a2342a6b7d169878117046b6c5e16,1370881534,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$metadata:AnnotationMetadata(209)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$sourceClass:SourceClass(212)",TP,"Change Parameter Type metadata : AnnotationMetadata to sourceClass : SourceClass in method protected doProcessConfigurationClass(configClass ConfigurationClass, sourceClass SourceClass) : SourceClass from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$sourceClass(261)",51d828816d3a50004863964d8b9c92b2a32fdc33,e10e16cd6b2a2342a6b7d169878117046b6c5e16,1370881534,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$metadata:AnnotationMetadata(209)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$sourceClass:SourceClass(212)",TP,"Rename Parameter metadata : AnnotationMetadata to sourceClass : SourceClass in method protected doProcessConfigurationClass(configClass ConfigurationClass, sourceClass SourceClass) : SourceClass from class org.springframework.context.annotation.ConfigurationClassParser"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$sourceClass(261)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$metadata:AnnotationMetadata(118)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$metadata:AnnotationMetadata(118)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, SourceClass)$superclass(328)",81dfef90efabf4cd761e2d31d45c2ba2e498818c,3e81482760f742d078e71b166cc0f7c3c2eb6abb,1329393628,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$superclass:String(231)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassParser#doProcessConfigurationClass(ConfigurationClass, AnnotationMetadata)$superclass:String(231)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsed(313)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsed:Set<ConfigurationClass>(309)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsed:Set<ConfigurationClass>(309)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsedClasses(334)",983b5338ed0284388d8ac528821a918cdb3b2634,4c59d85f690a29c45c644f9c3f13010d5cba84ed,1411423547,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsedClasses:Set<String>(325)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$alreadyParsedClasses:Set<String>(325)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$bd(340)",0d0b879a2313b73bf85abfe45ff0a59897aa6a3e,91df0653fe5e22477ec2ed6dbe7e44b835c99038,1492434334,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef:BeanDefinition(333)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$bd:BeanDefinition(333)",TP,"Rename Variable beanDef : BeanDefinition to bd : BeanDefinition in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$bd(340)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef:BeanDefinition(351)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef:BeanDefinition(351)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef(266)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef:BeanDefinition(123)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanDef:BeanDefinition(123)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanName(265)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanName:String(122)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$beanName:String(122)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateName(338)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateName:String(349)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateName:String(349)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateNames(263)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateNames:String[](273)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidateNames:String[](273)",TP,"Extract Variable candidateNames : String[] in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidates(312)",9d497cbd98ad400401dda1c91f46e5211b6107d9,f5b4e18209c45c948ab6bce6d166ef17b3f5b25d,1426267101,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidates:Set<BeanDefinitionHolder>(318)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$candidates:Set<BeanDefinitionHolder>(318)",TP,"Extract Variable candidates : Set<BeanDefinitionHolder> in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates(262)",9d497cbd98ad400401dda1c91f46e5211b6107d9,f5b4e18209c45c948ab6bce6d166ef17b3f5b25d,1426267101,type change,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates:Set<BeanDefinitionHolder>(267)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates:List<BeanDefinitionHolder>(271)",TP,"Change Variable Type configCandidates : Set<BeanDefinitionHolder> to configCandidates : List<BeanDefinitionHolder> in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates(262)",37e1333a41adb6b36952e475cf84b1a24d7a8ed9,b5d21108da24f8344be3bc708c7afdfca9a1d089,1240571806,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configBeanDefs:Set<BeanDefinitionHolder>(125)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates:Set<BeanDefinitionHolder>(125)",TP,"Rename Variable configBeanDefs : Set<BeanDefinitionHolder> to configCandidates : Set<BeanDefinitionHolder> in method protected processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configCandidates(262)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configBeanDefs:Set<BeanDefinitionHolder>(121)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configBeanDefs:Set<BeanDefinitionHolder>(121)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configClasses(318)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configClasses:Set<ConfigurationClass>(333)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configClasses:Set<ConfigurationClass>(333)",TP,"Extract Variable configClasses : Set<ConfigurationClass> in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configurationClass(335)",983b5338ed0284388d8ac528821a918cdb3b2634,4c59d85f690a29c45c644f9c3f13010d5cba84ed,1411423547,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configurationClass:ConfigurationClass(326)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$configurationClass:ConfigurationClass(326)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$generator(295)",34c3e821ddb25e90f1e8ad90aac55f68a6f2f195,0a42c80c1151380f7f492ec75de5648cfe62d250,1347311780,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$generator:BeanNameGenerator(265)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$generator:BeanNameGenerator(265)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$newCandidateNames(332)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$newCandidateNames:String[](347)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$newCandidateNames:String[](347)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$oldCandidateNames(333)",f1f1c4c9803f1f7ebf9f78fd516e25cd13f256ff,71c6eb2bb594f29803b6ec4a50de875def98be86,1407857001,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$oldCandidateNames:Set<String>(348)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$oldCandidateNames:Set<String>(348)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$parser(308)",8dfcae535e19b0c80dabf8fdbad81fbcd8ba8246,6fcea8b99da45f287149796ef2598f0d71758793,1305659717,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(231)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(231)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry(261)",8dfcae535e19b0c80dabf8fdbad81fbcd8ba8246,6fcea8b99da45f287149796ef2598f0d71758793,1305659717,rename,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassParser, ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(218)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$registry:BeanDefinitionRegistry(216)",FP,"Rename Parameter parser : ConfigurationClassParser to registry : BeanDefinitionRegistry in method public processConfigBeanDefinitions(reader ConfigurationClassBeanDefinitionReader, registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry(261)",8dfcae535e19b0c80dabf8fdbad81fbcd8ba8246,6fcea8b99da45f287149796ef2598f0d71758793,1305659717,type change,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassParser, ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(218)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$registry:BeanDefinitionRegistry(216)",FP,"Change Parameter Type parser : ConfigurationClassParser to registry : BeanDefinitionRegistry in method public processConfigBeanDefinitions(reader ConfigurationClassBeanDefinitionReader, registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry(261)",0a790c143feeabf571e98f8ee0700a4586cbb67c,111fb71fe1ccb8d3a5e06e61461edd87d6d025f4,1304708632,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassParser, ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(201)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(ConfigurationClassParser, ConfigurationClassBeanDefinitionReader, BeanDefinitionRegistry)$parser:ConfigurationClassParser(201)",FP,"Add Parameter parser : ConfigurationClassParser in method public processConfigBeanDefinitions(parser ConfigurationClassParser, reader ConfigurationClassBeanDefinitionReader, registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry(261)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry:BeanDefinitionRegistry(120)","org.springframework.context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$registry:BeanDefinitionRegistry(120)",FN,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$sbr(291)",0d0b879a2313b73bf85abfe45ff0a59897aa6a3e,91df0653fe5e22477ec2ed6dbe7e44b835c99038,1492434334,rename,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$singletonRegistry:SingletonBeanRegistry(290)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$sbr:SingletonBeanRegistry(290)",TP,"Rename Variable singletonRegistry : SingletonBeanRegistry to sbr : SingletonBeanRegistry in method public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void from class org.springframework.context.annotation.ConfigurationClassPostProcessor"
"https://github.com/spring-projects/spring-framework.git","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$sbr(291)",81dfef90efabf4cd761e2d31d45c2ba2e498818c,3e81482760f742d078e71b166cc0f7c3c2eb6abb,1329393628,introduced,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java,"spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$singletonRegistry:SingletonBeanRegistry(244)","spring-context/src/main/java/org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(BeanDefinitionRegistry)$singletonRegistry:SingletonBeanRegistry(244)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$ambiguousFactoryMethods(436)",c7661d53412249a428c8765dcb23b5c7550aa37b,17dfc8b0fcf3e2a02ab0db48af1d309981bbe6c2,1248885792,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$ambiguousFactoryMethods:Set<Method>(384)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$ambiguousFactoryMethods:Set<Method>(384)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$arg(532)",9891bdc7b43feb970951658a808d701aec13b10b,ad317774fb8e0b1f70e0135e5786c94c2521fb73,1394032589,introduced,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$arg:Object(528)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$arg:Object(528)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argDesc(546)",cbed1c1b4b5fd74c9cd201890f619a7079804d3f,351e72b6e258bd030fb21be253f6348319f81d0e,1269605136,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argDesc:String(505)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argDesc:String(505)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argType(541)",cbed1c1b4b5fd74c9cd201890f619a7079804d3f,351e72b6e258bd030fb21be253f6348319f81d0e,1269605136,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argType:String(509)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argType:String(509)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argTypes(530)",cbed1c1b4b5fd74c9cd201890f619a7079804d3f,351e72b6e258bd030fb21be253f6348319f81d0e,1269605136,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argTypes:List<String>(507)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argTypes:List<String>(507)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args(580)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args:Object[](520)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args:Object[](520)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolder(461)",e6b0a1d4d7d5eea5136f236502ef84614c730333,12ce250c6ce911774a7983905fd6e006b5a1eac1,1271247116,rename,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args:ArgumentsHolder(439)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolder:ArgumentsHolder(441)",TP,"Rename Variable args : ArgumentsHolder to argsHolder : ArgumentsHolder in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolder(461)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args:ArgumentsHolder(366)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$args:ArgumentsHolder(366)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolderToUse(395)",e6b0a1d4d7d5eea5136f236502ef84614c730333,12ce250c6ce911774a7983905fd6e006b5a1eac1,1271247116,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolderToUse:ArgumentsHolder(369)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsHolderToUse:ArgumentsHolder(369)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToResolve(402)",9a088b8128cb1a8027a13645a7e4d400d767aabb,9857ba077b16312e78ca6dcf2a219326955daae5,1282122535,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToResolve:Object[](381)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToResolve:Object[](381)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToUse(396)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToUse:Object[](301)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$argsToUse:Object[](301)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$autowiring(434)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$autowiring:boolean(340)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$autowiring:boolean(340)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanInstance(575)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanInstance:Object(435)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanInstance:Object(435)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName(361)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,modifier change,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName:String(314)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName:String(334)",TP,"Add Parameter Modifier final in parameter beanName : String in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName(361)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName:String(273)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$beanName:String(273)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$bw(363)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$bw:BeanWrapperImpl(274)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$bw:BeanWrapperImpl(274)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate(425)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate:Method(321)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate:Method(321)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate(457)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate:Method(359)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidate:Method(359)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidateSet(424)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidateSet:List<Method>(320)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidateSet:List<Method>(320)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidates(430)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidates:Method[](339)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$candidates:Method[](339)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cargs(446)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cargs:ConstructorArgumentValues(351)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cargs:ConstructorArgumentValues(351)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cause(525)",998511a375c98f63047c9c7b1bb81028ac3705dc,05bebb0c056714d97b479cf6c5552ba3c5b06d9c,1227202426,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cause:Exception(375)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$cause:Exception(375)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes(455)",7a32ce317c320ad3ffe1d9a40488d5f4772436c7,8a83af55b8adf833683b8d9a6924eecf69709a12,1456486263,type change,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:List<Exception>(447)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:LinkedList<UnsatisfiedDependencyException>(447)",TP,"Change Variable Type causes : List<Exception> to causes : LinkedList<UnsatisfiedDependencyException> in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes(455)",998511a375c98f63047c9c7b1bb81028ac3705dc,05bebb0c056714d97b479cf6c5552ba3c5b06d9c,1227202426,type change,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:List(351)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:List<Exception>(350)",TP,"Change Variable Type causes : List to causes : List<Exception> in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes(455)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:List(356)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$causes:List(356)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs(361)",2d37c966b2831add8fd0e01efa9c1eb8240fbdd3,87598f48e41d483745aba56cbf4e998c6f6d680c,1495868221,annotation change,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](357)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](359)",TP,"Add Parameter Annotation @Nullable in parameter explicitArgs : Object[] in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs(361)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,modifier change,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](314)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](334)",TP,"Add Parameter Modifier final in parameter explicitArgs : Object[] in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs(361)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](273)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$explicitArgs:Object[](273)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBean(366)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBean:Object(278)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBean:Object(278)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBeanName(370)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBeanName:String(281)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryBeanName:String(281)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass(367)",49758a2a96261d827c9f448af7de157116e547fb,b093b8495416cd3f05a32add1c671174341bd595,1383520795,type change,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass:Class(345)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass:Class<?>(345)",TP,"Change Variable Type factoryClass : Class to factoryClass : Class<?> in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass(367)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass:Class(277)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryClass:Class(277)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethod(579)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethod:Method(519)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethod:Method(519)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethodToUse(394)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethodToUse:Method(300)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$factoryMethodToUse:Method(300)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$fb(578)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$fb:Object(518)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$fb:Object(518)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$isStatic(368)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$isStatic:boolean(279)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$isStatic:boolean(279)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd(361)",fe5b5022f0de144d05da65b63015229241cf58b2,d5d3104b7b13ce249bf9c877f7160cd2137ec209,1249576479,modifier change,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd:RootBeanDefinition(314)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd:RootBeanDefinition(334)",TP,"Add Parameter Modifier final in parameter mbd : RootBeanDefinition in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd(361)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd:RootBeanDefinition(273)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$mbd:RootBeanDefinition(273)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minNrOfArgs(438)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minNrOfArgs:int(344)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minNrOfArgs:int(344)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minTypeDiffWeight(435)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minTypeDiffWeight:int(341)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$minTypeDiffWeight:int(341)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramNames(473)",0a0b10b2ff9be5be9b1bbeee2fec5592b9bd03d3,53333c3ed06e465a55592a0f351ffab40110e5b3,1244024517,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramNames:String[](391)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramNames:String[](391)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes(458)",49758a2a96261d827c9f448af7de157116e547fb,b093b8495416cd3f05a32add1c671174341bd595,1383520795,type change,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes:Class[](450)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes:Class<?>[](450)",TP,"Change Variable Type paramTypes : Class[] to paramTypes : Class<?>[] in method public instantiateUsingFactoryMethod(beanName String, mbd RootBeanDefinition, explicitArgs Object[]) : BeanWrapper from class org.springframework.beans.factory.support.ConstructorResolver"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes(458)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes:Class[](360)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$paramTypes:Class[](360)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$pnd(474)",0a0b10b2ff9be5be9b1bbeee2fec5592b9bd03d3,53333c3ed06e465a55592a0f351ffab40110e5b3,1244024517,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$pnd:ParameterNameDiscoverer(392)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$pnd:ParameterNameDiscoverer(392)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$rawCandidates(423)",736169aa2a46f489cd8e75cf4d61cef997fc456f,14bd47551900ced88eeacf2a5f63c187ff72028c,1240184731,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$rawCandidates:Method[](319)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$rawCandidates:Method[](319)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$resolvedValues(433)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$resolvedValues:ConstructorArgumentValues(342)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$resolvedValues:ConstructorArgumentValues(342)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$typeDiffWeight(494)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$typeDiffWeight:int(406)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$typeDiffWeight:int(406)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$value(540)",cbed1c1b4b5fd74c9cd201890f619a7079804d3f,351e72b6e258bd030fb21be253f6348319f81d0e,1269605136,introduced,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$value:ValueHolder(508)","org.springframework.beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$value:ValueHolder(508)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$valueHolders(537)",9891bdc7b43feb970951658a808d701aec13b10b,ad317774fb8e0b1f70e0135e5786c94c2521fb73,1394032589,introduced,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java,"spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$valueHolders:Set<ValueHolder>(533)","spring-beans/src/main/java/org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])$valueHolders:Set<ValueHolder>(533)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$converter(255)",5faa4d90ac8bc14bbabc0af6d03b7f349a430501,6ce33dba7564a71c5ccca6696f3c20083a1e34d0,1253568277,introduced,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$converter:GenericConverter(198)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$converter:GenericConverter(198)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$key(254)",33252495cfea895f61aef38c56b59a660ef5ae75,bf03d0d56f9fcfc4757bd3ab35e40c3f528fe710,1271626980,introduced,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$key:ConverterCacheKey(245)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$key:ConverterCacheKey(245)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType(253)",6420fd303bdae3962d4eab6326811afbca759d05,d3b43ebccb923c6d5825b10d4f4f305b54ee549d,1253303879,type change,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(Class, TypeDescriptor)$sourceType:Class(181)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType:TypeDescriptor(186)",TP,"Change Parameter Type sourceType : Class to sourceType : TypeDescriptor in method protected getConverter(sourceType TypeDescriptor, targetType TypeDescriptor) : GenericConverter from class org.springframework.core.convert.support.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType(253)",39c1ab923f6a196318581c66ebe8d5519b01fdb2,31441627de02bcc4ac2dcf307809b3c94b642e7b,1253216935,type change,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(Class, Class)$sourceType:Class<?>(184)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(Class, TypeDescriptor)$sourceType:Class(180)",TP,"Change Parameter Type sourceType : Class<?> to sourceType : Class in method protected getConverter(sourceType Class, targetType TypeDescriptor) : GenericConverter from class org.springframework.core.convert.support.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType(253)",b988f1a539aba6a814da900cdd95160310000eb0,ebb203a25155f822e0eec8719b7f2327fcd664c0,1239379038,rename,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(TypeDescriptor, TypeDescriptor)$sourceClass:Class<?>(327)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$sourceType:Class<?>(311)",TP,"Parameterize Variable sourceClass : Class<?> to sourceType : Class<?> in method private findRegisteredConverter(sourceType Class<?>, targetType Class<?>) : Converter from class org.springframework.core.convert.service.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType(253)",eabad33aa287fb0a45f7bc88ce32e636307ab094,518f98d4c35d21243747fc159ccc94a3265b42c5,1238511982,type change,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$sourceClass:Class(309)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(TypeDescriptor, TypeDescriptor)$sourceClass:Class<?>(317)",TP,"Change Variable Type sourceClass : Class to sourceClass : Class<?> in method private findRegisteredConverter(sourceType TypeDescriptor, targetType TypeDescriptor) : Converter from class org.springframework.core.convert.service.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$sourceType(253)",c1f3ec0c5bee9d8f577a599fcfa4f3f9937f7646,3a7b4bf1b0d671a1d00f3dee3df301d621e7ad98,1236383297,introduced,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$sourceClass:Class(262)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$sourceClass:Class(262)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",39c1ab923f6a196318581c66ebe8d5519b01fdb2,31441627de02bcc4ac2dcf307809b3c94b642e7b,1253216935,type change,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(Class, Class)$targetType:Class<?>(184)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(Class, TypeDescriptor)$targetType:TypeDescriptor(180)",TP,"Change Parameter Type targetType : Class<?> to targetType : TypeDescriptor in method protected getConverter(sourceType Class, targetType TypeDescriptor) : GenericConverter from class org.springframework.core.convert.support.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",c63567c2ef8241949748462db2fcfb9ec26be937,6651ff0c5528bf60eed3a3382846ba8d59415b02,1252373736,type change,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#findRegisteredConverter(Class, Class)$targetType:Class<T>(371)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#findRegisteredConverter(Class, Class)$targetType:Class<?>(375)",TP,"Change Parameter Type targetType : Class<T> to targetType : Class<?> in method private findRegisteredConverter(sourceType Class<?>, targetType Class<?>) : Converter from class org.springframework.core.convert.support.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",f9f9b431a697132af0e22311d74b90c3f01dccb7,a86a698e5b3394c9b6721a784c8fe251611ff16b,1252367922,type change,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#findRegisteredConverter(Class, Class)$targetType:Class<?>(359)","org.springframework.core/src/main/java/org.springframework.core.convert.support.GenericConversionService#findRegisteredConverter(Class, Class)$targetType:Class<T>(371)",TP,"Change Parameter Type targetType : Class<?> to targetType : Class<T> in method protected findRegisteredConverter(sourceType Class<?>, targetType Class<T>) : Converter from class org.springframework.core.convert.support.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",b988f1a539aba6a814da900cdd95160310000eb0,ebb203a25155f822e0eec8719b7f2327fcd664c0,1239379038,rename,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(TypeDescriptor, TypeDescriptor)$targetClass:Class<?>(328)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$targetType:Class<?>(311)",TP,"Parameterize Variable targetClass : Class<?> to targetType : Class<?> in method private findRegisteredConverter(sourceType Class<?>, targetType Class<?>) : Converter from class org.springframework.core.convert.service.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",eabad33aa287fb0a45f7bc88ce32e636307ab094,518f98d4c35d21243747fc159ccc94a3265b42c5,1238511982,type change,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$targetClass:Class(309)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(TypeDescriptor, TypeDescriptor)$targetClass:Class<?>(318)",TP,"Change Variable Type targetClass : Class to targetClass : Class<?> in method private findRegisteredConverter(sourceType TypeDescriptor, targetType TypeDescriptor) : Converter from class org.springframework.core.convert.service.GenericConversionService"
"https://github.com/spring-projects/spring-framework.git","spring-core/src/main/java/org.springframework.core.convert.support.GenericConversionService#getConverter(TypeDescriptor, TypeDescriptor)$targetType(253)",c1f3ec0c5bee9d8f577a599fcfa4f3f9937f7646,3a7b4bf1b0d671a1d00f3dee3df301d621e7ad98,1236383297,introduced,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,org.springframework.core/src/main/java/org/springframework/core/convert/service/GenericConversionService.java,"org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$targetClass:Class(262)","org.springframework.core/src/main/java/org.springframework.core.convert.service.GenericConversionService#findRegisteredConverter(Class, Class)$targetClass:Class(262)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body(84)",59b7c25003f0fe61163d074d50be558bde6b698b,9aa6f5caacac316c74e374550a387f222e7e1921,1466544472,type change,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$optionalValue:Optional<Object>(128)","spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body:Object(100)",TP,"Change Variable Type optionalValue : Optional<Object> to body : Object in method public handleResult(exchange ServerWebExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body(84)",59b7c25003f0fe61163d074d50be558bde6b698b,9aa6f5caacac316c74e374550a387f222e7e1921,1466544472,rename,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$optionalValue:Optional<Object>(128)","spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body:Object(100)",TP,"Rename Variable optionalValue : Optional<Object> to body : Object in method public handleResult(exchange ServerWebExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body(84)",91d063899bd816cc57815ac0b2317b3ab674868e,2292e46b04c65d4f3f8193b0eab249a8058e59a8,1464212158,rename,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$value:Optional<Object>(129)","spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$optionalValue:Optional<Object>(134)",TP,"Rename Variable value : Optional<Object> to optionalValue : Optional<Object> in method public handleResult(exchange ServerWebExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body(84)",b7b423a0033f22de8ce49c09fcb39e81eaecc94c,e92174c772c0d787be7721ae00c7189f16b05fb5,1454899856,type change,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$value:Object(135)","spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$value:Optional<Object>(136)",TP,"Change Variable Type value : Object to value : Optional<Object> in method public handleResult(exchange ServerWebExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$body(84)",9df3dd449554f0ed4485eaed5bee1f1af66f3777,202825554c022e4262fe3bd20a34faf01ab9d620,1440521146,introduced,spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.reactive.web.dispatch.method.annotation.ResponseBodyResultHandler#handleResult(ServerHttpRequest, ServerHttpResponse, HandlerResult)$value:Object(75)","spring-web-reactive/src/main/java/org.springframework.reactive.web.dispatch.method.annotation.ResponseBodyResultHandler#handleResult(ServerHttpRequest, ServerHttpResponse, HandlerResult)$value:Object(75)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$bodyTypeParameter(85)",fb2e79604859a5b6fbc9b1c491caee8c3a9dbdcc,8c7658144284f2f47124c6ac8131f53320091551,1467597332,introduced,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$bodyTypeParameter:MethodParameter(117)","spring-web-reactive/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$bodyTypeParameter:MethodParameter(117)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$exchange(83)",e59b927fd108d6173c5d5fd8095d2fcb5ab9f135,381855aaf315adfd44e22797bbf14f07d08155d9,1453932307,type change,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(WebServerExchange, HandlerResult)$exchange:WebServerExchange(133)","spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$exchange:ServerWebExchange(133)",TP,"Change Parameter Type exchange : WebServerExchange to exchange : ServerWebExchange in method public handleResult(exchange ServerWebExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$exchange(83)",54e4e012b2b7afee291f11374ccdaecf39c92e2d,4f614fa0fd74ce29c5822e70f4815cc40745a2be,1452274213,introduced,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/web/reactive/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(WebServerExchange, HandlerResult)$exchange:WebServerExchange(131)","spring-web-reactive/src/main/java/org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler#handleResult(WebServerExchange, HandlerResult)$exchange:WebServerExchange(131)",TP,"Merge Parameter [request : ServerHttpRequest, response : ServerHttpResponse] to exchange : WebServerExchange in method public handleResult(exchange WebServerExchange, result HandlerResult) : Mono<Void> from class org.springframework.web.reactive.method.annotation.ResponseBodyResultHandler"
"https://github.com/spring-projects/spring-framework.git","spring-webflux/src/main/java/org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler#handleResult(ServerWebExchange, HandlerResult)$result(83)",9df3dd449554f0ed4485eaed5bee1f1af66f3777,202825554c022e4262fe3bd20a34faf01ab9d620,1440521146,introduced,spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java,spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java,"spring-web-reactive/src/main/java/org.springframework.reactive.web.dispatch.method.annotation.ResponseBodyResultHandler#handleResult(ServerHttpRequest, ServerHttpResponse, HandlerResult)$result:HandlerResult(73)","spring-web-reactive/src/main/java/org.springframework.reactive.web.dispatch.method.annotation.ResponseBodyResultHandler#handleResult(ServerHttpRequest, ServerHttpResponse, HandlerResult)$result:HandlerResult(73)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$asyncContext(166)",d2fce24eb4d685e89ce6e818ac584cfafecbd703,e64907eed8b4accdda53c6be0145087017eae820,1468396419,rename,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$context:AsyncContext(83)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$asyncContext:AsyncContext(81)",TP,"Rename Variable context : AsyncContext to asyncContext : AsyncContext in method protected service(servletRequest HttpServletRequest, servletResponse HttpServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$asyncContext(166)",3b45087c87a3386f74be88cb918a4d2055ae5400,f518d76a771def7289ac4f85ddc66812f428a16f,1436266425,introduced,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$context:AsyncContext(47)","spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$context:AsyncContext(47)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",7be2943c031c4fb1e325fbd9b292c8524d317d2e,5dc49b16ea21ebac20d124d929f872d5aa060254,1530906258,type change,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServerHttpRequest(169)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServletServerHttpRequest(169)",TP,"Change Variable Type httpRequest : ServerHttpRequest to httpRequest : ServletServerHttpRequest in method public service(request ServletRequest, response ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,type change,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request:ServletServerHttpRequest(96)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServerHttpRequest(101)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,rename,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request:ServletServerHttpRequest(96)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServerHttpRequest(101)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,introduced,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServerHttpRequest(101)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest:ServerHttpRequest(101)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",869f6bef4086fe66d642a7e4f841c5716e6e45a3,0aade73c88d5bbde5e6f7383560eeae017045bae,1451584509,rename,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpRequest:ServletServerHttpRequest(59)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$request:ServletServerHttpRequest(71)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",382c98f9680fab9a0c2ad50de18e3385f9cba5c1,da98becf72fbeef836dba366431be2a652e5e001,1449096367,type change,spring-web-reactive/src/main/java/org/springframework/http/server/servlet31/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.servlet31.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpRequest:Servlet31ServerHttpRequest(64)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpRequest:ServletServerHttpRequest(59)",FN,"Change Variable Type httpRequest : Servlet31ServerHttpRequest to httpRequest : ServletServerHttpRequest in method protected service(request HttpServletRequest, response HttpServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",81867fa4237643ca3eae24a8f085bc4b5f9443b3,e9e4bcdc599634ae8879815a33a8b4e41b909f61,1448043044,type change,spring-web-reactive/src/main/java/org/springframework/web/reactive/server/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/http/server/servlet31/Servlet31HttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.server.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpRequest:ServletServerHttpRequest(64)","spring-web-reactive/src/main/java/org.springframework.http.server.servlet31.Servlet31HttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpRequest:Servlet31ServerHttpRequest(64)",FN,"Change Variable Type httpRequest : ServletServerHttpRequest to httpRequest : Servlet31ServerHttpRequest in method protected service(request HttpServletRequest, response HttpServletResponse) : void from class org.springframework.http.server.servlet31.Servlet31HttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpRequest(169)",bb2526752597d1c29fea939b93841a490f5821bf,2cb32a0fd69c528d55d3d53ae98bf886dcb4a5f9,1439323791,introduced,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpRequest:ServletServerHttpRequest(63)","spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpRequest:ServletServerHttpRequest(63)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,type change,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response:ServletServerHttpResponse(98)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse:ServerHttpResponse(104)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,rename,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response:ServletServerHttpResponse(98)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse:ServerHttpResponse(104)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,introduced,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse:ServerHttpResponse(104)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse:ServerHttpResponse(104)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",869f6bef4086fe66d642a7e4f841c5716e6e45a3,0aade73c88d5bbde5e6f7383560eeae017045bae,1451584509,rename,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpResponse:ServletServerHttpResponse(62)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$response:ServletServerHttpResponse(75)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",382c98f9680fab9a0c2ad50de18e3385f9cba5c1,da98becf72fbeef836dba366431be2a652e5e001,1449096367,type change,spring-web-reactive/src/main/java/org/springframework/http/server/servlet31/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.servlet31.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpResponse:Servlet31ServerHttpResponse(68)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpResponse:ServletServerHttpResponse(62)",FN,"Change Variable Type httpResponse : Servlet31ServerHttpResponse to httpResponse : ServletServerHttpResponse in method protected service(request HttpServletRequest, response HttpServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",81867fa4237643ca3eae24a8f085bc4b5f9443b3,e9e4bcdc599634ae8879815a33a8b4e41b909f61,1448043044,type change,spring-web-reactive/src/main/java/org/springframework/web/reactive/server/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/http/server/servlet31/Servlet31HttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.web.reactive.server.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpResponse:ServletServerHttpResponse(68)","spring-web-reactive/src/main/java/org.springframework.http.server.servlet31.Servlet31HttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$httpResponse:Servlet31ServerHttpResponse(68)",FN,"Change Variable Type httpResponse : ServletServerHttpResponse to httpResponse : Servlet31ServerHttpResponse in method protected service(request HttpServletRequest, response HttpServletResponse) : void from class org.springframework.http.server.servlet31.Servlet31HttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$httpResponse(182)",bb2526752597d1c29fea939b93841a490f5821bf,2cb32a0fd69c528d55d3d53ae98bf886dcb4a5f9,1439323791,introduced,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpResponse:ServletServerHttpResponse(67)","spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$httpResponse:ServletServerHttpResponse(67)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$isCompleted(189)",9d421841d56e3ee0817b995185b3c72e83281b14,f05175586e32e660ff190311f0b102c2b3b3a398,1513108284,introduced,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$isCompleted:AtomicBoolean(178)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$isCompleted:AtomicBoolean(178)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$listener(190)",9d421841d56e3ee0817b995185b3c72e83281b14,f05175586e32e660ff190311f0b102c2b3b3a398,1513108284,introduced,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$listener:HandlerResultAsyncListener(179)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$listener:HandlerResultAsyncListener(179)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request(158)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,rename,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$servletRequest:ServletRequest(91)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request:ServletRequest(96)",TP,"Rename Parameter servletRequest : ServletRequest to request : ServletRequest in method public service(request ServletRequest, response ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request(158)",c2fdc9103b828fed387aa28ed39f13de906f1daf,b92d541ba0934052769d0bcf08fec7d8c44d2c2d,1476999758,type change,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$servletRequest:HttpServletRequest(86)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$servletRequest:ServletRequest(91)",TP,"Change Parameter Type servletRequest : HttpServletRequest to servletRequest : ServletRequest in method public service(servletRequest ServletRequest, servletResponse ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request(158)",869f6bef4086fe66d642a7e4f841c5716e6e45a3,0aade73c88d5bbde5e6f7383560eeae017045bae,1451584509,rename,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$request:HttpServletRequest(53)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$servletRequest:HttpServletRequest(64)",TP,"Rename Parameter request : HttpServletRequest to servletRequest : HttpServletRequest in method protected service(servletRequest HttpServletRequest, servletResponse HttpServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$request(158)",3b45087c87a3386f74be88cb918a4d2055ae5400,f518d76a771def7289ac4f85ddc66812f428a16f,1436266425,introduced,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$request:HttpServletRequest(44)","spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$request:HttpServletRequest(44)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response(158)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,rename,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$servletResponse:ServletResponse(91)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response:ServletResponse(96)",TP,"Rename Parameter servletResponse : ServletResponse to response : ServletResponse in method public service(request ServletRequest, response ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response(158)",c2fdc9103b828fed387aa28ed39f13de906f1daf,b92d541ba0934052769d0bcf08fec7d8c44d2c2d,1476999758,type change,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$servletResponse:HttpServletResponse(86)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$servletResponse:ServletResponse(91)",TP,"Change Parameter Type servletResponse : HttpServletResponse to servletResponse : ServletResponse in method public service(servletRequest ServletRequest, servletResponse ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response(158)",869f6bef4086fe66d642a7e4f841c5716e6e45a3,0aade73c88d5bbde5e6f7383560eeae017045bae,1451584509,rename,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web-reactive/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$response:HttpServletResponse(53)","spring-web-reactive/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(HttpServletRequest, HttpServletResponse)$servletResponse:HttpServletResponse(64)",TP,"Rename Parameter response : HttpServletResponse to servletResponse : HttpServletResponse in method protected service(servletRequest HttpServletRequest, servletResponse HttpServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$response(158)",3b45087c87a3386f74be88cb918a4d2055ae5400,f518d76a771def7289ac4f85ddc66812f428a16f,1436266425,introduced,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/rx/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$response:HttpServletResponse(44)","spring-web-reactive/src/main/java/org.springframework.rx.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$response:HttpServletResponse(44)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$subscriber(193)",70f14c14c8951b56059552554f51170c8a089b76,5a2906979816ce1268a8dfe56c5f0a89ad720b99,1481747698,rename,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java,"spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$resultSubscriber:HandlerResultSubscriber(103)","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$subscriber:HandlerResultSubscriber(107)",TP,"Rename Variable resultSubscriber : HandlerResultSubscriber to subscriber : HandlerResultSubscriber in method public service(request ServletRequest, response ServletResponse) : void from class org.springframework.http.server.reactive.ServletHttpHandlerAdapter"
"https://github.com/spring-projects/spring-framework.git","spring-web/src/main/java/org.springframework.http.server.reactive.ServletHttpHandlerAdapter#service(ServletRequest, ServletResponse)$subscriber(193)",bb2526752597d1c29fea939b93841a490f5821bf,2cb32a0fd69c528d55d3d53ae98bf886dcb4a5f9,1439323791,introduced,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,spring-web-reactive/src/main/java/org/springframework/reactive/web/servlet/HttpHandlerServlet.java,"spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$resultSubscriber:HandlerResultSubscriber(69)","spring-web-reactive/src/main/java/org.springframework.reactive.web.servlet.HttpHandlerServlet#service(HttpServletRequest, HttpServletResponse)$resultSubscriber:HandlerResultSubscriber(69)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$conversionAttemptEx(158)",6468aa775ca34cd3b052b9b78562ce0db951a1e4,6418b54f81a9e56242fb78fda4bf95e7b3d4c572,1431986019,rename,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$firstAttemptEx:ConversionFailedException(167)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$conversionAttemptEx:ConversionFailedException(165)",TP,"Rename Variable firstAttemptEx : ConversionFailedException to conversionAttemptEx : ConversionFailedException in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$conversionAttemptEx(158)",207b2315eda924916e12cfc97c652d63a04c8053,84be348cb0ac99896674170dc9f99021b43ba9ee,1322927839,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$firstAttemptEx:ConversionFailedException(134)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$firstAttemptEx:ConversionFailedException(134)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$conversionService(161)",e9823b57b4ff5a8a0b82e56b5720a96b5e5bbbd3,45a0cadf8e7fc5cc082c11ef03f77dc017af64c4,1249778809,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$conversionService:ConversionService(166)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$conversionService:ConversionService(166)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$convertedValue(175)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$convertedValue:Object(163)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$convertedValue:Object(163)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$editor(156)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$editor:PropertyEditor(166)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$editor:PropertyEditor(166)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType(183)",89396ff01ff159aa7df18e332f3888cf9ce3dc20,c4c941c43fc23f58503c7b687fd1469d4a27c777,1467288171,introduced,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:Class<?>(190)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:Class<?>(190)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",89396ff01ff159aa7df18e332f3888cf9ce3dc20,c4c941c43fc23f58503c7b687fd1469d4a27c777,1467288171,introduced,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc:TypeDescriptor(188)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc:TypeDescriptor(188)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",89396ff01ff159aa7df18e332f3888cf9ce3dc20,c4c941c43fc23f58503c7b687fd1469d4a27c777,1467288171,rename,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:TypeDescriptor(187)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc:TypeDescriptor(188)",FN,"null"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",a2a4929c147208e959a93b290e930828287833d8,c84cccf06dad4e3f11cd529ab16a5655bf723820,1307248998,type change,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elemType:Class(144)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:TypeDescriptor(144)",FN,"Change Variable Type elemType : Class to elementType : TypeDescriptor in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",a2a4929c147208e959a93b290e930828287833d8,c84cccf06dad4e3f11cd529ab16a5655bf723820,1307248998,rename,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elemType:Class(144)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:TypeDescriptor(144)",FN,"Rename Variable elemType : Class to elementType : TypeDescriptor in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",124837e2c3ffd185a389c9c21e9a673044d22fe1,cbed1c1b4b5fd74c9cd201890f619a7079804d3f,1269529339,rename,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:Class(208)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elemType:Class(209)",FN,"Rename Variable elementType : Class to elemType : Class in method private convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementTypeDesc(181)",b497f6ccad3eebcc6d475071bb7dd2741557d5e0,5f9b4443194d3aa3948d76956897c0a1d918d546,1260710490,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:Class(207)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$elementType:Class(207)",FN,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$msg(285)",369821dd66fab964df6193f8f1afe5a334a30dfc,347f34c68a7a5bab46cf869e762fb3cee9a1fedc,1227147053,type change,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$msg:StringBuffer(219)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$msg:StringBuilder(213)",TP,"Change Variable Type msg : StringBuffer to msg : StringBuilder in method protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class, descriptor PropertyDescriptor, methodParam MethodParameter) : Object from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$msg(285)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$msg:StringBuffer(219)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$msg:StringBuffer(219)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$newValue(152)",ffc3f6d87d640631c997fc9566679d094cdda267,f813712f5b413b354560cd7cc006352e9defa9a3,1496837955,annotation change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$newValue:Object(148)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$newValue:Object(151)",TP,"Add Parameter Annotation @Nullable in parameter newValue : Object in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$newValue(152)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$newValue:Object(159)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$newValue:Object(159)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue(152)",2d37c966b2831add8fd0e01efa9c1eb8240fbdd3,87598f48e41d483745aba56cbf4e998c6f6d680c,1495868221,annotation change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(147)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue:Object(148)",TP,"Add Parameter Annotation @Nullable in parameter oldValue : Object in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$oldValue(152)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$oldValue:Object(159)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$oldValue:Object(159)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$propertyName(152)",f9b319d3ba9d3141fd5edc4fde558daebd2c596f,1f28825f9da63a13aaf8940aadedcf81358dc506,1496259743,annotation change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$propertyName:String(148)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$propertyName:String(148)",TP,"Add Parameter Annotation @Nullable in parameter propertyName : String in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$propertyName(152)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$propertyName:String(159)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$propertyName:String(159)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$requiredType(153)",2d37c966b2831add8fd0e01efa9c1eb8240fbdd3,87598f48e41d483745aba56cbf4e998c6f6d680c,1495868221,annotation change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$requiredType:Class<T>(148)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$requiredType:Class<T>(149)",TP,"Add Parameter Annotation @Nullable in parameter requiredType : Class<T> in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$requiredType(153)",b72af54f53047c65c7e4a5094c9f2a15df1f57ef,0297116542a3ce33d19a6a81b8240097081376c5,1242081873,type change,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$requiredType:Class(153)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$requiredType:Class<T>(154)",TP,"Change Parameter Type requiredType : Class to requiredType : Class<T> in method protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, descriptor PropertyDescriptor, methodParam MethodParameter) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$requiredType(153)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$requiredType:Class(159)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$requiredType:Class(159)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$sourceTypeDesc(163)",b2e38379566cf788421bd387d1c5ea243692f448,45c542e51e9b01526a97a1644aebfe1e94a2342f,1253305961,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$sourceTypeDesc:TypeDescriptor(169)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$sourceTypeDesc:TypeDescriptor(169)",TP,"Extract Variable sourceTypeDesc : TypeDescriptor in method protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, descriptor PropertyDescriptor, methodParam MethodParameter) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$sourceTypeDesc(278)",6468aa775ca34cd3b052b9b78562ce0db951a1e4,6418b54f81a9e56242fb78fda4bf95e7b3d4c572,1431986019,introduced,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$sourceTypeDesc:TypeDescriptor(281)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$sourceTypeDesc:TypeDescriptor(281)",FP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$sourceTypeDesc(278)",b2e38379566cf788421bd387d1c5ea243692f448,45c542e51e9b01526a97a1644aebfe1e94a2342f,1253305961,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$sourceTypeDesc:TypeDescriptor(169)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$sourceTypeDesc:TypeDescriptor(169)",FN,"Extract Variable sourceTypeDesc : TypeDescriptor in method protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, descriptor PropertyDescriptor, methodParam MethodParameter) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$standardConversion(195)",15e384dfd3659c923be7ff6af53813e731b7fad1,6bce09831060430b00e6ed93785c7d40ac8529a8,1346799586,introduced,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$standardConversion:boolean(184)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$standardConversion:boolean(184)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$strCtor(234)",4de3291dc7bd6f425636b8d7ac7480d110349457,59002f245623d758765b72d598cd78c326c6f5fa,1385412762,type change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$strCtor:Constructor(223)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$strCtor:Constructor<T>(223)",TP,"Change Variable Type strCtor : Constructor to strCtor : Constructor<T> in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$strCtor(234)",9f9f2349cd6cffc0633b83ab9ea284bd7a8ae47f,fee838a65e87f5da4b65b04ea5101681d6308104,1251120642,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$strCtor:Constructor(208)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$strCtor:Constructor(208)",TP,"new variable"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$trimmedValue(249)",9f9f2349cd6cffc0633b83ab9ea284bd7a8ae47f,fee838a65e87f5da4b65b04ea5101681d6308104,1251120642,rename,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$strValue:String(206)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$trimmedValue:String(217)",TP,"Rename Variable strValue : String to trimmedValue : String in method protected convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, descriptor PropertyDescriptor, methodParam MethodParameter) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$trimmedValue(249)",684a4f28c242c7161fb1d8305cf0e3c22def57ab,f11d3436ed21d3908b9e0b569f2d783df161c0a3,1224692017,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$strValue:String(197)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, PropertyDescriptor, MethodParameter)$strValue:String(197)",TP,"added with method"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor(153)",ffc3f6d87d640631c997fc9566679d094cdda267,f813712f5b413b354560cd7cc006352e9defa9a3,1496837955,annotation change,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor:TypeDescriptor(149)","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor:TypeDescriptor(152)",TP,"Add Parameter Annotation @Nullable in parameter typeDescriptor : TypeDescriptor in method public convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/spring-projects/spring-framework.git","spring-beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor(153)",973fb6ce4096d344758b3e0988e90ab401275209,ac490114aee005a66eeb0fba6c3c853552fc6a94,1259286194,introduced,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java,"org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor:TypeDescriptor(187)","org.springframework.beans/src/main/java/org.springframework.beans.TypeConverterDelegate#convertIfNecessary(String, Object, Object, Class, TypeDescriptor)$typeDescriptor:TypeDescriptor(187)",TP,"Add Parameter typeDescriptor : TypeDescriptor in method private convertIfNecessary(propertyName String, oldValue Object, newValue Object, requiredType Class<T>, typeDescriptor TypeDescriptor) : T from class org.springframework.beans.TypeConverterDelegate"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",66cfa8aecb6dcadacd4c2c09eaa3f1f3855db080,afcec01a9c1c8302a81785dc2ad22e01ddb249b7,1494427220,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:BaseStream<DynamicNode,?>(73)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)",TP,"Change Variable Type dynamicNodeStream : BaseStream<DynamicNode,?> to dynamicNodeStream : Stream<DynamicNode> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",febcfe98f5294fd146327ea64163ec4a6465702e,66cfa8aecb6dcadacd4c2c09eaa3f1f3855db080,1494426855,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:BaseStream<DynamicNode,?>(73)",TP,"Change Variable Type dynamicNodeStream : Stream<DynamicNode> to dynamicNodeStream : BaseStream<DynamicNode,?> in method protected invokeTestMethod(context JupiterEngineExecutionContext, dynamicTestExecutor DynamicTestExecutor) : void from class org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)",FP,"new variable"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,rename,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestStream:Stream<DynamicTest>(70)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)",FN,"null"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",abfdc052a981595c074308dc1dcd571e2c1c59d2,1a57e4f386a9f8cd6be0a08a4d914349d32a7f01,1493811550,type change,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestStream:Stream<DynamicTest>(70)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream:Stream<DynamicNode>(73)",FN,"null"
"https://github.com/junit-team/junit5.git","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicNodeStream(90)",0a4da4fd576705a9f6b3c1b748b09b9a1dfb7d32,21b61f5b1b5337625a505cd28dd2761f09a35536,1488135451,introduced,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/TestFactoryTestDescriptor.java,"junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestStream:Stream<DynamicTest>(84)","junit-jupiter-engine/src/main/java/org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor#invokeTestMethod(JupiterEngineExecutionContext, DynamicTestExecutor)$dynamicTestStream:Stream<DynamicTest>(84)",FN,"new variable"
